/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/aws-sdk";
exports.ids = ["vendor-chunks/aws-sdk"];
exports.modules = {

/***/ "(rsc)/../../node_modules/aws-sdk/clients/cognitoidentity.js":
/*!*************************************************************!*\
  !*** ../../node_modules/aws-sdk/clients/cognitoidentity.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ../lib/node_loader */ \"(rsc)/../../node_modules/aws-sdk/lib/node_loader.js\");\nvar AWS = __webpack_require__(/*! ../lib/core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['cognitoidentity'] = {};\nAWS.CognitoIdentity = Service.defineService('cognitoidentity', ['2014-06-30']);\nObject.defineProperty(apiLoader.services['cognitoidentity'], '2014-06-30', {\n  get: function get() {\n    var model = __webpack_require__(/*! ../apis/cognito-identity-2014-06-30.min.json */ \"(rsc)/../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json\");\n    model.paginators = (__webpack_require__(/*! ../apis/cognito-identity-2014-06-30.paginators.json */ \"(rsc)/../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json\").pagination);\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.CognitoIdentity;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvY2xpZW50cy9jb2duaXRvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQU8sQ0FBQywrRUFBb0I7QUFDNUIsVUFBVSxtQkFBTyxDQUFDLGlFQUFhO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxnSUFBOEM7QUFDdEUsdUJBQXVCLGdMQUF5RTtBQUNoRztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2NsaWVudHMvY29nbml0b2lkZW50aXR5LmpzPzU2OWQiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbGliL25vZGVfbG9hZGVyJyk7XG52YXIgQVdTID0gcmVxdWlyZSgnLi4vbGliL2NvcmUnKTtcbnZhciBTZXJ2aWNlID0gQVdTLlNlcnZpY2U7XG52YXIgYXBpTG9hZGVyID0gQVdTLmFwaUxvYWRlcjtcblxuYXBpTG9hZGVyLnNlcnZpY2VzWydjb2duaXRvaWRlbnRpdHknXSA9IHt9O1xuQVdTLkNvZ25pdG9JZGVudGl0eSA9IFNlcnZpY2UuZGVmaW5lU2VydmljZSgnY29nbml0b2lkZW50aXR5JywgWycyMDE0LTA2LTMwJ10pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGFwaUxvYWRlci5zZXJ2aWNlc1snY29nbml0b2lkZW50aXR5J10sICcyMDE0LTA2LTMwJywge1xuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICB2YXIgbW9kZWwgPSByZXF1aXJlKCcuLi9hcGlzL2NvZ25pdG8taWRlbnRpdHktMjAxNC0wNi0zMC5taW4uanNvbicpO1xuICAgIG1vZGVsLnBhZ2luYXRvcnMgPSByZXF1aXJlKCcuLi9hcGlzL2NvZ25pdG8taWRlbnRpdHktMjAxNC0wNi0zMC5wYWdpbmF0b3JzLmpzb24nKS5wYWdpbmF0aW9uO1xuICAgIHJldHVybiBtb2RlbDtcbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBV1MuQ29nbml0b0lkZW50aXR5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/clients/cognitoidentity.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/clients/s3.js":
/*!************************************************!*\
  !*** ../../node_modules/aws-sdk/clients/s3.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ../lib/node_loader */ \"(rsc)/../../node_modules/aws-sdk/lib/node_loader.js\");\nvar AWS = __webpack_require__(/*! ../lib/core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['s3'] = {};\nAWS.S3 = Service.defineService('s3', ['2006-03-01']);\n__webpack_require__(/*! ../lib/services/s3 */ \"(rsc)/../../node_modules/aws-sdk/lib/services/s3.js\");\nObject.defineProperty(apiLoader.services['s3'], '2006-03-01', {\n  get: function get() {\n    var model = __webpack_require__(/*! ../apis/s3-2006-03-01.min.json */ \"(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.min.json\");\n    model.paginators = (__webpack_require__(/*! ../apis/s3-2006-03-01.paginators.json */ \"(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json\").pagination);\n    model.waiters = (__webpack_require__(/*! ../apis/s3-2006-03-01.waiters2.json */ \"(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json\").waiters);\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.S3;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvY2xpZW50cy9zMy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLCtFQUFvQjtBQUM1QixVQUFVLG1CQUFPLENBQUMsaUVBQWE7QUFDL0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQU8sQ0FBQywrRUFBb0I7QUFDNUI7QUFDQTtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLG9HQUFnQztBQUN4RCx1QkFBdUIsb0pBQTJEO0FBQ2xGLG9CQUFvQiw2SUFBc0Q7QUFDMUU7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9jbGllbnRzL3MzLmpzP2ZkYjEiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbGliL25vZGVfbG9hZGVyJyk7XG52YXIgQVdTID0gcmVxdWlyZSgnLi4vbGliL2NvcmUnKTtcbnZhciBTZXJ2aWNlID0gQVdTLlNlcnZpY2U7XG52YXIgYXBpTG9hZGVyID0gQVdTLmFwaUxvYWRlcjtcblxuYXBpTG9hZGVyLnNlcnZpY2VzWydzMyddID0ge307XG5BV1MuUzMgPSBTZXJ2aWNlLmRlZmluZVNlcnZpY2UoJ3MzJywgWycyMDA2LTAzLTAxJ10pO1xucmVxdWlyZSgnLi4vbGliL3NlcnZpY2VzL3MzJyk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoYXBpTG9hZGVyLnNlcnZpY2VzWydzMyddLCAnMjAwNi0wMy0wMScsIHtcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgdmFyIG1vZGVsID0gcmVxdWlyZSgnLi4vYXBpcy9zMy0yMDA2LTAzLTAxLm1pbi5qc29uJyk7XG4gICAgbW9kZWwucGFnaW5hdG9ycyA9IHJlcXVpcmUoJy4uL2FwaXMvczMtMjAwNi0wMy0wMS5wYWdpbmF0b3JzLmpzb24nKS5wYWdpbmF0aW9uO1xuICAgIG1vZGVsLndhaXRlcnMgPSByZXF1aXJlKCcuLi9hcGlzL3MzLTIwMDYtMDMtMDEud2FpdGVyczIuanNvbicpLndhaXRlcnM7XG4gICAgcmV0dXJuIG1vZGVsO1xuICB9LFxuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBjb25maWd1cmFibGU6IHRydWVcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFXUy5TMztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/clients/s3.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/clients/sts.js":
/*!*************************************************!*\
  !*** ../../node_modules/aws-sdk/clients/sts.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ../lib/node_loader */ \"(rsc)/../../node_modules/aws-sdk/lib/node_loader.js\");\nvar AWS = __webpack_require__(/*! ../lib/core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar Service = AWS.Service;\nvar apiLoader = AWS.apiLoader;\n\napiLoader.services['sts'] = {};\nAWS.STS = Service.defineService('sts', ['2011-06-15']);\n__webpack_require__(/*! ../lib/services/sts */ \"(rsc)/../../node_modules/aws-sdk/lib/services/sts.js\");\nObject.defineProperty(apiLoader.services['sts'], '2011-06-15', {\n  get: function get() {\n    var model = __webpack_require__(/*! ../apis/sts-2011-06-15.min.json */ \"(rsc)/../../node_modules/aws-sdk/apis/sts-2011-06-15.min.json\");\n    model.paginators = (__webpack_require__(/*! ../apis/sts-2011-06-15.paginators.json */ \"(rsc)/../../node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json\").pagination);\n    return model;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nmodule.exports = AWS.STS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvY2xpZW50cy9zdHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQU8sQ0FBQywrRUFBb0I7QUFDNUIsVUFBVSxtQkFBTyxDQUFDLGlFQUFhO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFPLENBQUMsaUZBQXFCO0FBQzdCO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyxzR0FBaUM7QUFDekQsdUJBQXVCLHNKQUE0RDtBQUNuRjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2NsaWVudHMvc3RzLmpzPzYzOGQiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbGliL25vZGVfbG9hZGVyJyk7XG52YXIgQVdTID0gcmVxdWlyZSgnLi4vbGliL2NvcmUnKTtcbnZhciBTZXJ2aWNlID0gQVdTLlNlcnZpY2U7XG52YXIgYXBpTG9hZGVyID0gQVdTLmFwaUxvYWRlcjtcblxuYXBpTG9hZGVyLnNlcnZpY2VzWydzdHMnXSA9IHt9O1xuQVdTLlNUUyA9IFNlcnZpY2UuZGVmaW5lU2VydmljZSgnc3RzJywgWycyMDExLTA2LTE1J10pO1xucmVxdWlyZSgnLi4vbGliL3NlcnZpY2VzL3N0cycpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGFwaUxvYWRlci5zZXJ2aWNlc1snc3RzJ10sICcyMDExLTA2LTE1Jywge1xuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICB2YXIgbW9kZWwgPSByZXF1aXJlKCcuLi9hcGlzL3N0cy0yMDExLTA2LTE1Lm1pbi5qc29uJyk7XG4gICAgbW9kZWwucGFnaW5hdG9ycyA9IHJlcXVpcmUoJy4uL2FwaXMvc3RzLTIwMTEtMDYtMTUucGFnaW5hdG9ycy5qc29uJykucGFnaW5hdGlvbjtcbiAgICByZXR1cm4gbW9kZWw7XG4gIH0sXG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQVdTLlNUUztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/clients/sts.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/api_loader.js":
/*!****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/api_loader.js ***!
  \****************************************************/
/***/ ((module) => {

eval("function apiLoader(svc, version) {\n  if (!apiLoader.services.hasOwnProperty(svc)) {\n    throw new Error('InvalidService: Failed to load api for ' + svc);\n  }\n  return apiLoader.services[svc][version];\n}\n\n/**\n * @api private\n *\n * This member of AWS.apiLoader is private, but changing it will necessitate a\n * change to ../scripts/services-table-generator.ts\n */\napiLoader.services = {};\n\n/**\n * @api private\n */\nmodule.exports = apiLoader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2FwaV9sb2FkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2FwaV9sb2FkZXIuanM/Yjc4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhcGlMb2FkZXIoc3ZjLCB2ZXJzaW9uKSB7XG4gIGlmICghYXBpTG9hZGVyLnNlcnZpY2VzLmhhc093blByb3BlcnR5KHN2YykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWRTZXJ2aWNlOiBGYWlsZWQgdG8gbG9hZCBhcGkgZm9yICcgKyBzdmMpO1xuICB9XG4gIHJldHVybiBhcGlMb2FkZXIuc2VydmljZXNbc3ZjXVt2ZXJzaW9uXTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqXG4gKiBUaGlzIG1lbWJlciBvZiBBV1MuYXBpTG9hZGVyIGlzIHByaXZhdGUsIGJ1dCBjaGFuZ2luZyBpdCB3aWxsIG5lY2Vzc2l0YXRlIGFcbiAqIGNoYW5nZSB0byAuLi9zY3JpcHRzL3NlcnZpY2VzLXRhYmxlLWdlbmVyYXRvci50c1xuICovXG5hcGlMb2FkZXIuc2VydmljZXMgPSB7fTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhcGlMb2FkZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/api_loader.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/config.js":
/*!************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/config.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n__webpack_require__(/*! ./credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials.js\");\n__webpack_require__(/*! ./credentials/credential_provider_chain */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/credential_provider_chain.js\");\nvar PromisesDependency;\n\n/**\n * The main configuration class used by all service objects to set\n * the region, credentials, and other options for requests.\n *\n * By default, credentials and region settings are left unconfigured.\n * This should be configured by the application before using any\n * AWS service APIs.\n *\n * In order to set global configuration options, properties should\n * be assigned to the global {AWS.config} object.\n *\n * @see AWS.config\n *\n * @!group General Configuration Options\n *\n * @!attribute credentials\n *   @return [AWS.Credentials] the AWS credentials to sign requests with.\n *\n * @!attribute region\n *   @example Set the global region setting to us-west-2\n *     AWS.config.update({region: 'us-west-2'});\n *   @return [AWS.Credentials] The region to send service requests to.\n *   @see http://docs.amazonwebservices.com/general/latest/gr/rande.html\n *     A list of available endpoints for each AWS service\n *\n * @!attribute maxRetries\n *   @return [Integer] the maximum amount of retries to perform for a\n *     service request. By default this value is calculated by the specific\n *     service object that the request is being made to.\n *\n * @!attribute maxRedirects\n *   @return [Integer] the maximum amount of redirects to follow for a\n *     service request. Defaults to 10.\n *\n * @!attribute paramValidation\n *   @return [Boolean|map] whether input parameters should be validated against\n *     the operation description before sending the request. Defaults to true.\n *     Pass a map to enable any of the following specific validation features:\n *\n *     * **min** [Boolean] &mdash; Validates that a value meets the min\n *       constraint. This is enabled by default when paramValidation is set\n *       to `true`.\n *     * **max** [Boolean] &mdash; Validates that a value meets the max\n *       constraint.\n *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n *       regular expression.\n *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n *       of the allowable enum values.\n *\n * @!attribute computeChecksums\n *   @return [Boolean] whether to compute checksums for payload bodies when\n *     the service accepts it (currently supported in S3 and SQS only).\n *\n * @!attribute convertResponseTypes\n *   @return [Boolean] whether types are converted when parsing response data.\n *     Currently only supported for JSON based services. Turning this off may\n *     improve performance on large response payloads. Defaults to `true`.\n *\n * @!attribute correctClockSkew\n *   @return [Boolean] whether to apply a clock skew correction and retry\n *     requests that fail because of an skewed client clock. Defaults to\n *     `false`.\n *\n * @!attribute sslEnabled\n *   @return [Boolean] whether SSL is enabled for requests\n *\n * @!attribute s3ForcePathStyle\n *   @return [Boolean] whether to force path style URLs for S3 objects\n *\n * @!attribute s3BucketEndpoint\n *   @note Setting this configuration option requires an `endpoint` to be\n *     provided explicitly to the service constructor.\n *   @return [Boolean] whether the provided endpoint addresses an individual\n *     bucket (false if it addresses the root API endpoint).\n *\n * @!attribute s3DisableBodySigning\n *   @return [Boolean] whether to disable S3 body signing when using signature version `v4`.\n *     Body signing can only be disabled when using https. Defaults to `true`.\n *\n * @!attribute s3UsEast1RegionalEndpoint\n *   @return ['legacy'|'regional'] when region is set to 'us-east-1', whether to send s3\n *     request to global endpoints or 'us-east-1' regional endpoints. This config is only\n *     applicable to S3 client;\n *     Defaults to 'legacy'\n * @!attribute s3UseArnRegion\n *   @return [Boolean] whether to override the request region with the region inferred\n *     from requested resource's ARN. Only available for S3 buckets\n *     Defaults to `true`\n *\n * @!attribute useAccelerateEndpoint\n *   @note This configuration option is only compatible with S3 while accessing\n *     dns-compatible buckets.\n *   @return [Boolean] Whether to use the Accelerate endpoint with the S3 service.\n *     Defaults to `false`.\n *\n * @!attribute retryDelayOptions\n *   @example Set the base retry delay for all services to 300 ms\n *     AWS.config.update({retryDelayOptions: {base: 300}});\n *     // Delays with maxRetries = 3: 300, 600, 1200\n *   @example Set a custom backoff function to provide delay values on retries\n *     AWS.config.update({retryDelayOptions: {customBackoff: function(retryCount, err) {\n *       // returns delay in ms\n *     }}});\n *   @return [map] A set of options to configure the retry delay on retryable errors.\n *     Currently supported options are:\n *\n *     * **base** [Integer] &mdash; The base number of milliseconds to use in the\n *       exponential backoff for operation retries. Defaults to 100 ms for all services except\n *       DynamoDB, where it defaults to 50ms.\n *\n *     * **customBackoff ** [function] &mdash; A custom function that accepts a\n *       retry count and error and returns the amount of time to delay in\n *       milliseconds. If the result is a non-zero negative value, no further\n *       retry attempts will be made. The `base` option will be ignored if this\n *       option is supplied. The function is only called for retryable errors.\n *\n * @!attribute httpOptions\n *   @return [map] A set of options to pass to the low-level HTTP request.\n *     Currently supported options are:\n *\n *     * **proxy** [String] &mdash; the URL to proxy requests through\n *     * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n *       HTTP requests with. Used for connection pooling. Note that for\n *       SSL connections, a special Agent object is used in order to enable\n *       peer certificate verification. This feature is only supported in the\n *       Node.js environment.\n *     * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n *       failing to establish a connection with the server after\n *       `connectTimeout` milliseconds. This timeout has no effect once a socket\n *       connection has been established.\n *     * **timeout** [Integer] &mdash; The number of milliseconds a request can\n *       take before automatically being terminated.\n *       Defaults to two minutes (120000).\n *     * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n *       HTTP requests. Used in the browser environment only. Set to false to\n *       send requests synchronously. Defaults to true (async on).\n *     * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n *       property of an XMLHttpRequest object. Used in the browser environment\n *       only. Defaults to false.\n * @!attribute logger\n *   @return [#write,#log] an object that responds to .write() (like a stream)\n *     or .log() (like the console object) in order to log information about\n *     requests\n *\n * @!attribute systemClockOffset\n *   @return [Number] an offset value in milliseconds to apply to all signing\n *     times. Use this to compensate for clock skew when your system may be\n *     out of sync with the service time. Note that this configuration option\n *     can only be applied to the global `AWS.config` object and cannot be\n *     overridden in service-specific configuration. Defaults to 0 milliseconds.\n *\n * @!attribute signatureVersion\n *   @return [String] the signature version to sign requests with (overriding\n *     the API configuration). Possible values are: 'v2', 'v3', 'v4'.\n *\n * @!attribute signatureCache\n *   @return [Boolean] whether the signature to sign requests with (overriding\n *     the API configuration) is cached. Only applies to the signature version 'v4'.\n *     Defaults to `true`.\n *\n * @!attribute endpointDiscoveryEnabled\n *   @return [Boolean|undefined] whether to call operations with endpoints\n *     given by service dynamically. Setting this config to `true` will enable\n *     endpoint discovery for all applicable operations. Setting it to `false`\n *     will explicitly disable endpoint discovery even though operations that\n *     require endpoint discovery will presumably fail. Leaving it to\n *     `undefined` means SDK only do endpoint discovery when it's required.\n *     Defaults to `undefined`\n *\n * @!attribute endpointCacheSize\n *   @return [Number] the size of the global cache storing endpoints from endpoint\n *     discovery operations. Once endpoint cache is created, updating this setting\n *     cannot change existing cache size.\n *     Defaults to 1000\n *\n * @!attribute hostPrefixEnabled\n *   @return [Boolean] whether to marshal request parameters to the prefix of\n *     hostname. Defaults to `true`.\n *\n * @!attribute stsRegionalEndpoints\n *   @return ['legacy'|'regional'] whether to send sts request to global endpoints or\n *     regional endpoints.\n *     Defaults to 'legacy'.\n *\n * @!attribute useFipsEndpoint\n *   @return [Boolean] Enables FIPS compatible endpoints. Defaults to `false`.\n *\n * @!attribute useDualstackEndpoint\n *   @return [Boolean] Enables IPv6 dualstack endpoint. Defaults to `false`.\n */\nAWS.Config = AWS.util.inherit({\n  /**\n   * @!endgroup\n   */\n\n  /**\n   * Creates a new configuration object. This is the object that passes\n   * option data along to service requests, including credentials, security,\n   * region information, and some service specific settings.\n   *\n   * @example Creating a new configuration object with credentials and region\n   *   var config = new AWS.Config({\n   *     accessKeyId: 'AKID', secretAccessKey: 'SECRET', region: 'us-west-2'\n   *   });\n   * @option options accessKeyId [String] your AWS access key ID.\n   * @option options secretAccessKey [String] your AWS secret access key.\n   * @option options sessionToken [AWS.Credentials] the optional AWS\n   *   session token to sign requests with.\n   * @option options credentials [AWS.Credentials] the AWS credentials\n   *   to sign requests with. You can either specify this object, or\n   *   specify the accessKeyId and secretAccessKey options directly.\n   * @option options credentialProvider [AWS.CredentialProviderChain] the\n   *   provider chain used to resolve credentials if no static `credentials`\n   *   property is set.\n   * @option options region [String] the region to send service requests to.\n   *   See {region} for more information.\n   * @option options maxRetries [Integer] the maximum amount of retries to\n   *   attempt with a request. See {maxRetries} for more information.\n   * @option options maxRedirects [Integer] the maximum amount of redirects to\n   *   follow with a request. See {maxRedirects} for more information.\n   * @option options sslEnabled [Boolean] whether to enable SSL for\n   *   requests.\n   * @option options paramValidation [Boolean|map] whether input parameters\n   *   should be validated against the operation description before sending\n   *   the request. Defaults to true. Pass a map to enable any of the\n   *   following specific validation features:\n   *\n   *   * **min** [Boolean] &mdash; Validates that a value meets the min\n   *     constraint. This is enabled by default when paramValidation is set\n   *     to `true`.\n   *   * **max** [Boolean] &mdash; Validates that a value meets the max\n   *     constraint.\n   *   * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *     regular expression.\n   *   * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *     of the allowable enum values.\n   * @option options computeChecksums [Boolean] whether to compute checksums\n   *   for payload bodies when the service accepts it (currently supported\n   *   in S3 only)\n   * @option options convertResponseTypes [Boolean] whether types are converted\n   *     when parsing response data. Currently only supported for JSON based\n   *     services. Turning this off may improve performance on large response\n   *     payloads. Defaults to `true`.\n   * @option options correctClockSkew [Boolean] whether to apply a clock skew\n   *     correction and retry requests that fail because of an skewed client\n   *     clock. Defaults to `false`.\n   * @option options s3ForcePathStyle [Boolean] whether to force path\n   *   style URLs for S3 objects.\n   * @option options s3BucketEndpoint [Boolean] whether the provided endpoint\n   *   addresses an individual bucket (false if it addresses the root API\n   *   endpoint). Note that setting this configuration option requires an\n   *   `endpoint` to be provided explicitly to the service constructor.\n   * @option options s3DisableBodySigning [Boolean] whether S3 body signing\n   *   should be disabled when using signature version `v4`. Body signing\n   *   can only be disabled when using https. Defaults to `true`.\n   * @option options s3UsEast1RegionalEndpoint ['legacy'|'regional'] when region\n   *   is set to 'us-east-1', whether to send s3 request to global endpoints or\n   *   'us-east-1' regional endpoints. This config is only applicable to S3 client.\n   *   Defaults to `legacy`\n   * @option options s3UseArnRegion [Boolean] whether to override the request region\n   *   with the region inferred from requested resource's ARN. Only available for S3 buckets\n   *   Defaults to `true`\n   *\n   * @option options retryDelayOptions [map] A set of options to configure\n   *   the retry delay on retryable errors. Currently supported options are:\n   *\n   *   * **base** [Integer] &mdash; The base number of milliseconds to use in the\n   *     exponential backoff for operation retries. Defaults to 100 ms for all\n   *     services except DynamoDB, where it defaults to 50ms.\n   *   * **customBackoff ** [function] &mdash; A custom function that accepts a\n   *     retry count and error and returns the amount of time to delay in\n   *     milliseconds. If the result is a non-zero negative value, no further\n   *     retry attempts will be made. The `base` option will be ignored if this\n   *     option is supplied. The function is only called for retryable errors.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; Sets the socket to timeout after timeout\n   *     milliseconds of inactivity on the socket. Defaults to two minutes\n   *     (120000).\n   *   * **xhrAsync** [Boolean] &mdash; Whether the SDK will send asynchronous\n   *     HTTP requests. Used in the browser environment only. Set to false to\n   *     send requests synchronously. Defaults to true (async on).\n   *   * **xhrWithCredentials** [Boolean] &mdash; Sets the \"withCredentials\"\n   *     property of an XMLHttpRequest object. Used in the browser environment\n   *     only. Defaults to false.\n   * @option options apiVersion [String, Date] a String in YYYY-MM-DD format\n   *   (or a date) that represents the latest possible API version that can be\n   *   used in all services (unless overridden by `apiVersions`). Specify\n   *   'latest' to use the latest possible version.\n   * @option options apiVersions [map<String, String|Date>] a map of service\n   *   identifiers (the lowercase service class name) with the API version to\n   *   use when instantiating a service. Specify 'latest' for each individual\n   *   that can use the latest available version.\n   * @option options logger [#write,#log] an object that responds to .write()\n   *   (like a stream) or .log() (like the console object) in order to log\n   *   information about requests\n   * @option options systemClockOffset [Number] an offset value in milliseconds\n   *   to apply to all signing times. Use this to compensate for clock skew\n   *   when your system may be out of sync with the service time. Note that\n   *   this configuration option can only be applied to the global `AWS.config`\n   *   object and cannot be overridden in service-specific configuration.\n   *   Defaults to 0 milliseconds.\n   * @option options signatureVersion [String] the signature version to sign\n   *   requests with (overriding the API configuration). Possible values are:\n   *   'v2', 'v3', 'v4'.\n   * @option options signatureCache [Boolean] whether the signature to sign\n   *   requests with (overriding the API configuration) is cached. Only applies\n   *   to the signature version 'v4'. Defaults to `true`.\n   * @option options dynamoDbCrc32 [Boolean] whether to validate the CRC32\n   *   checksum of HTTP response bodies returned by DynamoDB. Default: `true`.\n   * @option options useAccelerateEndpoint [Boolean] Whether to use the\n   *   S3 Transfer Acceleration endpoint with the S3 service. Default: `false`.\n   * @option options clientSideMonitoring [Boolean] whether to collect and\n   *   publish this client's performance metrics of all its API requests.\n   * @option options endpointDiscoveryEnabled [Boolean|undefined] whether to\n   *   call operations with endpoints given by service dynamically. Setting this\n   * config to `true` will enable endpoint discovery for all applicable operations.\n   *   Setting it to `false` will explicitly disable endpoint discovery even though\n   *   operations that require endpoint discovery will presumably fail. Leaving it\n   *   to `undefined` means SDK will only do endpoint discovery when it's required.\n   *   Defaults to `undefined`\n   * @option options endpointCacheSize [Number] the size of the global cache storing\n   *   endpoints from endpoint discovery operations. Once endpoint cache is created,\n   *   updating this setting cannot change existing cache size.\n   *   Defaults to 1000\n   * @option options hostPrefixEnabled [Boolean] whether to marshal request\n   *   parameters to the prefix of hostname.\n   *   Defaults to `true`.\n   * @option options stsRegionalEndpoints ['legacy'|'regional'] whether to send sts request\n   *   to global endpoints or regional endpoints.\n   *   Defaults to 'legacy'.\n   * @option options useFipsEndpoint [Boolean] Enables FIPS compatible endpoints.\n   *   Defaults to `false`.\n   * @option options useDualstackEndpoint [Boolean] Enables IPv6 dualstack endpoint.\n   *   Defaults to `false`.\n   */\n  constructor: function Config(options) {\n    if (options === undefined) options = {};\n    options = this.extractCredentials(options);\n\n    AWS.util.each.call(this, this.keys, function (key, value) {\n      this.set(key, options[key], value);\n    });\n  },\n\n  /**\n   * @!group Managing Credentials\n   */\n\n  /**\n   * Loads credentials from the configuration object. This is used internally\n   * by the SDK to ensure that refreshable {Credentials} objects are properly\n   * refreshed and loaded when sending a request. If you want to ensure that\n   * your credentials are loaded prior to a request, you can use this method\n   * directly to provide accurate credential data stored in the object.\n   *\n   * @note If you configure the SDK with static or environment credentials,\n   *   the credential data should already be present in {credentials} attribute.\n   *   This method is primarily necessary to load credentials from asynchronous\n   *   sources, or sources that can refresh credentials periodically.\n   * @example Getting your access key\n   *   AWS.config.getCredentials(function(err) {\n   *     if (err) console.log(err.stack); // credentials not loaded\n   *     else console.log(\"Access Key:\", AWS.config.credentials.accessKeyId);\n   *   })\n   * @callback callback function(err)\n   *   Called when the {credentials} have been properly set on the configuration\n   *   object.\n   *\n   *   @param err [Error] if this is set, credentials were not successfully\n   *     loaded and this error provides information why.\n   * @see credentials\n   * @see Credentials\n   */\n  getCredentials: function getCredentials(callback) {\n    var self = this;\n\n    function finish(err) {\n      callback(err, err ? null : self.credentials);\n    }\n\n    function credError(msg, err) {\n      return new AWS.util.error(err || new Error(), {\n        code: 'CredentialsError',\n        message: msg,\n        name: 'CredentialsError'\n      });\n    }\n\n    function getAsyncCredentials() {\n      self.credentials.get(function(err) {\n        if (err) {\n          var msg = 'Could not load credentials from ' +\n            self.credentials.constructor.name;\n          err = credError(msg, err);\n        }\n        finish(err);\n      });\n    }\n\n    function getStaticCredentials() {\n      var err = null;\n      if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {\n        err = credError('Missing credentials');\n      }\n      finish(err);\n    }\n\n    if (self.credentials) {\n      if (typeof self.credentials.get === 'function') {\n        getAsyncCredentials();\n      } else { // static credentials\n        getStaticCredentials();\n      }\n    } else if (self.credentialProvider) {\n      self.credentialProvider.resolve(function(err, creds) {\n        if (err) {\n          err = credError('Could not load credentials from any providers', err);\n        }\n        self.credentials = creds;\n        finish(err);\n      });\n    } else {\n      finish(credError('No credentials to load'));\n    }\n  },\n\n  /**\n   * Loads token from the configuration object. This is used internally\n   * by the SDK to ensure that refreshable {Token} objects are properly\n   * refreshed and loaded when sending a request. If you want to ensure that\n   * your token is loaded prior to a request, you can use this method\n   * directly to provide accurate token data stored in the object.\n   *\n   * @note If you configure the SDK with static token, the token data should\n   *   already be present in {token} attribute. This method is primarily necessary\n   *   to load token from asynchronous sources, or sources that can refresh\n   *   token periodically.\n   * @example Getting your access token\n   *   AWS.config.getToken(function(err) {\n   *     if (err) console.log(err.stack); // token not loaded\n   *     else console.log(\"Token:\", AWS.config.token.token);\n   *   })\n   * @callback callback function(err)\n   *   Called when the {token} have been properly set on the configuration object.\n   *\n   *   @param err [Error] if this is set, token was not successfully loaded and\n   *     this error provides information why.\n   * @see token\n   */\n  getToken: function getToken(callback) {\n    var self = this;\n\n    function finish(err) {\n      callback(err, err ? null : self.token);\n    }\n\n    function tokenError(msg, err) {\n      return new AWS.util.error(err || new Error(), {\n        code: 'TokenError',\n        message: msg,\n        name: 'TokenError'\n      });\n    }\n\n    function getAsyncToken() {\n      self.token.get(function(err) {\n        if (err) {\n          var msg = 'Could not load token from ' +\n            self.token.constructor.name;\n          err = tokenError(msg, err);\n        }\n        finish(err);\n      });\n    }\n\n    function getStaticToken() {\n      var err = null;\n      if (!self.token.token) {\n        err = tokenError('Missing token');\n      }\n      finish(err);\n    }\n\n    if (self.token) {\n      if (typeof self.token.get === 'function') {\n        getAsyncToken();\n      } else { // static token\n        getStaticToken();\n      }\n    } else if (self.tokenProvider) {\n      self.tokenProvider.resolve(function(err, token) {\n        if (err) {\n          err = tokenError('Could not load token from any providers', err);\n        }\n        self.token = token;\n        finish(err);\n      });\n    } else {\n      finish(tokenError('No token to load'));\n    }\n  },\n\n  /**\n   * @!group Loading and Setting Configuration Options\n   */\n\n  /**\n   * @overload update(options, allowUnknownKeys = false)\n   *   Updates the current configuration object with new options.\n   *\n   *   @example Update maxRetries property of a configuration object\n   *     config.update({maxRetries: 10});\n   *   @param [Object] options a map of option keys and values.\n   *   @param [Boolean] allowUnknownKeys whether unknown keys can be set on\n   *     the configuration object. Defaults to `false`.\n   *   @see constructor\n   */\n  update: function update(options, allowUnknownKeys) {\n    allowUnknownKeys = allowUnknownKeys || false;\n    options = this.extractCredentials(options);\n    AWS.util.each.call(this, options, function (key, value) {\n      if (allowUnknownKeys || Object.prototype.hasOwnProperty.call(this.keys, key) ||\n          AWS.Service.hasService(key)) {\n        this.set(key, value);\n      }\n    });\n  },\n\n  /**\n   * Loads configuration data from a JSON file into this config object.\n   * @note Loading configuration will reset all existing configuration\n   *   on the object.\n   * @!macro nobrowser\n   * @param path [String] the path relative to your process's current\n   *    working directory to load configuration from.\n   * @return [AWS.Config] the same configuration object\n   */\n  loadFromPath: function loadFromPath(path) {\n    this.clear();\n\n    var options = JSON.parse(AWS.util.readFileSync(path));\n    var fileSystemCreds = new AWS.FileSystemCredentials(path);\n    var chain = new AWS.CredentialProviderChain();\n    chain.providers.unshift(fileSystemCreds);\n    chain.resolve(function (err, creds) {\n      if (err) throw err;\n      else options.credentials = creds;\n    });\n\n    this.constructor(options);\n\n    return this;\n  },\n\n  /**\n   * Clears configuration data on this object\n   *\n   * @api private\n   */\n  clear: function clear() {\n    /*jshint forin:false */\n    AWS.util.each.call(this, this.keys, function (key) {\n      delete this[key];\n    });\n\n    // reset credential provider\n    this.set('credentials', undefined);\n    this.set('credentialProvider', undefined);\n  },\n\n  /**\n   * Sets a property on the configuration object, allowing for a\n   * default value\n   * @api private\n   */\n  set: function set(property, value, defaultValue) {\n    if (value === undefined) {\n      if (defaultValue === undefined) {\n        defaultValue = this.keys[property];\n      }\n      if (typeof defaultValue === 'function') {\n        this[property] = defaultValue.call(this);\n      } else {\n        this[property] = defaultValue;\n      }\n    } else if (property === 'httpOptions' && this[property]) {\n      // deep merge httpOptions\n      this[property] = AWS.util.merge(this[property], value);\n    } else {\n      this[property] = value;\n    }\n  },\n\n  /**\n   * All of the keys with their default values.\n   *\n   * @constant\n   * @api private\n   */\n  keys: {\n    credentials: null,\n    credentialProvider: null,\n    region: null,\n    logger: null,\n    apiVersions: {},\n    apiVersion: null,\n    endpoint: undefined,\n    httpOptions: {\n      timeout: 120000\n    },\n    maxRetries: undefined,\n    maxRedirects: 10,\n    paramValidation: true,\n    sslEnabled: true,\n    s3ForcePathStyle: false,\n    s3BucketEndpoint: false,\n    s3DisableBodySigning: true,\n    s3UsEast1RegionalEndpoint: 'legacy',\n    s3UseArnRegion: undefined,\n    computeChecksums: true,\n    convertResponseTypes: true,\n    correctClockSkew: false,\n    customUserAgent: null,\n    dynamoDbCrc32: true,\n    systemClockOffset: 0,\n    signatureVersion: null,\n    signatureCache: true,\n    retryDelayOptions: {},\n    useAccelerateEndpoint: false,\n    clientSideMonitoring: false,\n    endpointDiscoveryEnabled: undefined,\n    endpointCacheSize: 1000,\n    hostPrefixEnabled: true,\n    stsRegionalEndpoints: 'legacy',\n    useFipsEndpoint: false,\n    useDualstackEndpoint: false,\n    token: null\n  },\n\n  /**\n   * Extracts accessKeyId, secretAccessKey and sessionToken\n   * from a configuration hash.\n   *\n   * @api private\n   */\n  extractCredentials: function extractCredentials(options) {\n    if (options.accessKeyId && options.secretAccessKey) {\n      options = AWS.util.copy(options);\n      options.credentials = new AWS.Credentials(options);\n    }\n    return options;\n  },\n\n  /**\n   * Sets the promise dependency the SDK will use wherever Promises are returned.\n   * Passing `null` will force the SDK to use native Promises if they are available.\n   * If native Promises are not available, passing `null` will have no effect.\n   * @param [Constructor] dep A reference to a Promise constructor\n   */\n  setPromisesDependency: function setPromisesDependency(dep) {\n    PromisesDependency = dep;\n    // if null was passed in, we should try to use native promises\n    if (dep === null && typeof Promise === 'function') {\n      PromisesDependency = Promise;\n    }\n    var constructors = [AWS.Request, AWS.Credentials, AWS.CredentialProviderChain];\n    if (AWS.S3) {\n      constructors.push(AWS.S3);\n      if (AWS.S3.ManagedUpload) {\n        constructors.push(AWS.S3.ManagedUpload);\n      }\n    }\n    AWS.util.addPromises(constructors, PromisesDependency);\n  },\n\n  /**\n   * Gets the promise dependency set by `AWS.config.setPromisesDependency`.\n   */\n  getPromisesDependency: function getPromisesDependency() {\n    return PromisesDependency;\n  }\n});\n\n/**\n * @return [AWS.Config] The global configuration object singleton instance\n * @readonly\n * @see AWS.Config\n */\nAWS.config = new AWS.Config();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/config.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/config_regional_endpoint.js":
/*!******************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/config_regional_endpoint.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n/**\n * @api private\n */\nfunction validateRegionalEndpointsFlagValue(configValue, errorOptions) {\n  if (typeof configValue !== 'string') return undefined;\n  else if (['legacy', 'regional'].indexOf(configValue.toLowerCase()) >= 0) {\n    return configValue.toLowerCase();\n  } else {\n    throw AWS.util.error(new Error(), errorOptions);\n  }\n}\n\n/**\n * Resolve the configuration value for regional endpoint from difference sources: client\n * config, environmental variable, shared config file. Value can be case-insensitive\n * 'legacy' or 'reginal'.\n * @param originalConfig user-supplied config object to resolve\n * @param options a map of config property names from individual configuration source\n *  - env: name of environmental variable that refers to the config\n *  - sharedConfig: name of shared configuration file property that refers to the config\n *  - clientConfig: name of client configuration property that refers to the config\n *\n * @api private\n */\nfunction resolveRegionalEndpointsFlag(originalConfig, options) {\n  originalConfig = originalConfig || {};\n  //validate config value\n  var resolved;\n  if (originalConfig[options.clientConfig]) {\n    resolved = validateRegionalEndpointsFlagValue(originalConfig[options.clientConfig], {\n      code: 'InvalidConfiguration',\n      message: 'invalid \"' + options.clientConfig + '\" configuration. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + originalConfig[options.clientConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  if (!AWS.util.isNode()) return resolved;\n  //validate environmental variable\n  if (Object.prototype.hasOwnProperty.call(process.env, options.env)) {\n    var envFlag = process.env[options.env];\n    resolved = validateRegionalEndpointsFlagValue(envFlag, {\n      code: 'InvalidEnvironmentalVariable',\n      message: 'invalid ' + options.env + ' environmental variable. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + process.env[options.env] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  //validate shared config file\n  var profile = {};\n  try {\n    var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n    profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n  } catch (e) {};\n  if (profile && Object.prototype.hasOwnProperty.call(profile, options.sharedConfig)) {\n    var fileFlag = profile[options.sharedConfig];\n    resolved = validateRegionalEndpointsFlagValue(fileFlag, {\n      code: 'InvalidConfiguration',\n      message: 'invalid ' + options.sharedConfig + ' profile config. Expect \"legacy\" ' +\n      ' or \"regional\". Got \"' + profile[options.sharedConfig] + '\".'\n    });\n    if (resolved) return resolved;\n  }\n  return resolved;\n}\n\nmodule.exports = resolveRegionalEndpointsFlag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NvbmZpZ19yZWdpb25hbF9lbmRwb2ludC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNERBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvY29uZmlnX3JlZ2lvbmFsX2VuZHBvaW50LmpzPzFlMGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4vY29yZScpO1xuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gdmFsaWRhdGVSZWdpb25hbEVuZHBvaW50c0ZsYWdWYWx1ZShjb25maWdWYWx1ZSwgZXJyb3JPcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgY29uZmlnVmFsdWUgIT09ICdzdHJpbmcnKSByZXR1cm4gdW5kZWZpbmVkO1xuICBlbHNlIGlmIChbJ2xlZ2FjeScsICdyZWdpb25hbCddLmluZGV4T2YoY29uZmlnVmFsdWUudG9Mb3dlckNhc2UoKSkgPj0gMCkge1xuICAgIHJldHVybiBjb25maWdWYWx1ZS50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IEFXUy51dGlsLmVycm9yKG5ldyBFcnJvcigpLCBlcnJvck9wdGlvbnMpO1xuICB9XG59XG5cbi8qKlxuICogUmVzb2x2ZSB0aGUgY29uZmlndXJhdGlvbiB2YWx1ZSBmb3IgcmVnaW9uYWwgZW5kcG9pbnQgZnJvbSBkaWZmZXJlbmNlIHNvdXJjZXM6IGNsaWVudFxuICogY29uZmlnLCBlbnZpcm9ubWVudGFsIHZhcmlhYmxlLCBzaGFyZWQgY29uZmlnIGZpbGUuIFZhbHVlIGNhbiBiZSBjYXNlLWluc2Vuc2l0aXZlXG4gKiAnbGVnYWN5JyBvciAncmVnaW5hbCcuXG4gKiBAcGFyYW0gb3JpZ2luYWxDb25maWcgdXNlci1zdXBwbGllZCBjb25maWcgb2JqZWN0IHRvIHJlc29sdmVcbiAqIEBwYXJhbSBvcHRpb25zIGEgbWFwIG9mIGNvbmZpZyBwcm9wZXJ0eSBuYW1lcyBmcm9tIGluZGl2aWR1YWwgY29uZmlndXJhdGlvbiBzb3VyY2VcbiAqICAtIGVudjogbmFtZSBvZiBlbnZpcm9ubWVudGFsIHZhcmlhYmxlIHRoYXQgcmVmZXJzIHRvIHRoZSBjb25maWdcbiAqICAtIHNoYXJlZENvbmZpZzogbmFtZSBvZiBzaGFyZWQgY29uZmlndXJhdGlvbiBmaWxlIHByb3BlcnR5IHRoYXQgcmVmZXJzIHRvIHRoZSBjb25maWdcbiAqICAtIGNsaWVudENvbmZpZzogbmFtZSBvZiBjbGllbnQgY29uZmlndXJhdGlvbiBwcm9wZXJ0eSB0aGF0IHJlZmVycyB0byB0aGUgY29uZmlnXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVSZWdpb25hbEVuZHBvaW50c0ZsYWcob3JpZ2luYWxDb25maWcsIG9wdGlvbnMpIHtcbiAgb3JpZ2luYWxDb25maWcgPSBvcmlnaW5hbENvbmZpZyB8fCB7fTtcbiAgLy92YWxpZGF0ZSBjb25maWcgdmFsdWVcbiAgdmFyIHJlc29sdmVkO1xuICBpZiAob3JpZ2luYWxDb25maWdbb3B0aW9ucy5jbGllbnRDb25maWddKSB7XG4gICAgcmVzb2x2ZWQgPSB2YWxpZGF0ZVJlZ2lvbmFsRW5kcG9pbnRzRmxhZ1ZhbHVlKG9yaWdpbmFsQ29uZmlnW29wdGlvbnMuY2xpZW50Q29uZmlnXSwge1xuICAgICAgY29kZTogJ0ludmFsaWRDb25maWd1cmF0aW9uJyxcbiAgICAgIG1lc3NhZ2U6ICdpbnZhbGlkIFwiJyArIG9wdGlvbnMuY2xpZW50Q29uZmlnICsgJ1wiIGNvbmZpZ3VyYXRpb24uIEV4cGVjdCBcImxlZ2FjeVwiICcgK1xuICAgICAgJyBvciBcInJlZ2lvbmFsXCIuIEdvdCBcIicgKyBvcmlnaW5hbENvbmZpZ1tvcHRpb25zLmNsaWVudENvbmZpZ10gKyAnXCIuJ1xuICAgIH0pO1xuICAgIGlmIChyZXNvbHZlZCkgcmV0dXJuIHJlc29sdmVkO1xuICB9XG4gIGlmICghQVdTLnV0aWwuaXNOb2RlKCkpIHJldHVybiByZXNvbHZlZDtcbiAgLy92YWxpZGF0ZSBlbnZpcm9ubWVudGFsIHZhcmlhYmxlXG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocHJvY2Vzcy5lbnYsIG9wdGlvbnMuZW52KSkge1xuICAgIHZhciBlbnZGbGFnID0gcHJvY2Vzcy5lbnZbb3B0aW9ucy5lbnZdO1xuICAgIHJlc29sdmVkID0gdmFsaWRhdGVSZWdpb25hbEVuZHBvaW50c0ZsYWdWYWx1ZShlbnZGbGFnLCB7XG4gICAgICBjb2RlOiAnSW52YWxpZEVudmlyb25tZW50YWxWYXJpYWJsZScsXG4gICAgICBtZXNzYWdlOiAnaW52YWxpZCAnICsgb3B0aW9ucy5lbnYgKyAnIGVudmlyb25tZW50YWwgdmFyaWFibGUuIEV4cGVjdCBcImxlZ2FjeVwiICcgK1xuICAgICAgJyBvciBcInJlZ2lvbmFsXCIuIEdvdCBcIicgKyBwcm9jZXNzLmVudltvcHRpb25zLmVudl0gKyAnXCIuJ1xuICAgIH0pO1xuICAgIGlmIChyZXNvbHZlZCkgcmV0dXJuIHJlc29sdmVkO1xuICB9XG4gIC8vdmFsaWRhdGUgc2hhcmVkIGNvbmZpZyBmaWxlXG4gIHZhciBwcm9maWxlID0ge307XG4gIHRyeSB7XG4gICAgdmFyIHByb2ZpbGVzID0gQVdTLnV0aWwuZ2V0UHJvZmlsZXNGcm9tU2hhcmVkQ29uZmlnKEFXUy51dGlsLmluaUxvYWRlcik7XG4gICAgcHJvZmlsZSA9IHByb2ZpbGVzW3Byb2Nlc3MuZW52LkFXU19QUk9GSUxFIHx8IEFXUy51dGlsLmRlZmF1bHRQcm9maWxlXTtcbiAgfSBjYXRjaCAoZSkge307XG4gIGlmIChwcm9maWxlICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwcm9maWxlLCBvcHRpb25zLnNoYXJlZENvbmZpZykpIHtcbiAgICB2YXIgZmlsZUZsYWcgPSBwcm9maWxlW29wdGlvbnMuc2hhcmVkQ29uZmlnXTtcbiAgICByZXNvbHZlZCA9IHZhbGlkYXRlUmVnaW9uYWxFbmRwb2ludHNGbGFnVmFsdWUoZmlsZUZsYWcsIHtcbiAgICAgIGNvZGU6ICdJbnZhbGlkQ29uZmlndXJhdGlvbicsXG4gICAgICBtZXNzYWdlOiAnaW52YWxpZCAnICsgb3B0aW9ucy5zaGFyZWRDb25maWcgKyAnIHByb2ZpbGUgY29uZmlnLiBFeHBlY3QgXCJsZWdhY3lcIiAnICtcbiAgICAgICcgb3IgXCJyZWdpb25hbFwiLiBHb3QgXCInICsgcHJvZmlsZVtvcHRpb25zLnNoYXJlZENvbmZpZ10gKyAnXCIuJ1xuICAgIH0pO1xuICAgIGlmIChyZXNvbHZlZCkgcmV0dXJuIHJlc29sdmVkO1xuICB9XG4gIHJldHVybiByZXNvbHZlZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlUmVnaW9uYWxFbmRwb2ludHNGbGFnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/config_regional_endpoint.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/core.js":
/*!**********************************************!*\
  !*** ../../node_modules/aws-sdk/lib/core.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * The main AWS namespace\n */\nvar AWS = { util: __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\") };\n\n/**\n * @api private\n * @!macro [new] nobrowser\n *   @note This feature is not supported in the browser environment of the SDK.\n */\nvar _hidden = {}; _hidden.toString(); // hack to parse macro\n\n/**\n * @api private\n */\nmodule.exports = AWS;\n\nAWS.util.update(AWS, {\n\n  /**\n   * @constant\n   */\n  VERSION: '2.1607.0',\n\n  /**\n   * @api private\n   */\n  Signers: {},\n\n  /**\n   * @api private\n   */\n  Protocol: {\n    Json: __webpack_require__(/*! ./protocol/json */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/json.js\"),\n    Query: __webpack_require__(/*! ./protocol/query */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/query.js\"),\n    Rest: __webpack_require__(/*! ./protocol/rest */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js\"),\n    RestJson: __webpack_require__(/*! ./protocol/rest_json */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_json.js\"),\n    RestXml: __webpack_require__(/*! ./protocol/rest_xml */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_xml.js\")\n  },\n\n  /**\n   * @api private\n   */\n  XML: {\n    Builder: __webpack_require__(/*! ./xml/builder */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/builder.js\"),\n    Parser: null // conditionally set based on environment\n  },\n\n  /**\n   * @api private\n   */\n  JSON: {\n    Builder: __webpack_require__(/*! ./json/builder */ \"(rsc)/../../node_modules/aws-sdk/lib/json/builder.js\"),\n    Parser: __webpack_require__(/*! ./json/parser */ \"(rsc)/../../node_modules/aws-sdk/lib/json/parser.js\")\n  },\n\n  /**\n   * @api private\n   */\n  Model: {\n    Api: __webpack_require__(/*! ./model/api */ \"(rsc)/../../node_modules/aws-sdk/lib/model/api.js\"),\n    Operation: __webpack_require__(/*! ./model/operation */ \"(rsc)/../../node_modules/aws-sdk/lib/model/operation.js\"),\n    Shape: __webpack_require__(/*! ./model/shape */ \"(rsc)/../../node_modules/aws-sdk/lib/model/shape.js\"),\n    Paginator: __webpack_require__(/*! ./model/paginator */ \"(rsc)/../../node_modules/aws-sdk/lib/model/paginator.js\"),\n    ResourceWaiter: __webpack_require__(/*! ./model/resource_waiter */ \"(rsc)/../../node_modules/aws-sdk/lib/model/resource_waiter.js\")\n  },\n\n  /**\n   * @api private\n   */\n  apiLoader: __webpack_require__(/*! ./api_loader */ \"(rsc)/../../node_modules/aws-sdk/lib/api_loader.js\"),\n\n  /**\n   * @api private\n   */\n  EndpointCache: (__webpack_require__(/*! ../vendor/endpoint-cache */ \"(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/index.js\").EndpointCache)\n});\n__webpack_require__(/*! ./sequential_executor */ \"(rsc)/../../node_modules/aws-sdk/lib/sequential_executor.js\");\n__webpack_require__(/*! ./service */ \"(rsc)/../../node_modules/aws-sdk/lib/service.js\");\n__webpack_require__(/*! ./config */ \"(rsc)/../../node_modules/aws-sdk/lib/config.js\");\n__webpack_require__(/*! ./http */ \"(rsc)/../../node_modules/aws-sdk/lib/http.js\");\n__webpack_require__(/*! ./event_listeners */ \"(rsc)/../../node_modules/aws-sdk/lib/event_listeners.js\");\n__webpack_require__(/*! ./request */ \"(rsc)/../../node_modules/aws-sdk/lib/request.js\");\n__webpack_require__(/*! ./response */ \"(rsc)/../../node_modules/aws-sdk/lib/response.js\");\n__webpack_require__(/*! ./resource_waiter */ \"(rsc)/../../node_modules/aws-sdk/lib/resource_waiter.js\");\n__webpack_require__(/*! ./signers/request_signer */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/request_signer.js\");\n__webpack_require__(/*! ./param_validator */ \"(rsc)/../../node_modules/aws-sdk/lib/param_validator.js\");\n__webpack_require__(/*! ./maintenance_mode_message */ \"(rsc)/../../node_modules/aws-sdk/lib/maintenance_mode_message.js\");\n\n/**\n * @readonly\n * @return [AWS.SequentialExecutor] a collection of global event listeners that\n *   are attached to every sent request.\n * @see AWS.Request AWS.Request for a list of events to listen for\n * @example Logging the time taken to send a request\n *   AWS.events.on('send', function startSend(resp) {\n *     resp.startTime = new Date().getTime();\n *   }).on('complete', function calculateTime(resp) {\n *     var time = (new Date().getTime() - resp.startTime) / 1000;\n *     console.log('Request took ' + time + ' seconds');\n *   });\n *\n *   new AWS.S3().listBuckets(); // prints 'Request took 0.285 seconds'\n */\nAWS.events = new AWS.SequentialExecutor();\n\n//create endpoint cache lazily\nAWS.util.memoizedProperty(AWS, 'endpointCache', function() {\n  return new AWS.EndpointCache(AWS.config.endpointCacheSize);\n}, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NvcmUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxNQUFNLG1CQUFPLENBQUMsNERBQVE7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0JBQW9COztBQUV0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxtQkFBTyxDQUFDLDhFQUFpQjtBQUNuQyxXQUFXLG1CQUFPLENBQUMsZ0ZBQWtCO0FBQ3JDLFVBQVUsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDbkMsY0FBYyxtQkFBTyxDQUFDLHdGQUFzQjtBQUM1QyxhQUFhLG1CQUFPLENBQUMsc0ZBQXFCO0FBQzFDLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsMEVBQWU7QUFDcEM7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDRFQUFnQjtBQUNyQyxZQUFZLG1CQUFPLENBQUMsMEVBQWU7QUFDbkMsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsbUJBQU8sQ0FBQyxzRUFBYTtBQUM5QixlQUFlLG1CQUFPLENBQUMsa0ZBQW1CO0FBQzFDLFdBQVcsbUJBQU8sQ0FBQywwRUFBZTtBQUNsQyxlQUFlLG1CQUFPLENBQUMsa0ZBQW1CO0FBQzFDLG9CQUFvQixtQkFBTyxDQUFDLDhGQUF5QjtBQUNyRCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyx3RUFBYzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNJQUFpRDtBQUNsRSxDQUFDO0FBQ0QsbUJBQU8sQ0FBQywwRkFBdUI7QUFDL0IsbUJBQU8sQ0FBQyxrRUFBVztBQUNuQixtQkFBTyxDQUFDLGdFQUFVO0FBQ2xCLG1CQUFPLENBQUMsNERBQVE7QUFDaEIsbUJBQU8sQ0FBQyxrRkFBbUI7QUFDM0IsbUJBQU8sQ0FBQyxrRUFBVztBQUNuQixtQkFBTyxDQUFDLG9FQUFZO0FBQ3BCLG1CQUFPLENBQUMsa0ZBQW1CO0FBQzNCLG1CQUFPLENBQUMsZ0dBQTBCO0FBQ2xDLG1CQUFPLENBQUMsa0ZBQW1CO0FBQzNCLG1CQUFPLENBQUMsb0dBQTRCOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NvcmUuanM/NGQ0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBtYWluIEFXUyBuYW1lc3BhY2VcbiAqL1xudmFyIEFXUyA9IHsgdXRpbDogcmVxdWlyZSgnLi91dGlsJykgfTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqIEAhbWFjcm8gW25ld10gbm9icm93c2VyXG4gKiAgIEBub3RlIFRoaXMgZmVhdHVyZSBpcyBub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIGVudmlyb25tZW50IG9mIHRoZSBTREsuXG4gKi9cbnZhciBfaGlkZGVuID0ge307IF9oaWRkZW4udG9TdHJpbmcoKTsgLy8gaGFjayB0byBwYXJzZSBtYWNyb1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFXUztcblxuQVdTLnV0aWwudXBkYXRlKEFXUywge1xuXG4gIC8qKlxuICAgKiBAY29uc3RhbnRcbiAgICovXG4gIFZFUlNJT046ICcyLjE2MDcuMCcsXG5cbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgU2lnbmVyczoge30sXG5cbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgUHJvdG9jb2w6IHtcbiAgICBKc29uOiByZXF1aXJlKCcuL3Byb3RvY29sL2pzb24nKSxcbiAgICBRdWVyeTogcmVxdWlyZSgnLi9wcm90b2NvbC9xdWVyeScpLFxuICAgIFJlc3Q6IHJlcXVpcmUoJy4vcHJvdG9jb2wvcmVzdCcpLFxuICAgIFJlc3RKc29uOiByZXF1aXJlKCcuL3Byb3RvY29sL3Jlc3RfanNvbicpLFxuICAgIFJlc3RYbWw6IHJlcXVpcmUoJy4vcHJvdG9jb2wvcmVzdF94bWwnKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIFhNTDoge1xuICAgIEJ1aWxkZXI6IHJlcXVpcmUoJy4veG1sL2J1aWxkZXInKSxcbiAgICBQYXJzZXI6IG51bGwgLy8gY29uZGl0aW9uYWxseSBzZXQgYmFzZWQgb24gZW52aXJvbm1lbnRcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBKU09OOiB7XG4gICAgQnVpbGRlcjogcmVxdWlyZSgnLi9qc29uL2J1aWxkZXInKSxcbiAgICBQYXJzZXI6IHJlcXVpcmUoJy4vanNvbi9wYXJzZXInKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIE1vZGVsOiB7XG4gICAgQXBpOiByZXF1aXJlKCcuL21vZGVsL2FwaScpLFxuICAgIE9wZXJhdGlvbjogcmVxdWlyZSgnLi9tb2RlbC9vcGVyYXRpb24nKSxcbiAgICBTaGFwZTogcmVxdWlyZSgnLi9tb2RlbC9zaGFwZScpLFxuICAgIFBhZ2luYXRvcjogcmVxdWlyZSgnLi9tb2RlbC9wYWdpbmF0b3InKSxcbiAgICBSZXNvdXJjZVdhaXRlcjogcmVxdWlyZSgnLi9tb2RlbC9yZXNvdXJjZV93YWl0ZXInKVxuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIGFwaUxvYWRlcjogcmVxdWlyZSgnLi9hcGlfbG9hZGVyJyksXG5cbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgRW5kcG9pbnRDYWNoZTogcmVxdWlyZSgnLi4vdmVuZG9yL2VuZHBvaW50LWNhY2hlJykuRW5kcG9pbnRDYWNoZVxufSk7XG5yZXF1aXJlKCcuL3NlcXVlbnRpYWxfZXhlY3V0b3InKTtcbnJlcXVpcmUoJy4vc2VydmljZScpO1xucmVxdWlyZSgnLi9jb25maWcnKTtcbnJlcXVpcmUoJy4vaHR0cCcpO1xucmVxdWlyZSgnLi9ldmVudF9saXN0ZW5lcnMnKTtcbnJlcXVpcmUoJy4vcmVxdWVzdCcpO1xucmVxdWlyZSgnLi9yZXNwb25zZScpO1xucmVxdWlyZSgnLi9yZXNvdXJjZV93YWl0ZXInKTtcbnJlcXVpcmUoJy4vc2lnbmVycy9yZXF1ZXN0X3NpZ25lcicpO1xucmVxdWlyZSgnLi9wYXJhbV92YWxpZGF0b3InKTtcbnJlcXVpcmUoJy4vbWFpbnRlbmFuY2VfbW9kZV9tZXNzYWdlJyk7XG5cbi8qKlxuICogQHJlYWRvbmx5XG4gKiBAcmV0dXJuIFtBV1MuU2VxdWVudGlhbEV4ZWN1dG9yXSBhIGNvbGxlY3Rpb24gb2YgZ2xvYmFsIGV2ZW50IGxpc3RlbmVycyB0aGF0XG4gKiAgIGFyZSBhdHRhY2hlZCB0byBldmVyeSBzZW50IHJlcXVlc3QuXG4gKiBAc2VlIEFXUy5SZXF1ZXN0IEFXUy5SZXF1ZXN0IGZvciBhIGxpc3Qgb2YgZXZlbnRzIHRvIGxpc3RlbiBmb3JcbiAqIEBleGFtcGxlIExvZ2dpbmcgdGhlIHRpbWUgdGFrZW4gdG8gc2VuZCBhIHJlcXVlc3RcbiAqICAgQVdTLmV2ZW50cy5vbignc2VuZCcsIGZ1bmN0aW9uIHN0YXJ0U2VuZChyZXNwKSB7XG4gKiAgICAgcmVzcC5zdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAqICAgfSkub24oJ2NvbXBsZXRlJywgZnVuY3Rpb24gY2FsY3VsYXRlVGltZShyZXNwKSB7XG4gKiAgICAgdmFyIHRpbWUgPSAobmV3IERhdGUoKS5nZXRUaW1lKCkgLSByZXNwLnN0YXJ0VGltZSkgLyAxMDAwO1xuICogICAgIGNvbnNvbGUubG9nKCdSZXF1ZXN0IHRvb2sgJyArIHRpbWUgKyAnIHNlY29uZHMnKTtcbiAqICAgfSk7XG4gKlxuICogICBuZXcgQVdTLlMzKCkubGlzdEJ1Y2tldHMoKTsgLy8gcHJpbnRzICdSZXF1ZXN0IHRvb2sgMC4yODUgc2Vjb25kcydcbiAqL1xuQVdTLmV2ZW50cyA9IG5ldyBBV1MuU2VxdWVudGlhbEV4ZWN1dG9yKCk7XG5cbi8vY3JlYXRlIGVuZHBvaW50IGNhY2hlIGxhemlseVxuQVdTLnV0aWwubWVtb2l6ZWRQcm9wZXJ0eShBV1MsICdlbmRwb2ludENhY2hlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgQVdTLkVuZHBvaW50Q2FjaGUoQVdTLmNvbmZpZy5lbmRwb2ludENhY2hlU2l6ZSk7XG59LCB0cnVlKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/core.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Represents your AWS security credentials, specifically the\n * {accessKeyId}, {secretAccessKey}, and optional {sessionToken}.\n * Creating a `Credentials` object allows you to pass around your\n * security information to configuration and service objects.\n *\n * Note that this class typically does not need to be constructed manually,\n * as the {AWS.Config} and {AWS.Service} classes both accept simple\n * options hashes with the three keys. These structures will be converted\n * into Credentials objects automatically.\n *\n * ## Expiring and Refreshing Credentials\n *\n * Occasionally credentials can expire in the middle of a long-running\n * application. In this case, the SDK will automatically attempt to\n * refresh the credentials from the storage location if the Credentials\n * class implements the {refresh} method.\n *\n * If you are implementing a credential storage location, you\n * will want to create a subclass of the `Credentials` class and\n * override the {refresh} method. This method allows credentials to be\n * retrieved from the backing store, be it a file system, database, or\n * some network storage. The method should reset the credential attributes\n * on the object.\n *\n * @!attribute expired\n *   @return [Boolean] whether the credentials have been expired and\n *     require a refresh. Used in conjunction with {expireTime}.\n * @!attribute expireTime\n *   @return [Date] a time when credentials should be considered expired. Used\n *     in conjunction with {expired}.\n * @!attribute accessKeyId\n *   @return [String] the AWS access key ID\n * @!attribute secretAccessKey\n *   @return [String] the AWS secret access key\n * @!attribute sessionToken\n *   @return [String] an optional AWS session token\n */\nAWS.Credentials = AWS.util.inherit({\n  /**\n   * A credentials object can be created using positional arguments or an options\n   * hash.\n   *\n   * @overload AWS.Credentials(accessKeyId, secretAccessKey, sessionToken=null)\n   *   Creates a Credentials object with a given set of credential information\n   *   as positional arguments.\n   *   @param accessKeyId [String] the AWS access key ID\n   *   @param secretAccessKey [String] the AWS secret access key\n   *   @param sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials('akid', 'secret', 'session');\n   * @overload AWS.Credentials(options)\n   *   Creates a Credentials object with a given set of credential information\n   *   as an options hash.\n   *   @option options accessKeyId [String] the AWS access key ID\n   *   @option options secretAccessKey [String] the AWS secret access key\n   *   @option options sessionToken [String] the optional AWS session token\n   *   @example Create a credentials object with AWS credentials\n   *     var creds = new AWS.Credentials({\n   *       accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'session'\n   *     });\n   */\n  constructor: function Credentials() {\n    // hide secretAccessKey from being displayed with util.inspect\n    AWS.util.hideProperties(this, ['secretAccessKey']);\n\n    this.expired = false;\n    this.expireTime = null;\n    this.refreshCallbacks = [];\n    if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      var creds = arguments[0].credentials || arguments[0];\n      this.accessKeyId = creds.accessKeyId;\n      this.secretAccessKey = creds.secretAccessKey;\n      this.sessionToken = creds.sessionToken;\n    } else {\n      this.accessKeyId = arguments[0];\n      this.secretAccessKey = arguments[1];\n      this.sessionToken = arguments[2];\n    }\n  },\n\n  /**\n   * @return [Integer] the number of seconds before {expireTime} during which\n   *   the credentials will be considered expired.\n   */\n  expiryWindow: 15,\n\n  /**\n   * @return [Boolean] whether the credentials object should call {refresh}\n   * @note Subclasses should override this method to provide custom refresh\n   *   logic.\n   */\n  needsRefresh: function needsRefresh() {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n\n    if (this.expireTime && adjustedTime > this.expireTime) {\n      return true;\n    } else {\n      return this.expired || !this.accessKeyId || !this.secretAccessKey;\n    }\n  },\n\n  /**\n   * Gets the existing credentials, refreshing them if they are not yet loaded\n   * or have expired. Users should call this method before using {refresh},\n   * as this will not attempt to reload credentials when they are already\n   * loaded into the object.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means either credentials\n   *   do not need to be refreshed or refreshed credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   */\n  get: function get(callback) {\n    var self = this;\n    if (this.needsRefresh()) {\n      this.refresh(function(err) {\n        if (!err) self.expired = false; // reset expired flag\n        if (callback) callback(err);\n      });\n    } else if (callback) {\n      callback();\n    }\n  },\n\n  /**\n   * @!method  getPromise()\n   *   Returns a 'thenable' promise.\n   *   Gets the existing credentials, refreshing them if they are not yet loaded\n   *   or have expired. Users should call this method before using {refresh},\n   *   as this will not attempt to reload credentials when they are already\n   *   loaded into the object.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means either credentials do not need to be refreshed or refreshed\n   *     credentials information has been loaded into the object (as the\n   *     `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `get` call.\n   *   @example Calling the `getPromise` method.\n   *     var promise = credProvider.getPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * @!method  refreshPromise()\n   *   Returns a 'thenable' promise.\n   *   Refreshes the credentials. Users should call {get} before attempting\n   *   to forcibly refresh credentials.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means refreshed credentials information has been loaded into the object\n   *     (as the `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Calling the `refreshPromise` method.\n   *     var promise = credProvider.refreshPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * Refreshes the credentials. Users should call {get} before attempting\n   * to forcibly refresh credentials.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means refreshed\n   *   credentials information has been loaded into the object (as the\n   *   `accessKeyId`, `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @note Subclasses should override this class to reset the\n   *   {accessKeyId}, {secretAccessKey} and optional {sessionToken}\n   *   on the credentials object and then call the callback with\n   *   any error information.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.expired = false;\n    callback();\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  coalesceRefresh: function coalesceRefresh(callback, sync) {\n    var self = this;\n    if (self.refreshCallbacks.push(callback) === 1) {\n      self.load(function onLoad(err) {\n        AWS.util.arrayEach(self.refreshCallbacks, function(callback) {\n          if (sync) {\n            callback(err);\n          } else {\n            // callback could throw, so defer to ensure all callbacks are notified\n            AWS.util.defer(function () {\n              callback(err);\n            });\n          }\n        });\n        self.refreshCallbacks.length = 0;\n      });\n    }\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    callback();\n  }\n});\n\n/**\n * @api private\n */\nAWS.Credentials.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);\n  this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.Credentials.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getPromise;\n  delete this.prototype.refreshPromise;\n};\n\nAWS.util.addPromises(AWS.Credentials);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * AWS.ChainableTemporaryCredentials differs from AWS.TemporaryCredentials in\n * the way masterCredentials and refreshes are handled.\n * AWS.ChainableTemporaryCredentials refreshes expired credentials using the\n * masterCredentials passed by the user to support chaining of STS credentials.\n * However, AWS.TemporaryCredentials recursively collapses the masterCredentials\n * during instantiation, precluding the ability to refresh credentials which\n * require intermediate, temporary credentials.\n *\n * For example, if the application should use RoleA, which must be assumed from\n * RoleB, and the environment provides credentials which can assume RoleB, then\n * AWS.ChainableTemporaryCredentials must be used to support refreshing the\n * temporary credentials for RoleA:\n *\n * ```javascript\n * var roleACreds = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: 'RoleA'},\n *   masterCredentials: new AWS.ChainableTemporaryCredentials({\n *     params: {RoleArn: 'RoleB'},\n *     masterCredentials: new AWS.EnvironmentCredentials('AWS')\n *   })\n * });\n * ```\n *\n * If AWS.TemporaryCredentials had been used in the previous example,\n * `roleACreds` would fail to refresh because `roleACreds` would\n * use the environment credentials for the AssumeRole request.\n *\n * Another difference is that AWS.ChainableTemporaryCredentials creates the STS\n * service instance during instantiation while AWS.TemporaryCredentials creates\n * the STS service instance during the first refresh. Creating the service\n * instance during instantiation effectively captures the master credentials\n * from the global config, so that subsequent changes to the global config do\n * not affect the master credentials used to refresh the temporary credentials.\n *\n * This allows an instance of AWS.ChainableTemporaryCredentials to be assigned\n * to AWS.config.credentials:\n *\n * ```javascript\n * var envCreds = new AWS.EnvironmentCredentials('AWS');\n * AWS.config.credentials = envCreds;\n * // masterCredentials will be envCreds\n * AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * Similarly, to use the CredentialProviderChain's default providers as the\n * master credentials, simply create a new instance of\n * AWS.ChainableTemporaryCredentials:\n *\n * ```javascript\n * AWS.config.credentials = new ChainableTemporaryCredentials({\n *   params: {RoleArn: '...'}\n * });\n * ```\n *\n * @!attribute service\n *   @return [AWS.STS] the STS service instance used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.ChainableTemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @param options [map] a set of options\n   * @option options params [map] ({}) a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role. If a `SerialNumber` parameter is passed in, {tokenCodeFn} must\n   *   also be passed in or an error will be thrown.\n   * @option options masterCredentials [AWS.Credentials] the master credentials\n   *   used to get and refresh temporary credentials from AWS STS. By default,\n   *   AWS.config.credentials or AWS.config.credentialProvider will be used.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   `TokenCode`, if `SerialNumber` is provided for profile in {params}. Function\n   *   is called with value of `SerialNumber` and `callback`, and should provide\n   *   the `TokenCode` or an error to the callback in the format\n   *   `callback(err, token)`.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.ChainableTemporaryCredentials({\n   *     params: {\n   *       RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials'\n   *     }\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function ChainableTemporaryCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options || {};\n    this.errorCode = 'ChainableTemporaryCredentialsProviderFailure';\n    this.expired = true;\n    this.tokenCodeFn = null;\n\n    var params = AWS.util.copy(options.params) || {};\n    if (params.RoleArn) {\n      params.RoleSessionName = params.RoleSessionName || 'temporary-credentials';\n    }\n    if (params.SerialNumber) {\n      if (!options.tokenCodeFn || (typeof options.tokenCodeFn !== 'function')) {\n        throw new AWS.util.error(\n          new Error('tokenCodeFn must be a function when params.SerialNumber is given'),\n          {code: this.errorCode}\n        );\n      } else {\n        this.tokenCodeFn = options.tokenCodeFn;\n      }\n    }\n    var config = AWS.util.merge(\n      {\n        params: params,\n        credentials: options.masterCredentials || AWS.config.credentials\n      },\n      options.stsConfig || {}\n    );\n    this.service = new STS(config);\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    var operation = self.service.config.params.RoleArn ? 'assumeRole' : 'getSessionToken';\n    this.getTokenCode(function (err, tokenCode) {\n      var params = {};\n      if (err) {\n        callback(err);\n        return;\n      }\n      if (tokenCode) {\n        params.TokenCode = tokenCode;\n      }\n      self.service[operation](params, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getTokenCode: function getTokenCode(callback) {\n    var self = this;\n    if (this.tokenCodeFn) {\n      this.tokenCodeFn(this.service.config.params.SerialNumber, function (err, token) {\n        if (err) {\n          var message = err;\n          if (err instanceof Error) {\n            message = err.message;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: self.errorCode}\n            )\n          );\n          return;\n        }\n        callback(null, token);\n      });\n    } else {\n      callback(null);\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar CognitoIdentity = __webpack_require__(/*! ../../clients/cognitoidentity */ \"(rsc)/../../node_modules/aws-sdk/clients/cognitoidentity.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation using\n * the Amazon Cognito Identity service.\n *\n * By default this provider gets credentials using the\n * {AWS.CognitoIdentity.getCredentialsForIdentity} service operation, which\n * requires either an `IdentityId` or an `IdentityPoolId` (Amazon Cognito\n * Identity Pool ID), which is used to call {AWS.CognitoIdentity.getId} to\n * obtain an `IdentityId`. If the identity or identity pool is not configured in\n * the Amazon Cognito Console to use IAM roles with the appropriate permissions,\n * then additionally a `RoleArn` is required containing the ARN of the IAM trust\n * policy for the Amazon Cognito role that the user will log into. If a `RoleArn`\n * is provided, then this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation, after first getting an\n * Open ID token from {AWS.CognitoIdentity.getOpenIdToken}.\n *\n * In addition, if this credential provider is used to provide authenticated\n * login, the `Logins` map may be set to the tokens provided by the respective\n * identity providers. See {constructor} for an example on creating a credentials\n * object with proper property values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.Logins['graph.facebook.com'] = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.CognitoIdentity.getId},\n *     {AWS.CognitoIdentity.getOpenIdToken}, and\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.CognitoIdentity.getCredentialsForIdentity}, or\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n * @!attribute identityId\n *   @return [String] the Cognito ID returned by the last call to\n *     {AWS.CognitoIdentity.getOpenIdToken}. This ID represents the actual\n *     final resolved identity ID from Amazon Cognito.\n */\nAWS.CognitoIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * @api private\n   */\n  localStorageKey: {\n    id: 'aws.cognito.identity-id.',\n    providers: 'aws.cognito.identity-providers.'\n  },\n\n  /**\n   * Creates a new credentials object.\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n   *\n   *     // either IdentityPoolId or IdentityId is required\n   *     // See the IdentityPoolId param for AWS.CognitoIdentity.getID (linked below)\n   *     // See the IdentityId param for AWS.CognitoIdentity.getCredentialsForIdentity\n   *     // or AWS.CognitoIdentity.getOpenIdToken (linked below)\n   *     IdentityPoolId: 'us-east-1:1699ebc0-7900-4099-b910-2df94f52a030',\n   *     IdentityId: 'us-east-1:128d0a74-c82f-4553-916d-90053e4a8b0f'\n   *\n   *     // optional, only necessary when the identity pool is not configured\n   *     // to use IAM roles in the Amazon Cognito Console\n   *     // See the RoleArn param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleArn: 'arn:aws:iam::1234567890:role/MYAPP-CognitoIdentity',\n   *\n   *     // optional tokens, used for authenticated login\n   *     // See the Logins param for AWS.CognitoIdentity.getID (linked below)\n   *     Logins: {\n   *       'graph.facebook.com': 'FBTOKEN',\n   *       'www.amazon.com': 'AMAZONTOKEN',\n   *       'accounts.google.com': 'GOOGLETOKEN',\n   *       'api.twitter.com': 'TWITTERTOKEN',\n   *       'www.digits.com': 'DIGITSTOKEN'\n   *     },\n   *\n   *     // optional name, defaults to web-identity\n   *     // See the RoleSessionName param for AWS.STS.assumeRoleWithWebIdentity (linked below)\n   *     RoleSessionName: 'web',\n   *\n   *     // optional, only necessary when application runs in a browser\n   *     // and multiple users are signed in at once, used for caching\n   *     LoginId: 'example@gmail.com'\n   *\n   *   }, {\n   *      // optionally provide configuration to apply to the underlying service clients\n   *      // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *      // region should match the region your identity pool is located in\n   *      region: 'us-east-1',\n   *\n   *      // specify timeout options\n   *      httpOptions: {\n   *        timeout: 100\n   *      }\n   *   });\n   * @see AWS.CognitoIdentity.getId\n   * @see AWS.CognitoIdentity.getCredentialsForIdentity\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.CognitoIdentity.getOpenIdToken\n   * @see AWS.Config\n   * @note If a region is not provided in the global AWS.config, or\n   *   specified in the `clientConfig` to the CognitoIdentityCredentials\n   *   constructor, you may encounter a 'Missing credentials in config' error\n   *   when calling making a service call.\n   */\n  constructor: function CognitoIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.data = null;\n    this._identityId = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n    this.loadCachedId();\n    var self = this;\n    Object.defineProperty(this, 'identityId', {\n      get: function() {\n        self.loadCachedId();\n        return self._identityId || self.params.IdentityId;\n      },\n      set: function(identityId) {\n        self._identityId = identityId;\n      }\n    });\n  },\n\n  /**\n   * Refreshes credentials using {AWS.CognitoIdentity.getCredentialsForIdentity},\n   * or {AWS.STS.assumeRoleWithWebIdentity}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.data = null;\n    self._identityId = null;\n    self.getId(function(err) {\n      if (!err) {\n        if (!self.params.RoleArn) {\n          self.getCredentialsForIdentity(callback);\n        } else {\n          self.getCredentialsFromSTS(callback);\n        }\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * Clears the cached Cognito ID associated with the currently configured\n   * identity pool ID. Use this to manually invalidate your cache if\n   * the identity pool ID was deleted.\n   */\n  clearCachedId: function clearCache() {\n    this._identityId = null;\n    delete this.params.IdentityId;\n\n    var poolId = this.params.IdentityPoolId;\n    var loginId = this.params.LoginId || '';\n    delete this.storage[this.localStorageKey.id + poolId + loginId];\n    delete this.storage[this.localStorageKey.providers + poolId + loginId];\n  },\n\n  /**\n   * @api private\n   */\n  clearIdOnNotAuthorized: function clearIdOnNotAuthorized(err) {\n    var self = this;\n    if (err.code == 'NotAuthorizedException') {\n      self.clearCachedId();\n    }\n  },\n\n  /**\n   * Retrieves a Cognito ID, loading from cache if it was already retrieved\n   * on this device.\n   *\n   * @callback callback function(err, identityId)\n   *   @param err [Error, null] an error object if the call failed or null if\n   *     it succeeded.\n   *   @param identityId [String, null] if successful, the callback will return\n   *     the Cognito ID.\n   * @note If not loaded explicitly, the Cognito ID is loaded and stored in\n   *   localStorage in the browser environment of a device.\n   * @api private\n   */\n  getId: function getId(callback) {\n    var self = this;\n    if (typeof self.params.IdentityId === 'string') {\n      return callback(null, self.params.IdentityId);\n    }\n\n    self.cognito.getId(function(err, data) {\n      if (!err && data.IdentityId) {\n        self.params.IdentityId = data.IdentityId;\n        callback(null, data.IdentityId);\n      } else {\n        callback(err);\n      }\n    });\n  },\n\n\n  /**\n   * @api private\n   */\n  loadCredentials: function loadCredentials(data, credentials) {\n    if (!data || !credentials) return;\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsForIdentity: function getCredentialsForIdentity(callback) {\n    var self = this;\n    self.cognito.getCredentialsForIdentity(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.data = data;\n        self.loadCredentials(self.data, self);\n      } else {\n        self.clearIdOnNotAuthorized(err);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  getCredentialsFromSTS: function getCredentialsFromSTS(callback) {\n    var self = this;\n    self.cognito.getOpenIdToken(function(err, data) {\n      if (!err) {\n        self.cacheId(data);\n        self.params.WebIdentityToken = data.Token;\n        self.webIdentityCredentials.refresh(function(webErr) {\n          if (!webErr) {\n            self.data = self.webIdentityCredentials.data;\n            self.sts.credentialsFrom(self.data, self);\n          }\n          callback(webErr);\n        });\n      } else {\n        self.clearIdOnNotAuthorized(err);\n        callback(err);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadCachedId: function loadCachedId() {\n    var self = this;\n\n    // in the browser we source default IdentityId from localStorage\n    if (AWS.util.isBrowser() && !self.params.IdentityId) {\n      var id = self.getStorage('id');\n      if (id && self.params.Logins) {\n        var actualProviders = Object.keys(self.params.Logins);\n        var cachedProviders =\n          (self.getStorage('providers') || '').split(',');\n\n        // only load ID if at least one provider used this ID before\n        var intersect = cachedProviders.filter(function(n) {\n          return actualProviders.indexOf(n) !== -1;\n        });\n        if (intersect.length !== 0) {\n          self.params.IdentityId = id;\n        }\n      } else if (id) {\n        self.params.IdentityId = id;\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    var clientConfig = this._clientConfig;\n    this.webIdentityCredentials = this.webIdentityCredentials ||\n      new AWS.WebIdentityCredentials(this.params, clientConfig);\n    if (!this.cognito) {\n      var cognitoConfig = AWS.util.merge({}, clientConfig);\n      cognitoConfig.params = this.params;\n      this.cognito = new CognitoIdentity(cognitoConfig);\n    }\n    this.sts = this.sts || new STS(clientConfig);\n  },\n\n  /**\n   * @api private\n   */\n  cacheId: function cacheId(data) {\n    this._identityId = data.IdentityId;\n    this.params.IdentityId = this._identityId;\n\n    // cache this IdentityId in browser localStorage if possible\n    if (AWS.util.isBrowser()) {\n      this.setStorage('id', data.IdentityId);\n\n      if (this.params.Logins) {\n        this.setStorage('providers', Object.keys(this.params.Logins).join(','));\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getStorage: function getStorage(key) {\n    return this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')];\n  },\n\n  /**\n   * @api private\n   */\n  setStorage: function setStorage(key, val) {\n    try {\n      this.storage[this.localStorageKey[key] + this.params.IdentityPoolId + (this.params.LoginId || '')] = val;\n    } catch (_) {}\n  },\n\n  /**\n   * @api private\n   */\n  storage: (function() {\n    try {\n      var storage = AWS.util.isBrowser() && window.localStorage !== null && typeof window.localStorage === 'object' ?\n          window.localStorage : {};\n\n      // Test set/remove which would throw an error in Safari's private browsing\n      storage['aws.test-storage'] = 'foobar';\n      delete storage['aws.test-storage'];\n\n      return storage;\n    } catch (_) {\n      return {};\n    }\n  })()\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/credential_provider_chain.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/credential_provider_chain.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Creates a credential provider chain that searches for AWS credentials\n * in a list of credential providers specified by the {providers} property.\n *\n * By default, the chain will use the {defaultProviders} to resolve credentials.\n * These providers will look in the environment using the\n * {AWS.EnvironmentCredentials} class with the 'AWS' and 'AMAZON' prefixes.\n *\n * ## Setting Providers\n *\n * Each provider in the {providers} list should be a function that returns\n * a {AWS.Credentials} object, or a hardcoded credentials object. The function\n * form allows for delayed execution of the credential construction.\n *\n * ## Resolving Credentials from a Chain\n *\n * Call {resolve} to return the first valid credential object that can be\n * loaded by the provider chain.\n *\n * For example, to resolve a chain with a custom provider that checks a file\n * on disk after the set of {defaultProviders}:\n *\n * ```javascript\n * var diskProvider = new AWS.FileSystemCredentials('./creds.json');\n * var chain = new AWS.CredentialProviderChain();\n * chain.providers.push(diskProvider);\n * chain.resolve();\n * ```\n *\n * The above code will return the `diskProvider` object if the\n * file contains credentials and the `defaultProviders` do not contain\n * any credential settings.\n *\n * @!attribute providers\n *   @return [Array<AWS.Credentials, Function>]\n *     a list of credentials objects or functions that return credentials\n *     objects. If the provider is a function, the function will be\n *     executed lazily when the provider needs to be checked for valid\n *     credentials. By default, this object will be set to the\n *     {defaultProviders}.\n *   @see defaultProviders\n */\nAWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new CredentialProviderChain with a default set of providers\n   * specified by {defaultProviders}.\n   */\n  constructor: function CredentialProviderChain(providers) {\n    if (providers) {\n      this.providers = providers;\n    } else {\n      this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);\n    }\n    this.resolveCallbacks = [];\n  },\n\n  /**\n   * @!method  resolvePromise()\n   *   Returns a 'thenable' promise.\n   *   Resolves the provider chain by searching for the first set of\n   *   credentials in {providers}.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(credentials)\n   *     Called if the promise is fulfilled and the provider resolves the chain\n   *     to a credentials object\n   *     @param credentials [AWS.Credentials] the credentials object resolved\n   *       by the provider chain.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param err [Error] the error object returned if no credentials are found.\n   *   @return [Promise] A promise that represents the state of the `resolve` method call.\n   *   @example Calling the `resolvePromise` method.\n   *     var promise = chain.resolvePromise();\n   *     promise.then(function(credentials) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Resolves the provider chain by searching for the first set of\n   * credentials in {providers}.\n   *\n   * @callback callback function(err, credentials)\n   *   Called when the provider resolves the chain to a credentials object\n   *   or null if no credentials can be found.\n   *\n   *   @param err [Error] the error object returned if no credentials are\n   *     found.\n   *   @param credentials [AWS.Credentials] the credentials object resolved\n   *     by the provider chain.\n   * @return [AWS.CredentialProviderChain] the provider, for chaining.\n   */\n  resolve: function resolve(callback) {\n    var self = this;\n    if (self.providers.length === 0) {\n      callback(new Error('No providers'));\n      return self;\n    }\n\n    if (self.resolveCallbacks.push(callback) === 1) {\n      var index = 0;\n      var providers = self.providers.slice(0);\n\n      function resolveNext(err, creds) {\n        if ((!err && creds) || index === providers.length) {\n          AWS.util.arrayEach(self.resolveCallbacks, function (callback) {\n            callback(err, creds);\n          });\n          self.resolveCallbacks.length = 0;\n          return;\n        }\n\n        var provider = providers[index++];\n        if (typeof provider === 'function') {\n          creds = provider.call();\n        } else {\n          creds = provider;\n        }\n\n        if (creds.get) {\n          creds.get(function (getErr) {\n            resolveNext(getErr, getErr ? null : creds);\n          });\n        } else {\n          resolveNext(null, creds);\n        }\n      }\n\n      resolveNext();\n    }\n\n    return self;\n  }\n});\n\n/**\n * The default set of providers used by a vanilla CredentialProviderChain.\n *\n * In the browser:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = []\n * ```\n *\n * In Node.js:\n *\n * ```javascript\n * AWS.CredentialProviderChain.defaultProviders = [\n *   function () { return new AWS.EnvironmentCredentials('AWS'); },\n *   function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n *   function () { return new AWS.SsoCredentials(); },\n *   function () { return new AWS.SharedIniFileCredentials(); },\n *   function () { return new AWS.ECSCredentials(); },\n *   function () { return new AWS.ProcessCredentials(); },\n *   function () { return new AWS.TokenFileWebIdentityCredentials(); },\n *   function () { return new AWS.EC2MetadataCredentials() }\n * ]\n * ```\n */\nAWS.CredentialProviderChain.defaultProviders = [];\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.CredentialProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.resolvePromise;\n};\n\nAWS.util.addPromises(AWS.CredentialProviderChain);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/credential_provider_chain.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/ec2_metadata_credentials.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/ec2_metadata_credentials.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n__webpack_require__(/*! ../metadata_service */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service.js\");\n\n/**\n * Represents credentials received from the metadata service on an EC2 instance.\n *\n * By default, this class will connect to the metadata service using\n * {AWS.MetadataService} and attempt to load any available credentials. If it\n * can connect, and credentials are available, these will be used with zero\n * configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the EC2 metadata service are timing out, you can increase\n * these values by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.EC2MetadataCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 }, // see AWS.Config for information\n *   logger: console // see AWS.Config for information\n *   ec2MetadataV1Disabled: false // whether to block IMDS v1 fallback.\n * });\n * ```\n *\n * If your requests are timing out in connecting to the metadata service, such\n * as when testing on a development machine, you can use the connectTimeout\n * option, specified in milliseconds, which also defaults to 1 second.\n *\n * If the requests failed or returns expired credentials, it will\n * extend the expiration of current credential, with a warning message. For more\n * information, please go to:\n * https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\n *\n * @!attribute originalExpiration\n *   @return [Date] The optional original expiration of the current credential.\n *   In case of AWS outage, the EC2 metadata will extend expiration of the\n *   existing credential.\n *\n * @see AWS.Config.retryDelayOptions\n * @see AWS.Config.logger\n *\n * @!macro nobrowser\n */\nAWS.EC2MetadataCredentials = AWS.util.inherit(AWS.Credentials, {\n  constructor: function EC2MetadataCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options ? AWS.util.copy(options) : {};\n    options = AWS.util.merge(\n      {maxRetries: this.defaultMaxRetries}, options);\n    if (!options.httpOptions) options.httpOptions = {};\n    options.httpOptions = AWS.util.merge(\n      {timeout: this.defaultTimeout,\n        connectTimeout: this.defaultConnectTimeout},\n       options.httpOptions);\n\n    this.metadataService = new AWS.MetadataService(options);\n    this.logger = options.logger || AWS.config && AWS.config.logger;\n  },\n\n  /**\n   * @api private\n   */\n  defaultTimeout: 1000,\n\n   /**\n   * @api private\n   */\n  defaultConnectTimeout: 1000,\n\n  /**\n   * @api private\n   */\n  defaultMaxRetries: 3,\n\n  /**\n   * The original expiration of the current credential. In case of AWS\n   * outage, the EC2 metadata will extend expiration of the existing\n   * credential.\n   */\n  originalExpiration: undefined,\n\n  /**\n   * Loads the credentials from the instance metadata service\n   *\n   * @callback callback function(err)\n   *   Called when the instance metadata service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    var self = this;\n    self.metadataService.loadCredentials(function(err, creds) {\n      if (err) {\n        if (self.hasLoadedCredentials()) {\n          self.extendExpirationIfExpired();\n          callback();\n        } else {\n          callback(err);\n        }\n      } else {\n        self.setCredentials(creds);\n        self.extendExpirationIfExpired();\n        callback();\n      }\n    });\n  },\n\n  /**\n   * Whether this credential has been loaded.\n   * @api private\n   */\n  hasLoadedCredentials: function hasLoadedCredentials() {\n    return this.AccessKeyId && this.secretAccessKey;\n  },\n\n  /**\n   * if expired, extend the expiration by 15 minutes base plus a jitter of 5\n   * minutes range.\n   * @api private\n   */\n  extendExpirationIfExpired: function extendExpirationIfExpired() {\n    if (this.needsRefresh()) {\n      this.originalExpiration = this.originalExpiration || this.expireTime;\n      this.expired = false;\n      var nextTimeout = 15 * 60 + Math.floor(Math.random() * 5 * 60);\n      var currentTime = AWS.util.date.getDate().getTime();\n      this.expireTime = new Date(currentTime + nextTimeout * 1000);\n      // TODO: add doc link;\n      this.logger.warn('Attempting credential expiration extension due to a '\n          + 'credential service availability issue. A refresh of these '\n          + 'credentials will be attempted again at ' + this.expireTime\n          + '\\nFor more information, please visit: https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html');\n    }\n  },\n\n  /**\n   * Update the credential with new credential responded from EC2 metadata\n   * service.\n   * @api private\n   */\n  setCredentials: function setCredentials(creds) {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var expireTime = new Date(creds.Expiration);\n    this.expired = currentTime >= expireTime ? true : false;\n    this.metadata = creds;\n    this.accessKeyId = creds.AccessKeyId;\n    this.secretAccessKey = creds.SecretAccessKey;\n    this.sessionToken = creds.Token;\n    this.expireTime = expireTime;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/ec2_metadata_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/ecs_credentials.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/ecs_credentials.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Represents credentials received from relative URI specified in the ECS container.\n *\n * This class will request refreshable credentials from the relative URI\n * specified by the AWS_CONTAINER_CREDENTIALS_RELATIVE_URI or the\n * AWS_CONTAINER_CREDENTIALS_FULL_URI environment variable. If valid credentials\n * are returned in the response, these will be used with zero configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the relative URI are timing out, you can increase\n * the value by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.ECSCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n * });\n * ```\n *\n * @see AWS.Config.retryDelayOptions\n *\n * @!macro nobrowser\n */\nAWS.ECSCredentials = AWS.RemoteCredentials;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL2Vjc19jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixlQUFlO0FBQ25DO0FBQ0EsMEJBQTBCLFlBQVk7QUFDdEMsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL2Vjc19jcmVkZW50aWFscy5qcz84M2U1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBjcmVkZW50aWFscyByZWNlaXZlZCBmcm9tIHJlbGF0aXZlIFVSSSBzcGVjaWZpZWQgaW4gdGhlIEVDUyBjb250YWluZXIuXG4gKlxuICogVGhpcyBjbGFzcyB3aWxsIHJlcXVlc3QgcmVmcmVzaGFibGUgY3JlZGVudGlhbHMgZnJvbSB0aGUgcmVsYXRpdmUgVVJJXG4gKiBzcGVjaWZpZWQgYnkgdGhlIEFXU19DT05UQUlORVJfQ1JFREVOVElBTFNfUkVMQVRJVkVfVVJJIG9yIHRoZVxuICogQVdTX0NPTlRBSU5FUl9DUkVERU5USUFMU19GVUxMX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZS4gSWYgdmFsaWQgY3JlZGVudGlhbHNcbiAqIGFyZSByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UsIHRoZXNlIHdpbGwgYmUgdXNlZCB3aXRoIHplcm8gY29uZmlndXJhdGlvbi5cbiAqXG4gKiBUaGlzIGNyZWRlbnRpYWxzIGNsYXNzIHdpbGwgYnkgZGVmYXVsdCB0aW1lb3V0IGFmdGVyIDEgc2Vjb25kIG9mIGluYWN0aXZpdHlcbiAqIGFuZCByZXRyeSAzIHRpbWVzLlxuICogSWYgeW91ciByZXF1ZXN0cyB0byB0aGUgcmVsYXRpdmUgVVJJIGFyZSB0aW1pbmcgb3V0LCB5b3UgY2FuIGluY3JlYXNlXG4gKiB0aGUgdmFsdWUgYnkgY29uZmlndXJpbmcgdGhlbSBkaXJlY3RseTpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBBV1MuY29uZmlnLmNyZWRlbnRpYWxzID0gbmV3IEFXUy5FQ1NDcmVkZW50aWFscyh7XG4gKiAgIGh0dHBPcHRpb25zOiB7IHRpbWVvdXQ6IDUwMDAgfSwgLy8gNSBzZWNvbmQgdGltZW91dFxuICogICBtYXhSZXRyaWVzOiAxMCwgLy8gcmV0cnkgMTAgdGltZXNcbiAqICAgcmV0cnlEZWxheU9wdGlvbnM6IHsgYmFzZTogMjAwIH0gLy8gc2VlIEFXUy5Db25maWcgZm9yIGluZm9ybWF0aW9uXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBzZWUgQVdTLkNvbmZpZy5yZXRyeURlbGF5T3B0aW9uc1xuICpcbiAqIEAhbWFjcm8gbm9icm93c2VyXG4gKi9cbkFXUy5FQ1NDcmVkZW50aWFscyA9IEFXUy5SZW1vdGVDcmVkZW50aWFscztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/ecs_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/environment_credentials.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/environment_credentials.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Represents credentials from the environment.\n *\n * By default, this class will look for the matching environment variables\n * prefixed by a given {envPrefix}. The un-prefixed environment variable names\n * for each credential value is listed below:\n *\n * ```javascript\n * accessKeyId: ACCESS_KEY_ID\n * secretAccessKey: SECRET_ACCESS_KEY\n * sessionToken: SESSION_TOKEN\n * ```\n *\n * With the default prefix of 'AWS', the environment variables would be:\n *\n *     AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN\n *\n * @!attribute envPrefix\n *   @readonly\n *   @return [String] the prefix for the environment variable names excluding\n *     the separating underscore ('_').\n */\nAWS.EnvironmentCredentials = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * Creates a new EnvironmentCredentials class with a given variable\n   * prefix {envPrefix}. For example, to load credentials using the 'AWS'\n   * prefix:\n   *\n   * ```javascript\n   * var creds = new AWS.EnvironmentCredentials('AWS');\n   * creds.accessKeyId == 'AKID' // from AWS_ACCESS_KEY_ID env var\n   * ```\n   *\n   * @param envPrefix [String] the prefix to use (e.g., 'AWS') for environment\n   *   variables. Do not include the separating underscore.\n   */\n  constructor: function EnvironmentCredentials(envPrefix) {\n    AWS.Credentials.call(this);\n    this.envPrefix = envPrefix;\n    this.get(function() {});\n  },\n\n  /**\n   * Loads credentials from the environment using the prefixed\n   * environment variables.\n   *\n   * @callback callback function(err)\n   *   Called after the (prefixed) ACCESS_KEY_ID, SECRET_ACCESS_KEY, and\n   *   SESSION_TOKEN environment variables are read. When this callback is\n   *   called with no error, it means that the credentials information has\n   *   been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    if (!callback) callback = AWS.util.fn.callback;\n\n    if (!process || !process.env) {\n      callback(AWS.util.error(\n        new Error('No process info or environment variables available'),\n        { code: 'EnvironmentCredentialsProviderFailure' }\n      ));\n      return;\n    }\n\n    var keys = ['ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'SESSION_TOKEN'];\n    var values = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      var prefix = '';\n      if (this.envPrefix) prefix = this.envPrefix + '_';\n      values[i] = process.env[prefix + keys[i]];\n      if (!values[i] && keys[i] !== 'SESSION_TOKEN') {\n        callback(AWS.util.error(\n          new Error('Variable ' + prefix + keys[i] + ' not set.'),\n        { code: 'EnvironmentCredentialsProviderFailure' }\n        ));\n        return;\n      }\n    }\n\n    this.expired = false;\n    AWS.Credentials.apply(this, values);\n    callback();\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL2Vudmlyb25tZW50X2NyZWRlbnRpYWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsVUFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsVUFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLGlCQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9jcmVkZW50aWFscy9lbnZpcm9ubWVudF9jcmVkZW50aWFscy5qcz9mMDBkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG5cbi8qKlxuICogUmVwcmVzZW50cyBjcmVkZW50aWFscyBmcm9tIHRoZSBlbnZpcm9ubWVudC5cbiAqXG4gKiBCeSBkZWZhdWx0LCB0aGlzIGNsYXNzIHdpbGwgbG9vayBmb3IgdGhlIG1hdGNoaW5nIGVudmlyb25tZW50IHZhcmlhYmxlc1xuICogcHJlZml4ZWQgYnkgYSBnaXZlbiB7ZW52UHJlZml4fS4gVGhlIHVuLXByZWZpeGVkIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWVzXG4gKiBmb3IgZWFjaCBjcmVkZW50aWFsIHZhbHVlIGlzIGxpc3RlZCBiZWxvdzpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBhY2Nlc3NLZXlJZDogQUNDRVNTX0tFWV9JRFxuICogc2VjcmV0QWNjZXNzS2V5OiBTRUNSRVRfQUNDRVNTX0tFWVxuICogc2Vzc2lvblRva2VuOiBTRVNTSU9OX1RPS0VOXG4gKiBgYGBcbiAqXG4gKiBXaXRoIHRoZSBkZWZhdWx0IHByZWZpeCBvZiAnQVdTJywgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyB3b3VsZCBiZTpcbiAqXG4gKiAgICAgQVdTX0FDQ0VTU19LRVlfSUQsIEFXU19TRUNSRVRfQUNDRVNTX0tFWSwgQVdTX1NFU1NJT05fVE9LRU5cbiAqXG4gKiBAIWF0dHJpYnV0ZSBlbnZQcmVmaXhcbiAqICAgQHJlYWRvbmx5XG4gKiAgIEByZXR1cm4gW1N0cmluZ10gdGhlIHByZWZpeCBmb3IgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWVzIGV4Y2x1ZGluZ1xuICogICAgIHRoZSBzZXBhcmF0aW5nIHVuZGVyc2NvcmUgKCdfJykuXG4gKi9cbkFXUy5FbnZpcm9ubWVudENyZWRlbnRpYWxzID0gQVdTLnV0aWwuaW5oZXJpdChBV1MuQ3JlZGVudGlhbHMsIHtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBFbnZpcm9ubWVudENyZWRlbnRpYWxzIGNsYXNzIHdpdGggYSBnaXZlbiB2YXJpYWJsZVxuICAgKiBwcmVmaXgge2VudlByZWZpeH0uIEZvciBleGFtcGxlLCB0byBsb2FkIGNyZWRlbnRpYWxzIHVzaW5nIHRoZSAnQVdTJ1xuICAgKiBwcmVmaXg6XG4gICAqXG4gICAqIGBgYGphdmFzY3JpcHRcbiAgICogdmFyIGNyZWRzID0gbmV3IEFXUy5FbnZpcm9ubWVudENyZWRlbnRpYWxzKCdBV1MnKTtcbiAgICogY3JlZHMuYWNjZXNzS2V5SWQgPT0gJ0FLSUQnIC8vIGZyb20gQVdTX0FDQ0VTU19LRVlfSUQgZW52IHZhclxuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGVudlByZWZpeCBbU3RyaW5nXSB0aGUgcHJlZml4IHRvIHVzZSAoZS5nLiwgJ0FXUycpIGZvciBlbnZpcm9ubWVudFxuICAgKiAgIHZhcmlhYmxlcy4gRG8gbm90IGluY2x1ZGUgdGhlIHNlcGFyYXRpbmcgdW5kZXJzY29yZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBFbnZpcm9ubWVudENyZWRlbnRpYWxzKGVudlByZWZpeCkge1xuICAgIEFXUy5DcmVkZW50aWFscy5jYWxsKHRoaXMpO1xuICAgIHRoaXMuZW52UHJlZml4ID0gZW52UHJlZml4O1xuICAgIHRoaXMuZ2V0KGZ1bmN0aW9uKCkge30pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBMb2FkcyBjcmVkZW50aWFscyBmcm9tIHRoZSBlbnZpcm9ubWVudCB1c2luZyB0aGUgcHJlZml4ZWRcbiAgICogZW52aXJvbm1lbnQgdmFyaWFibGVzLlxuICAgKlxuICAgKiBAY2FsbGJhY2sgY2FsbGJhY2sgZnVuY3Rpb24oZXJyKVxuICAgKiAgIENhbGxlZCBhZnRlciB0aGUgKHByZWZpeGVkKSBBQ0NFU1NfS0VZX0lELCBTRUNSRVRfQUNDRVNTX0tFWSwgYW5kXG4gICAqICAgU0VTU0lPTl9UT0tFTiBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIHJlYWQuIFdoZW4gdGhpcyBjYWxsYmFjayBpc1xuICAgKiAgIGNhbGxlZCB3aXRoIG5vIGVycm9yLCBpdCBtZWFucyB0aGF0IHRoZSBjcmVkZW50aWFscyBpbmZvcm1hdGlvbiBoYXNcbiAgICogICBiZWVuIGxvYWRlZCBpbnRvIHRoZSBvYmplY3QgKGFzIHRoZSBgYWNjZXNzS2V5SWRgLCBgc2VjcmV0QWNjZXNzS2V5YCxcbiAgICogICBhbmQgYHNlc3Npb25Ub2tlbmAgcHJvcGVydGllcykuXG4gICAqICAgQHBhcmFtIGVyciBbRXJyb3JdIGlmIGFuIGVycm9yIG9jY3VycmVkLCB0aGlzIHZhbHVlIHdpbGwgYmUgZmlsbGVkXG4gICAqIEBzZWUgZ2V0XG4gICAqL1xuICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKGNhbGxiYWNrKSB7XG4gICAgaWYgKCFjYWxsYmFjaykgY2FsbGJhY2sgPSBBV1MudXRpbC5mbi5jYWxsYmFjaztcblxuICAgIGlmICghcHJvY2VzcyB8fCAhcHJvY2Vzcy5lbnYpIHtcbiAgICAgIGNhbGxiYWNrKEFXUy51dGlsLmVycm9yKFxuICAgICAgICBuZXcgRXJyb3IoJ05vIHByb2Nlc3MgaW5mbyBvciBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXZhaWxhYmxlJyksXG4gICAgICAgIHsgY29kZTogJ0Vudmlyb25tZW50Q3JlZGVudGlhbHNQcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBrZXlzID0gWydBQ0NFU1NfS0VZX0lEJywgJ1NFQ1JFVF9BQ0NFU1NfS0VZJywgJ1NFU1NJT05fVE9LRU4nXTtcbiAgICB2YXIgdmFsdWVzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBwcmVmaXggPSAnJztcbiAgICAgIGlmICh0aGlzLmVudlByZWZpeCkgcHJlZml4ID0gdGhpcy5lbnZQcmVmaXggKyAnXyc7XG4gICAgICB2YWx1ZXNbaV0gPSBwcm9jZXNzLmVudltwcmVmaXggKyBrZXlzW2ldXTtcbiAgICAgIGlmICghdmFsdWVzW2ldICYmIGtleXNbaV0gIT09ICdTRVNTSU9OX1RPS0VOJykge1xuICAgICAgICBjYWxsYmFjayhBV1MudXRpbC5lcnJvcihcbiAgICAgICAgICBuZXcgRXJyb3IoJ1ZhcmlhYmxlICcgKyBwcmVmaXggKyBrZXlzW2ldICsgJyBub3Qgc2V0LicpLFxuICAgICAgICB7IGNvZGU6ICdFbnZpcm9ubWVudENyZWRlbnRpYWxzUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgICAgICkpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5leHBpcmVkID0gZmFsc2U7XG4gICAgQVdTLkNyZWRlbnRpYWxzLmFwcGx5KHRoaXMsIHZhbHVlcyk7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/environment_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/file_system_credentials.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/file_system_credentials.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Represents credentials from a JSON file on disk.\n * If the credentials expire, the SDK can {refresh} the credentials\n * from the file.\n *\n * The format of the file should be similar to the options passed to\n * {AWS.Config}:\n *\n * ```javascript\n * {accessKeyId: 'akid', secretAccessKey: 'secret', sessionToken: 'optional'}\n * ```\n *\n * @example Loading credentials from disk\n *   var creds = new AWS.FileSystemCredentials('./configuration.json');\n *   creds.accessKeyId == 'AKID'\n *\n * @!attribute filename\n *   @readonly\n *   @return [String] the path to the JSON file on disk containing the\n *     credentials.\n * @!macro nobrowser\n */\nAWS.FileSystemCredentials = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * @overload AWS.FileSystemCredentials(filename)\n   *   Creates a new FileSystemCredentials object from a filename\n   *\n   *   @param filename [String] the path on disk to the JSON file to load.\n   */\n  constructor: function FileSystemCredentials(filename) {\n    AWS.Credentials.call(this);\n    this.filename = filename;\n    this.get(function() {});\n  },\n\n  /**\n   * Loads the credentials from the {filename} on disk.\n   *\n   * @callback callback function(err)\n   *   Called after the JSON file on disk is read and parsed. When this callback\n   *   is called with no error, it means that the credentials information\n   *   has been loaded into the object (as the `accessKeyId`, `secretAccessKey`,\n   *   and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    if (!callback) callback = AWS.util.fn.callback;\n    try {\n      var creds = JSON.parse(AWS.util.readFileSync(this.filename));\n      AWS.Credentials.call(this, creds);\n      if (!this.accessKeyId || !this.secretAccessKey) {\n        throw AWS.util.error(\n          new Error('Credentials not set in ' + this.filename),\n        { code: 'FileSystemCredentialsProviderFailure' }\n        );\n      }\n      this.expired = false;\n      callback();\n    } catch (err) {\n      callback(err);\n    }\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL2ZpbGVfc3lzdGVtX2NyZWRlbnRpYWxzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUzs7QUFFM0I7QUFDQTtBQUNBLDJDQUEyQyxTQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLElBQUksV0FBVztBQUNmO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLEdBQUc7O0FBRUg7QUFDQSxxQ0FBcUMsVUFBVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL2ZpbGVfc3lzdGVtX2NyZWRlbnRpYWxzLmpzPzQ0OGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGNyZWRlbnRpYWxzIGZyb20gYSBKU09OIGZpbGUgb24gZGlzay5cbiAqIElmIHRoZSBjcmVkZW50aWFscyBleHBpcmUsIHRoZSBTREsgY2FuIHtyZWZyZXNofSB0aGUgY3JlZGVudGlhbHNcbiAqIGZyb20gdGhlIGZpbGUuXG4gKlxuICogVGhlIGZvcm1hdCBvZiB0aGUgZmlsZSBzaG91bGQgYmUgc2ltaWxhciB0byB0aGUgb3B0aW9ucyBwYXNzZWQgdG9cbiAqIHtBV1MuQ29uZmlnfTpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiB7YWNjZXNzS2V5SWQ6ICdha2lkJywgc2VjcmV0QWNjZXNzS2V5OiAnc2VjcmV0Jywgc2Vzc2lvblRva2VuOiAnb3B0aW9uYWwnfVxuICogYGBgXG4gKlxuICogQGV4YW1wbGUgTG9hZGluZyBjcmVkZW50aWFscyBmcm9tIGRpc2tcbiAqICAgdmFyIGNyZWRzID0gbmV3IEFXUy5GaWxlU3lzdGVtQ3JlZGVudGlhbHMoJy4vY29uZmlndXJhdGlvbi5qc29uJyk7XG4gKiAgIGNyZWRzLmFjY2Vzc0tleUlkID09ICdBS0lEJ1xuICpcbiAqIEAhYXR0cmlidXRlIGZpbGVuYW1lXG4gKiAgIEByZWFkb25seVxuICogICBAcmV0dXJuIFtTdHJpbmddIHRoZSBwYXRoIHRvIHRoZSBKU09OIGZpbGUgb24gZGlzayBjb250YWluaW5nIHRoZVxuICogICAgIGNyZWRlbnRpYWxzLlxuICogQCFtYWNybyBub2Jyb3dzZXJcbiAqL1xuQVdTLkZpbGVTeXN0ZW1DcmVkZW50aWFscyA9IEFXUy51dGlsLmluaGVyaXQoQVdTLkNyZWRlbnRpYWxzLCB7XG5cbiAgLyoqXG4gICAqIEBvdmVybG9hZCBBV1MuRmlsZVN5c3RlbUNyZWRlbnRpYWxzKGZpbGVuYW1lKVxuICAgKiAgIENyZWF0ZXMgYSBuZXcgRmlsZVN5c3RlbUNyZWRlbnRpYWxzIG9iamVjdCBmcm9tIGEgZmlsZW5hbWVcbiAgICpcbiAgICogICBAcGFyYW0gZmlsZW5hbWUgW1N0cmluZ10gdGhlIHBhdGggb24gZGlzayB0byB0aGUgSlNPTiBmaWxlIHRvIGxvYWQuXG4gICAqL1xuICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gRmlsZVN5c3RlbUNyZWRlbnRpYWxzKGZpbGVuYW1lKSB7XG4gICAgQVdTLkNyZWRlbnRpYWxzLmNhbGwodGhpcyk7XG4gICAgdGhpcy5maWxlbmFtZSA9IGZpbGVuYW1lO1xuICAgIHRoaXMuZ2V0KGZ1bmN0aW9uKCkge30pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBMb2FkcyB0aGUgY3JlZGVudGlhbHMgZnJvbSB0aGUge2ZpbGVuYW1lfSBvbiBkaXNrLlxuICAgKlxuICAgKiBAY2FsbGJhY2sgY2FsbGJhY2sgZnVuY3Rpb24oZXJyKVxuICAgKiAgIENhbGxlZCBhZnRlciB0aGUgSlNPTiBmaWxlIG9uIGRpc2sgaXMgcmVhZCBhbmQgcGFyc2VkLiBXaGVuIHRoaXMgY2FsbGJhY2tcbiAgICogICBpcyBjYWxsZWQgd2l0aCBubyBlcnJvciwgaXQgbWVhbnMgdGhhdCB0aGUgY3JlZGVudGlhbHMgaW5mb3JtYXRpb25cbiAgICogICBoYXMgYmVlbiBsb2FkZWQgaW50byB0aGUgb2JqZWN0IChhcyB0aGUgYGFjY2Vzc0tleUlkYCwgYHNlY3JldEFjY2Vzc0tleWAsXG4gICAqICAgYW5kIGBzZXNzaW9uVG9rZW5gIHByb3BlcnRpZXMpLlxuICAgKiAgIEBwYXJhbSBlcnIgW0Vycm9yXSBpZiBhbiBlcnJvciBvY2N1cnJlZCwgdGhpcyB2YWx1ZSB3aWxsIGJlIGZpbGxlZFxuICAgKiBAc2VlIGdldFxuICAgKi9cbiAgcmVmcmVzaDogZnVuY3Rpb24gcmVmcmVzaChjYWxsYmFjaykge1xuICAgIGlmICghY2FsbGJhY2spIGNhbGxiYWNrID0gQVdTLnV0aWwuZm4uY2FsbGJhY2s7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBjcmVkcyA9IEpTT04ucGFyc2UoQVdTLnV0aWwucmVhZEZpbGVTeW5jKHRoaXMuZmlsZW5hbWUpKTtcbiAgICAgIEFXUy5DcmVkZW50aWFscy5jYWxsKHRoaXMsIGNyZWRzKTtcbiAgICAgIGlmICghdGhpcy5hY2Nlc3NLZXlJZCB8fCAhdGhpcy5zZWNyZXRBY2Nlc3NLZXkpIHtcbiAgICAgICAgdGhyb3cgQVdTLnV0aWwuZXJyb3IoXG4gICAgICAgICAgbmV3IEVycm9yKCdDcmVkZW50aWFscyBub3Qgc2V0IGluICcgKyB0aGlzLmZpbGVuYW1lKSxcbiAgICAgICAgeyBjb2RlOiAnRmlsZVN5c3RlbUNyZWRlbnRpYWxzUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICB0aGlzLmV4cGlyZWQgPSBmYWxzZTtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgIH1cbiAgfVxuXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/file_system_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/process_credentials.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/process_credentials.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar proc = __webpack_require__(/*! child_process */ \"child_process\");\nvar iniLoader = AWS.util.iniLoader;\n\n/**\n * Represents credentials loaded from shared credentials file\n * (defaulting to ~/.aws/credentials or defined by the\n * `AWS_SHARED_CREDENTIALS_FILE` environment variable).\n *\n * ## Using process credentials\n *\n * The credentials file can specify a credential provider that executes\n * a given process and attempts to read its stdout to recieve a JSON payload\n * containing the credentials:\n *\n *     [default]\n *     credential_process = /usr/bin/credential_proc\n *\n * Automatically handles refreshing credentials if an Expiration time is\n * provided in the credentials payload. Credentials supplied in the same profile\n * will take precedence over the credential_process.\n *\n * Sourcing credentials from an external process can potentially be dangerous,\n * so proceed with caution. Other credential providers should be preferred if\n * at all possible. If using this option, you should make sure that the shared\n * credentials file is as locked down as possible using security best practices\n * for your operating system.\n *\n * ## Using custom profiles\n *\n * The SDK supports loading credentials for separate profiles. This can be done\n * in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to\n *    loading the SDK.\n * 2. Directly load the AWS.ProcessCredentials provider:\n *\n * ```javascript\n * var creds = new AWS.ProcessCredentials({profile: 'myprofile'});\n * AWS.config.credentials = creds;\n * ```\n *\n * @!macro nobrowser\n */\nAWS.ProcessCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new ProcessCredentials object.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var)\n   *   the filename to use when loading credentials.\n   * @option options callback [Function] (err) Credentials are eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   credentials have been loaded successfully.\n   */\n  constructor: function ProcessCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options || {};\n\n    this.filename = options.filename;\n    this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.get(options.callback || AWS.util.fn.noop);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    try {\n      var profiles = AWS.util.getProfilesFromSharedConfig(iniLoader, this.filename);\n      var profile = profiles[this.profile] || {};\n\n      if (Object.keys(profile).length === 0) {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' not found'),\n          { code: 'ProcessCredentialsProviderFailure' }\n        );\n      }\n\n      if (profile['credential_process']) {\n        this.loadViaCredentialProcess(profile, function(err, data) {\n          if (err) {\n            callback(err, null);\n          } else {\n            self.expired = false;\n            self.accessKeyId = data.AccessKeyId;\n            self.secretAccessKey = data.SecretAccessKey;\n            self.sessionToken = data.SessionToken;\n            if (data.Expiration) {\n              self.expireTime = new Date(data.Expiration);\n            }\n            callback(null);\n          }\n        });\n      } else {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' did not include credential process'),\n          { code: 'ProcessCredentialsProviderFailure' }\n        );\n      }\n    } catch (err) {\n      callback(err);\n    }\n  },\n\n  /**\n  * Executes the credential_process and retrieves\n  * credentials from the output\n  * @api private\n  * @param profile [map] credentials profile\n  * @throws ProcessCredentialsProviderFailure\n  */\n  loadViaCredentialProcess: function loadViaCredentialProcess(profile, callback) {\n    proc.exec(profile['credential_process'], { env: process.env }, function(err, stdOut, stdErr) {\n      if (err) {\n        callback(AWS.util.error(\n          new Error('credential_process returned error'),\n          { code: 'ProcessCredentialsProviderFailure'}\n        ), null);\n      } else {\n        try {\n          var credData = JSON.parse(stdOut);\n          if (credData.Expiration) {\n            var currentTime = AWS.util.date.getDate();\n            var expireTime = new Date(credData.Expiration);\n            if (expireTime < currentTime) {\n              throw Error('credential_process returned expired credentials');\n            }\n          }\n\n          if (credData.Version !== 1) {\n            throw Error('credential_process does not return Version == 1');\n          }\n          callback(null, credData);\n        } catch (err) {\n          callback(AWS.util.error(\n            new Error(err.message),\n            { code: 'ProcessCredentialsProviderFailure'}\n          ), null);\n        }\n      }\n    });\n  },\n\n  /**\n   * Loads the credentials from the credential process\n   *\n   * @callback callback function(err)\n   *   Called after the credential process has been executed. When this\n   *   callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    iniLoader.clearCachedFiles();\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/process_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/remote_credentials.js":
/*!************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/remote_credentials.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\"),\n  ENV_RELATIVE_URI = 'AWS_CONTAINER_CREDENTIALS_RELATIVE_URI',\n  ENV_FULL_URI = 'AWS_CONTAINER_CREDENTIALS_FULL_URI',\n  ENV_AUTH_TOKEN = 'AWS_CONTAINER_AUTHORIZATION_TOKEN',\n  ENV_AUTH_TOKEN_FILE = 'AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE',\n  FULL_URI_UNRESTRICTED_PROTOCOLS = ['https:'],\n  FULL_URI_ALLOWED_PROTOCOLS = ['http:', 'https:'],\n  FULL_URI_ALLOWED_HOSTNAMES = ['localhost', '127.0.0.1', '169.254.170.23'],\n  RELATIVE_URI_HOST = '169.254.170.2';\n\n/**\n * Represents credentials received from specified URI.\n *\n * This class will request refreshable credentials from the relative URI\n * specified by the AWS_CONTAINER_CREDENTIALS_RELATIVE_URI or the\n * AWS_CONTAINER_CREDENTIALS_FULL_URI environment variable. If valid credentials\n * are returned in the response, these will be used with zero configuration.\n *\n * This credentials class will by default timeout after 1 second of inactivity\n * and retry 3 times.\n * If your requests to the relative URI are timing out, you can increase\n * the value by configuring them directly:\n *\n * ```javascript\n * AWS.config.credentials = new AWS.RemoteCredentials({\n *   httpOptions: { timeout: 5000 }, // 5 second timeout\n *   maxRetries: 10, // retry 10 times\n *   retryDelayOptions: { base: 200 } // see AWS.Config for information\n * });\n * ```\n *\n * @see AWS.Config.retryDelayOptions\n *\n * @!macro nobrowser\n */\nAWS.RemoteCredentials = AWS.util.inherit(AWS.Credentials, {\n  constructor: function RemoteCredentials(options) {\n    AWS.Credentials.call(this);\n    options = options ? AWS.util.copy(options) : {};\n    if (!options.httpOptions) options.httpOptions = {};\n    options.httpOptions = AWS.util.merge(\n      this.httpOptions, options.httpOptions);\n    AWS.util.update(this, options);\n  },\n\n  /**\n   * @api private\n   */\n  httpOptions: { timeout: 1000 },\n\n  /**\n   * @api private\n   */\n  maxRetries: 3,\n\n  /**\n   * @api private\n   */\n  isConfiguredForEcsCredentials: function isConfiguredForEcsCredentials() {\n    return Boolean(\n        process &&\n        process.env &&\n        (process.env[ENV_RELATIVE_URI] || process.env[ENV_FULL_URI])\n    );\n  },\n\n  /**\n   * @api private\n   */\n  getECSFullUri: function getECSFullUri() {\n    if (process && process.env) {\n      var relative = process.env[ENV_RELATIVE_URI],\n          full = process.env[ENV_FULL_URI];\n      if (relative) {\n        return 'http://' + RELATIVE_URI_HOST + relative;\n      } else if (full) {\n        var parsed = AWS.util.urlParse(full);\n        if (FULL_URI_ALLOWED_PROTOCOLS.indexOf(parsed.protocol) < 0) {\n          throw AWS.util.error(\n            new Error('Unsupported protocol:  AWS.RemoteCredentials supports '\n              + FULL_URI_ALLOWED_PROTOCOLS.join(',') + ' only; '\n              + parsed.protocol + ' requested.'),\n            { code: 'ECSCredentialsProviderFailure' }\n          );\n        }\n\n        if (FULL_URI_UNRESTRICTED_PROTOCOLS.indexOf(parsed.protocol) < 0 &&\n            FULL_URI_ALLOWED_HOSTNAMES.indexOf(parsed.hostname) < 0) {\n          throw AWS.util.error(\n            new Error('Unsupported hostname: AWS.RemoteCredentials only supports '\n              + FULL_URI_ALLOWED_HOSTNAMES.join(',') + ' for ' + parsed.protocol + '; '\n              + parsed.protocol + '//' + parsed.hostname + ' requested.'),\n            { code: 'ECSCredentialsProviderFailure' }\n          );\n        }\n\n        return full;\n      } else {\n        throw AWS.util.error(\n          new Error('Variable ' + ENV_RELATIVE_URI + ' or ' + ENV_FULL_URI +\n            ' must be set to use AWS.RemoteCredentials.'),\n          { code: 'ECSCredentialsProviderFailure' }\n        );\n      }\n    } else {\n      throw AWS.util.error(\n        new Error('No process info available'),\n        { code: 'ECSCredentialsProviderFailure' }\n      );\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getECSAuthToken: function getECSAuthToken() {\n    if (process && process.env && (process.env[ENV_FULL_URI] || process.env[ENV_AUTH_TOKEN_FILE])) {\n      if (!process.env[ENV_AUTH_TOKEN] && process.env[ENV_AUTH_TOKEN_FILE]) {\n        try {\n          var data = fs.readFileSync(process.env[ENV_AUTH_TOKEN_FILE]).toString();\n          return data;\n        } catch (error) {\n          console.error('Error reading token file:', error);\n          throw error; // Re-throw the error to propagate it\n        }\n      }\n      return process.env[ENV_AUTH_TOKEN];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  credsFormatIsValid: function credsFormatIsValid(credData) {\n    return (!!credData.accessKeyId && !!credData.secretAccessKey &&\n      !!credData.sessionToken && !!credData.expireTime);\n  },\n\n  /**\n   * @api private\n   */\n  formatCreds: function formatCreds(credData) {\n    if (!!credData.credentials) {\n      credData = credData.credentials;\n    }\n\n    return {\n      expired: false,\n      accessKeyId: credData.accessKeyId || credData.AccessKeyId,\n      secretAccessKey: credData.secretAccessKey || credData.SecretAccessKey,\n      sessionToken: credData.sessionToken || credData.Token,\n      expireTime: new Date(credData.expiration || credData.Expiration)\n    };\n  },\n\n  /**\n   * @api private\n   */\n  request: function request(url, callback) {\n    var httpRequest = new AWS.HttpRequest(url);\n    httpRequest.method = 'GET';\n    httpRequest.headers.Accept = 'application/json';\n    var token = this.getECSAuthToken();\n    if (token) {\n      httpRequest.headers.Authorization = token;\n    }\n    AWS.util.handleRequestWithRetries(httpRequest, this, callback);\n  },\n\n  /**\n   * Loads the credentials from the relative URI specified by container\n   *\n   * @callback callback function(err)\n   *   Called when the request to the relative URI responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, `sessionToken`, and `expireTime` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    var fullUri;\n\n    try {\n      fullUri = this.getECSFullUri();\n    } catch (err) {\n      callback(err);\n      return;\n    }\n\n    this.request(fullUri, function(err, data) {\n      if (!err) {\n        try {\n          data = JSON.parse(data);\n          var creds = self.formatCreds(data);\n          if (!self.credsFormatIsValid(creds)) {\n            throw AWS.util.error(\n              new Error('Response data is not in valid format'),\n              { code: 'ECSCredentialsProviderFailure' }\n            );\n          }\n          AWS.util.update(self, creds);\n        } catch (dataError) {\n          err = dataError;\n        }\n      }\n      callback(err, creds);\n    });\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL3JlbW90ZV9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1CQUFPLENBQUMsY0FBSTs7QUFFckIsVUFBVSxtQkFBTyxDQUFDLDZEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGVBQWU7QUFDbkM7QUFDQSwwQkFBMEIsWUFBWTtBQUN0QyxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGVBQWU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0EsY0FBYztBQUNkO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0Y7QUFDdEY7QUFDQSxjQUFjO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9jcmVkZW50aWFscy9yZW1vdGVfY3JlZGVudGlhbHMuanM/MzMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKCdmcycpO1xuXG52YXIgQVdTID0gcmVxdWlyZSgnLi4vY29yZScpLFxuICBFTlZfUkVMQVRJVkVfVVJJID0gJ0FXU19DT05UQUlORVJfQ1JFREVOVElBTFNfUkVMQVRJVkVfVVJJJyxcbiAgRU5WX0ZVTExfVVJJID0gJ0FXU19DT05UQUlORVJfQ1JFREVOVElBTFNfRlVMTF9VUkknLFxuICBFTlZfQVVUSF9UT0tFTiA9ICdBV1NfQ09OVEFJTkVSX0FVVEhPUklaQVRJT05fVE9LRU4nLFxuICBFTlZfQVVUSF9UT0tFTl9GSUxFID0gJ0FXU19DT05UQUlORVJfQVVUSE9SSVpBVElPTl9UT0tFTl9GSUxFJyxcbiAgRlVMTF9VUklfVU5SRVNUUklDVEVEX1BST1RPQ09MUyA9IFsnaHR0cHM6J10sXG4gIEZVTExfVVJJX0FMTE9XRURfUFJPVE9DT0xTID0gWydodHRwOicsICdodHRwczonXSxcbiAgRlVMTF9VUklfQUxMT1dFRF9IT1NUTkFNRVMgPSBbJ2xvY2FsaG9zdCcsICcxMjcuMC4wLjEnLCAnMTY5LjI1NC4xNzAuMjMnXSxcbiAgUkVMQVRJVkVfVVJJX0hPU1QgPSAnMTY5LjI1NC4xNzAuMic7XG5cbi8qKlxuICogUmVwcmVzZW50cyBjcmVkZW50aWFscyByZWNlaXZlZCBmcm9tIHNwZWNpZmllZCBVUkkuXG4gKlxuICogVGhpcyBjbGFzcyB3aWxsIHJlcXVlc3QgcmVmcmVzaGFibGUgY3JlZGVudGlhbHMgZnJvbSB0aGUgcmVsYXRpdmUgVVJJXG4gKiBzcGVjaWZpZWQgYnkgdGhlIEFXU19DT05UQUlORVJfQ1JFREVOVElBTFNfUkVMQVRJVkVfVVJJIG9yIHRoZVxuICogQVdTX0NPTlRBSU5FUl9DUkVERU5USUFMU19GVUxMX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZS4gSWYgdmFsaWQgY3JlZGVudGlhbHNcbiAqIGFyZSByZXR1cm5lZCBpbiB0aGUgcmVzcG9uc2UsIHRoZXNlIHdpbGwgYmUgdXNlZCB3aXRoIHplcm8gY29uZmlndXJhdGlvbi5cbiAqXG4gKiBUaGlzIGNyZWRlbnRpYWxzIGNsYXNzIHdpbGwgYnkgZGVmYXVsdCB0aW1lb3V0IGFmdGVyIDEgc2Vjb25kIG9mIGluYWN0aXZpdHlcbiAqIGFuZCByZXRyeSAzIHRpbWVzLlxuICogSWYgeW91ciByZXF1ZXN0cyB0byB0aGUgcmVsYXRpdmUgVVJJIGFyZSB0aW1pbmcgb3V0LCB5b3UgY2FuIGluY3JlYXNlXG4gKiB0aGUgdmFsdWUgYnkgY29uZmlndXJpbmcgdGhlbSBkaXJlY3RseTpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBBV1MuY29uZmlnLmNyZWRlbnRpYWxzID0gbmV3IEFXUy5SZW1vdGVDcmVkZW50aWFscyh7XG4gKiAgIGh0dHBPcHRpb25zOiB7IHRpbWVvdXQ6IDUwMDAgfSwgLy8gNSBzZWNvbmQgdGltZW91dFxuICogICBtYXhSZXRyaWVzOiAxMCwgLy8gcmV0cnkgMTAgdGltZXNcbiAqICAgcmV0cnlEZWxheU9wdGlvbnM6IHsgYmFzZTogMjAwIH0gLy8gc2VlIEFXUy5Db25maWcgZm9yIGluZm9ybWF0aW9uXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBzZWUgQVdTLkNvbmZpZy5yZXRyeURlbGF5T3B0aW9uc1xuICpcbiAqIEAhbWFjcm8gbm9icm93c2VyXG4gKi9cbkFXUy5SZW1vdGVDcmVkZW50aWFscyA9IEFXUy51dGlsLmluaGVyaXQoQVdTLkNyZWRlbnRpYWxzLCB7XG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBSZW1vdGVDcmVkZW50aWFscyhvcHRpb25zKSB7XG4gICAgQVdTLkNyZWRlbnRpYWxzLmNhbGwodGhpcyk7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgPyBBV1MudXRpbC5jb3B5KG9wdGlvbnMpIDoge307XG4gICAgaWYgKCFvcHRpb25zLmh0dHBPcHRpb25zKSBvcHRpb25zLmh0dHBPcHRpb25zID0ge307XG4gICAgb3B0aW9ucy5odHRwT3B0aW9ucyA9IEFXUy51dGlsLm1lcmdlKFxuICAgICAgdGhpcy5odHRwT3B0aW9ucywgb3B0aW9ucy5odHRwT3B0aW9ucyk7XG4gICAgQVdTLnV0aWwudXBkYXRlKHRoaXMsIG9wdGlvbnMpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIGh0dHBPcHRpb25zOiB7IHRpbWVvdXQ6IDEwMDAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBtYXhSZXRyaWVzOiAzLFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIGlzQ29uZmlndXJlZEZvckVjc0NyZWRlbnRpYWxzOiBmdW5jdGlvbiBpc0NvbmZpZ3VyZWRGb3JFY3NDcmVkZW50aWFscygpIHtcbiAgICByZXR1cm4gQm9vbGVhbihcbiAgICAgICAgcHJvY2VzcyAmJlxuICAgICAgICBwcm9jZXNzLmVudiAmJlxuICAgICAgICAocHJvY2Vzcy5lbnZbRU5WX1JFTEFUSVZFX1VSSV0gfHwgcHJvY2Vzcy5lbnZbRU5WX0ZVTExfVVJJXSlcbiAgICApO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIGdldEVDU0Z1bGxVcmk6IGZ1bmN0aW9uIGdldEVDU0Z1bGxVcmkoKSB7XG4gICAgaWYgKHByb2Nlc3MgJiYgcHJvY2Vzcy5lbnYpIHtcbiAgICAgIHZhciByZWxhdGl2ZSA9IHByb2Nlc3MuZW52W0VOVl9SRUxBVElWRV9VUkldLFxuICAgICAgICAgIGZ1bGwgPSBwcm9jZXNzLmVudltFTlZfRlVMTF9VUkldO1xuICAgICAgaWYgKHJlbGF0aXZlKSB7XG4gICAgICAgIHJldHVybiAnaHR0cDovLycgKyBSRUxBVElWRV9VUklfSE9TVCArIHJlbGF0aXZlO1xuICAgICAgfSBlbHNlIGlmIChmdWxsKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSBBV1MudXRpbC51cmxQYXJzZShmdWxsKTtcbiAgICAgICAgaWYgKEZVTExfVVJJX0FMTE9XRURfUFJPVE9DT0xTLmluZGV4T2YocGFyc2VkLnByb3RvY29sKSA8IDApIHtcbiAgICAgICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgICAgIG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgcHJvdG9jb2w6ICBBV1MuUmVtb3RlQ3JlZGVudGlhbHMgc3VwcG9ydHMgJ1xuICAgICAgICAgICAgICArIEZVTExfVVJJX0FMTE9XRURfUFJPVE9DT0xTLmpvaW4oJywnKSArICcgb25seTsgJ1xuICAgICAgICAgICAgICArIHBhcnNlZC5wcm90b2NvbCArICcgcmVxdWVzdGVkLicpLFxuICAgICAgICAgICAgeyBjb2RlOiAnRUNTQ3JlZGVudGlhbHNQcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEZVTExfVVJJX1VOUkVTVFJJQ1RFRF9QUk9UT0NPTFMuaW5kZXhPZihwYXJzZWQucHJvdG9jb2wpIDwgMCAmJlxuICAgICAgICAgICAgRlVMTF9VUklfQUxMT1dFRF9IT1NUTkFNRVMuaW5kZXhPZihwYXJzZWQuaG9zdG5hbWUpIDwgMCkge1xuICAgICAgICAgIHRocm93IEFXUy51dGlsLmVycm9yKFxuICAgICAgICAgICAgbmV3IEVycm9yKCdVbnN1cHBvcnRlZCBob3N0bmFtZTogQVdTLlJlbW90ZUNyZWRlbnRpYWxzIG9ubHkgc3VwcG9ydHMgJ1xuICAgICAgICAgICAgICArIEZVTExfVVJJX0FMTE9XRURfSE9TVE5BTUVTLmpvaW4oJywnKSArICcgZm9yICcgKyBwYXJzZWQucHJvdG9jb2wgKyAnOyAnXG4gICAgICAgICAgICAgICsgcGFyc2VkLnByb3RvY29sICsgJy8vJyArIHBhcnNlZC5ob3N0bmFtZSArICcgcmVxdWVzdGVkLicpLFxuICAgICAgICAgICAgeyBjb2RlOiAnRUNTQ3JlZGVudGlhbHNQcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZ1bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgICBuZXcgRXJyb3IoJ1ZhcmlhYmxlICcgKyBFTlZfUkVMQVRJVkVfVVJJICsgJyBvciAnICsgRU5WX0ZVTExfVVJJICtcbiAgICAgICAgICAgICcgbXVzdCBiZSBzZXQgdG8gdXNlIEFXUy5SZW1vdGVDcmVkZW50aWFscy4nKSxcbiAgICAgICAgICB7IGNvZGU6ICdFQ1NDcmVkZW50aWFsc1Byb3ZpZGVyRmFpbHVyZScgfVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdObyBwcm9jZXNzIGluZm8gYXZhaWxhYmxlJyksXG4gICAgICAgIHsgY29kZTogJ0VDU0NyZWRlbnRpYWxzUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgICApO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBnZXRFQ1NBdXRoVG9rZW46IGZ1bmN0aW9uIGdldEVDU0F1dGhUb2tlbigpIHtcbiAgICBpZiAocHJvY2VzcyAmJiBwcm9jZXNzLmVudiAmJiAocHJvY2Vzcy5lbnZbRU5WX0ZVTExfVVJJXSB8fCBwcm9jZXNzLmVudltFTlZfQVVUSF9UT0tFTl9GSUxFXSkpIHtcbiAgICAgIGlmICghcHJvY2Vzcy5lbnZbRU5WX0FVVEhfVE9LRU5dICYmIHByb2Nlc3MuZW52W0VOVl9BVVRIX1RPS0VOX0ZJTEVdKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdmFyIGRhdGEgPSBmcy5yZWFkRmlsZVN5bmMocHJvY2Vzcy5lbnZbRU5WX0FVVEhfVE9LRU5fRklMRV0pLnRvU3RyaW5nKCk7XG4gICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmVhZGluZyB0b2tlbiBmaWxlOicsIGVycm9yKTtcbiAgICAgICAgICB0aHJvdyBlcnJvcjsgLy8gUmUtdGhyb3cgdGhlIGVycm9yIHRvIHByb3BhZ2F0ZSBpdFxuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcHJvY2Vzcy5lbnZbRU5WX0FVVEhfVE9LRU5dO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBjcmVkc0Zvcm1hdElzVmFsaWQ6IGZ1bmN0aW9uIGNyZWRzRm9ybWF0SXNWYWxpZChjcmVkRGF0YSkge1xuICAgIHJldHVybiAoISFjcmVkRGF0YS5hY2Nlc3NLZXlJZCAmJiAhIWNyZWREYXRhLnNlY3JldEFjY2Vzc0tleSAmJlxuICAgICAgISFjcmVkRGF0YS5zZXNzaW9uVG9rZW4gJiYgISFjcmVkRGF0YS5leHBpcmVUaW1lKTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBmb3JtYXRDcmVkczogZnVuY3Rpb24gZm9ybWF0Q3JlZHMoY3JlZERhdGEpIHtcbiAgICBpZiAoISFjcmVkRGF0YS5jcmVkZW50aWFscykge1xuICAgICAgY3JlZERhdGEgPSBjcmVkRGF0YS5jcmVkZW50aWFscztcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZXhwaXJlZDogZmFsc2UsXG4gICAgICBhY2Nlc3NLZXlJZDogY3JlZERhdGEuYWNjZXNzS2V5SWQgfHwgY3JlZERhdGEuQWNjZXNzS2V5SWQsXG4gICAgICBzZWNyZXRBY2Nlc3NLZXk6IGNyZWREYXRhLnNlY3JldEFjY2Vzc0tleSB8fCBjcmVkRGF0YS5TZWNyZXRBY2Nlc3NLZXksXG4gICAgICBzZXNzaW9uVG9rZW46IGNyZWREYXRhLnNlc3Npb25Ub2tlbiB8fCBjcmVkRGF0YS5Ub2tlbixcbiAgICAgIGV4cGlyZVRpbWU6IG5ldyBEYXRlKGNyZWREYXRhLmV4cGlyYXRpb24gfHwgY3JlZERhdGEuRXhwaXJhdGlvbilcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIHJlcXVlc3Q6IGZ1bmN0aW9uIHJlcXVlc3QodXJsLCBjYWxsYmFjaykge1xuICAgIHZhciBodHRwUmVxdWVzdCA9IG5ldyBBV1MuSHR0cFJlcXVlc3QodXJsKTtcbiAgICBodHRwUmVxdWVzdC5tZXRob2QgPSAnR0VUJztcbiAgICBodHRwUmVxdWVzdC5oZWFkZXJzLkFjY2VwdCA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICB2YXIgdG9rZW4gPSB0aGlzLmdldEVDU0F1dGhUb2tlbigpO1xuICAgIGlmICh0b2tlbikge1xuICAgICAgaHR0cFJlcXVlc3QuaGVhZGVycy5BdXRob3JpemF0aW9uID0gdG9rZW47XG4gICAgfVxuICAgIEFXUy51dGlsLmhhbmRsZVJlcXVlc3RXaXRoUmV0cmllcyhodHRwUmVxdWVzdCwgdGhpcywgY2FsbGJhY2spO1xuICB9LFxuXG4gIC8qKlxuICAgKiBMb2FkcyB0aGUgY3JlZGVudGlhbHMgZnJvbSB0aGUgcmVsYXRpdmUgVVJJIHNwZWNpZmllZCBieSBjb250YWluZXJcbiAgICpcbiAgICogQGNhbGxiYWNrIGNhbGxiYWNrIGZ1bmN0aW9uKGVycilcbiAgICogICBDYWxsZWQgd2hlbiB0aGUgcmVxdWVzdCB0byB0aGUgcmVsYXRpdmUgVVJJIHJlc3BvbmRzIChvciBmYWlscykuIFdoZW5cbiAgICogICB0aGlzIGNhbGxiYWNrIGlzIGNhbGxlZCB3aXRoIG5vIGVycm9yLCBpdCBtZWFucyB0aGF0IHRoZSBjcmVkZW50aWFsc1xuICAgKiAgIGluZm9ybWF0aW9uIGhhcyBiZWVuIGxvYWRlZCBpbnRvIHRoZSBvYmplY3QgKGFzIHRoZSBgYWNjZXNzS2V5SWRgLFxuICAgKiAgIGBzZWNyZXRBY2Nlc3NLZXlgLCBgc2Vzc2lvblRva2VuYCwgYW5kIGBleHBpcmVUaW1lYCBwcm9wZXJ0aWVzKS5cbiAgICogICBAcGFyYW0gZXJyIFtFcnJvcl0gaWYgYW4gZXJyb3Igb2NjdXJyZWQsIHRoaXMgdmFsdWUgd2lsbCBiZSBmaWxsZWRcbiAgICogQHNlZSBnZXRcbiAgICovXG4gIHJlZnJlc2g6IGZ1bmN0aW9uIHJlZnJlc2goY2FsbGJhY2spIHtcbiAgICB0aGlzLmNvYWxlc2NlUmVmcmVzaChjYWxsYmFjayB8fCBBV1MudXRpbC5mbi5jYWxsYmFjayk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgbG9hZDogZnVuY3Rpb24gbG9hZChjYWxsYmFjaykge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgZnVsbFVyaTtcblxuICAgIHRyeSB7XG4gICAgICBmdWxsVXJpID0gdGhpcy5nZXRFQ1NGdWxsVXJpKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucmVxdWVzdChmdWxsVXJpLCBmdW5jdGlvbihlcnIsIGRhdGEpIHtcbiAgICAgIGlmICghZXJyKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgICAgdmFyIGNyZWRzID0gc2VsZi5mb3JtYXRDcmVkcyhkYXRhKTtcbiAgICAgICAgICBpZiAoIXNlbGYuY3JlZHNGb3JtYXRJc1ZhbGlkKGNyZWRzKSkge1xuICAgICAgICAgICAgdGhyb3cgQVdTLnV0aWwuZXJyb3IoXG4gICAgICAgICAgICAgIG5ldyBFcnJvcignUmVzcG9uc2UgZGF0YSBpcyBub3QgaW4gdmFsaWQgZm9ybWF0JyksXG4gICAgICAgICAgICAgIHsgY29kZTogJ0VDU0NyZWRlbnRpYWxzUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBBV1MudXRpbC51cGRhdGUoc2VsZiwgY3JlZHMpO1xuICAgICAgICB9IGNhdGNoIChkYXRhRXJyb3IpIHtcbiAgICAgICAgICBlcnIgPSBkYXRhRXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGNhbGxiYWNrKGVyciwgY3JlZHMpO1xuICAgIH0pO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/remote_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/saml_credentials.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/saml_credentials.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\n\n/**\n * Represents credentials retrieved from STS SAML support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithSAML} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given, as well as a `PrincipalArn`\n * representing the ARN for the SAML identity provider. In addition, the\n * `SAMLAssertion` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn`, `PrincipalArn`, and `SAMLAssertion` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the SAMLAssertion, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.SAMLAssertion = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithSAML}. To update the token, set the\n *     `params.SAMLAssertion` property.\n */\nAWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithSAML)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.SAMLCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/SAMLRole',\n   *     PrincipalArn: 'arn:aws:iam::1234567890:role/SAMLPrincipal',\n   *     SAMLAssertion: 'base64-token', // base64-encoded token from IdP\n   *   });\n   * @see AWS.STS.assumeRoleWithSAML\n   */\n  constructor: function SAMLCredentials(params) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithSAML}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithSAML(function (err, data) {\n      if (!err) {\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL3NhbWxfY3JlZGVudGlhbHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTO0FBQzNCLFVBQVUsbUJBQU8sQ0FBQywwRUFBbUI7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw0QkFBNEI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMkJBQTJCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvY3JlZGVudGlhbHMvc2FtbF9jcmVkZW50aWFscy5qcz8zMWIxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG52YXIgU1RTID0gcmVxdWlyZSgnLi4vLi4vY2xpZW50cy9zdHMnKTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGNyZWRlbnRpYWxzIHJldHJpZXZlZCBmcm9tIFNUUyBTQU1MIHN1cHBvcnQuXG4gKlxuICogQnkgZGVmYXVsdCB0aGlzIHByb3ZpZGVyIGdldHMgY3JlZGVudGlhbHMgdXNpbmcgdGhlXG4gKiB7QVdTLlNUUy5hc3N1bWVSb2xlV2l0aFNBTUx9IHNlcnZpY2Ugb3BlcmF0aW9uLiBUaGlzIG9wZXJhdGlvblxuICogcmVxdWlyZXMgYSBgUm9sZUFybmAgY29udGFpbmluZyB0aGUgQVJOIG9mIHRoZSBJQU0gdHJ1c3QgcG9saWN5IGZvciB0aGVcbiAqIGFwcGxpY2F0aW9uIGZvciB3aGljaCBjcmVkZW50aWFscyB3aWxsIGJlIGdpdmVuLCBhcyB3ZWxsIGFzIGEgYFByaW5jaXBhbEFybmBcbiAqIHJlcHJlc2VudGluZyB0aGUgQVJOIGZvciB0aGUgU0FNTCBpZGVudGl0eSBwcm92aWRlci4gSW4gYWRkaXRpb24sIHRoZVxuICogYFNBTUxBc3NlcnRpb25gIG11c3QgYmUgc2V0IHRvIHRoZSB0b2tlbiBwcm92aWRlZCBieSB0aGUgaWRlbnRpdHlcbiAqIHByb3ZpZGVyLiBTZWUge2NvbnN0cnVjdG9yfSBmb3IgYW4gZXhhbXBsZSBvbiBjcmVhdGluZyBhIGNyZWRlbnRpYWxzXG4gKiBvYmplY3Qgd2l0aCBwcm9wZXIgYFJvbGVBcm5gLCBgUHJpbmNpcGFsQXJuYCwgYW5kIGBTQU1MQXNzZXJ0aW9uYCB2YWx1ZXMuXG4gKlxuICogIyMgUmVmcmVzaGluZyBDcmVkZW50aWFscyBmcm9tIElkZW50aXR5IFNlcnZpY2VcbiAqXG4gKiBJbiBhZGRpdGlvbiB0byBBV1MgY3JlZGVudGlhbHMgZXhwaXJpbmcgYWZ0ZXIgYSBnaXZlbiBhbW91bnQgb2YgdGltZSwgdGhlXG4gKiBsb2dpbiB0b2tlbiBmcm9tIHRoZSBpZGVudGl0eSBwcm92aWRlciB3aWxsIGFsc28gZXhwaXJlLiBPbmNlIHRoaXMgdG9rZW5cbiAqIGV4cGlyZXMsIGl0IHdpbGwgbm90IGJlIHVzYWJsZSB0byByZWZyZXNoIEFXUyBjcmVkZW50aWFscywgYW5kIGFub3RoZXJcbiAqIHRva2VuIHdpbGwgYmUgbmVlZGVkLiBUaGUgU0RLIGRvZXMgbm90IG1hbmFnZSByZWZyZXNoaW5nIG9mIHRoZSB0b2tlbiB2YWx1ZSxcbiAqIGJ1dCB0aGlzIGNhbiBiZSBkb25lIHRocm91Z2ggYSBcInJlZnJlc2ggdG9rZW5cIiBzdXBwb3J0ZWQgYnkgbW9zdCBpZGVudGl0eVxuICogcHJvdmlkZXJzLiBDb25zdWx0IHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgaWRlbnRpdHkgcHJvdmlkZXIgZm9yIHJlZnJlc2hpbmdcbiAqIHRva2Vucy4gT25jZSB0aGUgcmVmcmVzaGVkIHRva2VuIGlzIGFjcXVpcmVkLCB5b3Ugc2hvdWxkIG1ha2Ugc3VyZSB0byB1cGRhdGVcbiAqIHRoaXMgbmV3IHRva2VuIGluIHRoZSBjcmVkZW50aWFscyBvYmplY3QncyB7cGFyYW1zfSBwcm9wZXJ0eS4gVGhlIGZvbGxvd2luZ1xuICogY29kZSB3aWxsIHVwZGF0ZSB0aGUgU0FNTEFzc2VydGlvbiwgYXNzdW1pbmcgeW91IGhhdmUgcmV0cmlldmVkIGFuIHVwZGF0ZWRcbiAqIHRva2VuIGZyb20gdGhlIGlkZW50aXR5IHByb3ZpZGVyOlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIEFXUy5jb25maWcuY3JlZGVudGlhbHMucGFyYW1zLlNBTUxBc3NlcnRpb24gPSB1cGRhdGVkVG9rZW47XG4gKiBgYGBcbiAqXG4gKiBGdXR1cmUgY2FsbHMgdG8gYGNyZWRlbnRpYWxzLnJlZnJlc2goKWAgd2lsbCBub3cgdXNlIHRoZSBuZXcgdG9rZW4uXG4gKlxuICogQCFhdHRyaWJ1dGUgcGFyYW1zXG4gKiAgIEByZXR1cm4gW21hcF0gdGhlIG1hcCBvZiBwYXJhbXMgcGFzc2VkIHRvXG4gKiAgICAge0FXUy5TVFMuYXNzdW1lUm9sZVdpdGhTQU1MfS4gVG8gdXBkYXRlIHRoZSB0b2tlbiwgc2V0IHRoZVxuICogICAgIGBwYXJhbXMuU0FNTEFzc2VydGlvbmAgcHJvcGVydHkuXG4gKi9cbkFXUy5TQU1MQ3JlZGVudGlhbHMgPSBBV1MudXRpbC5pbmhlcml0KEFXUy5DcmVkZW50aWFscywge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBjcmVkZW50aWFscyBvYmplY3QuXG4gICAqIEBwYXJhbSAoc2VlIEFXUy5TVFMuYXNzdW1lUm9sZVdpdGhTQU1MKVxuICAgKiBAZXhhbXBsZSBDcmVhdGluZyBhIG5ldyBjcmVkZW50aWFscyBvYmplY3RcbiAgICogICBBV1MuY29uZmlnLmNyZWRlbnRpYWxzID0gbmV3IEFXUy5TQU1MQ3JlZGVudGlhbHMoe1xuICAgKiAgICAgUm9sZUFybjogJ2Fybjphd3M6aWFtOjoxMjM0NTY3ODkwOnJvbGUvU0FNTFJvbGUnLFxuICAgKiAgICAgUHJpbmNpcGFsQXJuOiAnYXJuOmF3czppYW06OjEyMzQ1Njc4OTA6cm9sZS9TQU1MUHJpbmNpcGFsJyxcbiAgICogICAgIFNBTUxBc3NlcnRpb246ICdiYXNlNjQtdG9rZW4nLCAvLyBiYXNlNjQtZW5jb2RlZCB0b2tlbiBmcm9tIElkUFxuICAgKiAgIH0pO1xuICAgKiBAc2VlIEFXUy5TVFMuYXNzdW1lUm9sZVdpdGhTQU1MXG4gICAqL1xuICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gU0FNTENyZWRlbnRpYWxzKHBhcmFtcykge1xuICAgIEFXUy5DcmVkZW50aWFscy5jYWxsKHRoaXMpO1xuICAgIHRoaXMuZXhwaXJlZCA9IHRydWU7XG4gICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlZnJlc2hlcyBjcmVkZW50aWFscyB1c2luZyB7QVdTLlNUUy5hc3N1bWVSb2xlV2l0aFNBTUx9XG4gICAqXG4gICAqIEBjYWxsYmFjayBjYWxsYmFjayBmdW5jdGlvbihlcnIpXG4gICAqICAgQ2FsbGVkIHdoZW4gdGhlIFNUUyBzZXJ2aWNlIHJlc3BvbmRzIChvciBmYWlscykuIFdoZW5cbiAgICogICB0aGlzIGNhbGxiYWNrIGlzIGNhbGxlZCB3aXRoIG5vIGVycm9yLCBpdCBtZWFucyB0aGF0IHRoZSBjcmVkZW50aWFsc1xuICAgKiAgIGluZm9ybWF0aW9uIGhhcyBiZWVuIGxvYWRlZCBpbnRvIHRoZSBvYmplY3QgKGFzIHRoZSBgYWNjZXNzS2V5SWRgLFxuICAgKiAgIGBzZWNyZXRBY2Nlc3NLZXlgLCBhbmQgYHNlc3Npb25Ub2tlbmAgcHJvcGVydGllcykuXG4gICAqICAgQHBhcmFtIGVyciBbRXJyb3JdIGlmIGFuIGVycm9yIG9jY3VycmVkLCB0aGlzIHZhbHVlIHdpbGwgYmUgZmlsbGVkXG4gICAqIEBzZWUgZ2V0XG4gICAqL1xuICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5jb2FsZXNjZVJlZnJlc2goY2FsbGJhY2sgfHwgQVdTLnV0aWwuZm4uY2FsbGJhY2spO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoY2FsbGJhY2spIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2VsZi5jcmVhdGVDbGllbnRzKCk7XG4gICAgc2VsZi5zZXJ2aWNlLmFzc3VtZVJvbGVXaXRoU0FNTChmdW5jdGlvbiAoZXJyLCBkYXRhKSB7XG4gICAgICBpZiAoIWVycikge1xuICAgICAgICBzZWxmLnNlcnZpY2UuY3JlZGVudGlhbHNGcm9tKGRhdGEsIHNlbGYpO1xuICAgICAgfVxuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBjcmVhdGVDbGllbnRzOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNlcnZpY2UgPSB0aGlzLnNlcnZpY2UgfHwgbmV3IFNUUyh7cGFyYW1zOiB0aGlzLnBhcmFtc30pO1xuICB9XG5cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/saml_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/shared_ini_file_credentials.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/shared_ini_file_credentials.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\nvar iniLoader = AWS.util.iniLoader;\n\nvar ASSUME_ROLE_DEFAULT_REGION = 'us-east-1';\n\n/**\n * Represents credentials loaded from shared credentials file\n * (defaulting to ~/.aws/credentials or defined by the\n * `AWS_SHARED_CREDENTIALS_FILE` environment variable).\n *\n * ## Using the shared credentials file\n *\n * This provider is checked by default in the Node.js environment. To use the\n * credentials file provider, simply add your access and secret keys to the\n * ~/.aws/credentials file in the following format:\n *\n *     [default]\n *     aws_access_key_id = AKID...\n *     aws_secret_access_key = YOUR_SECRET_KEY\n *\n * ## Using custom profiles\n *\n * The SDK supports loading credentials for separate profiles. This can be done\n * in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to\n *    loading the SDK.\n * 2. Directly load the AWS.SharedIniFileCredentials provider:\n *\n * ```javascript\n * var creds = new AWS.SharedIniFileCredentials({profile: 'myprofile'});\n * AWS.config.credentials = creds;\n * ```\n *\n * @!macro nobrowser\n */\nAWS.SharedIniFileCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new SharedIniFileCredentials object.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var)\n   *   the filename to use when loading credentials.\n   * @option options disableAssumeRole [Boolean] (false) True to disable\n   *   support for profiles that assume an IAM role. If true, and an assume\n   *   role profile is selected, an error is raised.\n   * @option options preferStaticCredentials [Boolean] (false) True to\n   *   prefer static credentials to role_arn if both are present.\n   * @option options tokenCodeFn [Function] (null) Function to provide\n   *   STS Assume Role TokenCode, if mfa_serial is provided for profile in ini\n   *   file. Function is called with value of mfa_serial and callback, and\n   *   should provide the TokenCode or an error to the callback in the format\n   *   callback(err, token)\n   * @option options callback [Function] (err) Credentials are eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   credentials have been loaded successfully.\n   * @option options httpOptions [map] A set of options to pass to the low-level\n   *   HTTP request. Currently supported options are:\n   *   * **proxy** [String] &mdash; the URL to proxy requests through\n   *   * **agent** [http.Agent, https.Agent] &mdash; the Agent object to perform\n   *     HTTP requests with. Used for connection pooling. Defaults to the global\n   *     agent (`http.globalAgent`) for non-SSL connections. Note that for\n   *     SSL connections, a special Agent object is used in order to enable\n   *     peer certificate verification. This feature is only available in the\n   *     Node.js environment.\n   *   * **connectTimeout** [Integer] &mdash; Sets the socket to timeout after\n   *     failing to establish a connection with the server after\n   *     `connectTimeout` milliseconds. This timeout has no effect once a socket\n   *     connection has been established.\n   *   * **timeout** [Integer] &mdash; The number of milliseconds a request can\n   *     take before automatically being terminated.\n   *     Defaults to two minutes (120000).\n   */\n  constructor: function SharedIniFileCredentials(options) {\n    AWS.Credentials.call(this);\n\n    options = options || {};\n\n    this.filename = options.filename;\n    this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.disableAssumeRole = Boolean(options.disableAssumeRole);\n    this.preferStaticCredentials = Boolean(options.preferStaticCredentials);\n    this.tokenCodeFn = options.tokenCodeFn || null;\n    this.httpOptions = options.httpOptions || null;\n    this.get(options.callback || AWS.util.fn.noop);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    try {\n      var profiles = AWS.util.getProfilesFromSharedConfig(iniLoader, this.filename);\n      var profile = profiles[this.profile] || {};\n\n      if (Object.keys(profile).length === 0) {\n        throw AWS.util.error(\n          new Error('Profile ' + this.profile + ' not found'),\n          { code: 'SharedIniFileCredentialsProviderFailure' }\n        );\n      }\n\n      /*\n      In the CLI, the presence of both a role_arn and static credentials have\n      different meanings depending on how many profiles have been visited. For\n      the first profile processed, role_arn takes precedence over any static\n      credentials, but for all subsequent profiles, static credentials are\n      used if present, and only in their absence will the profile's\n      source_profile and role_arn keys be used to load another set of\n      credentials. This var is intended to yield compatible behaviour in this\n      sdk.\n      */\n      var preferStaticCredentialsToRoleArn = Boolean(\n        this.preferStaticCredentials\n        && profile['aws_access_key_id']\n        && profile['aws_secret_access_key']\n      );\n\n      if (profile['role_arn'] && !preferStaticCredentialsToRoleArn) {\n        this.loadRoleProfile(profiles, profile, function(err, data) {\n          if (err) {\n            callback(err);\n          } else {\n            self.expired = false;\n            self.accessKeyId = data.Credentials.AccessKeyId;\n            self.secretAccessKey = data.Credentials.SecretAccessKey;\n            self.sessionToken = data.Credentials.SessionToken;\n            self.expireTime = data.Credentials.Expiration;\n            callback(null);\n          }\n        });\n        return;\n      }\n\n      this.accessKeyId = profile['aws_access_key_id'];\n      this.secretAccessKey = profile['aws_secret_access_key'];\n      this.sessionToken = profile['aws_session_token'];\n\n      if (!this.accessKeyId || !this.secretAccessKey) {\n        throw AWS.util.error(\n          new Error('Credentials not set for profile ' + this.profile),\n          { code: 'SharedIniFileCredentialsProviderFailure' }\n        );\n      }\n      this.expired = false;\n      callback(null);\n    } catch (err) {\n      callback(err);\n    }\n  },\n\n  /**\n   * Loads the credentials from the shared credentials file\n   *\n   * @callback callback function(err)\n   *   Called after the shared INI file on disk is read and parsed. When this\n   *   callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    iniLoader.clearCachedFiles();\n    this.coalesceRefresh(\n      callback || AWS.util.fn.callback,\n      this.disableAssumeRole\n    );\n  },\n\n  /**\n   * @api private\n   */\n  loadRoleProfile: function loadRoleProfile(creds, roleProfile, callback) {\n    if (this.disableAssumeRole) {\n      throw AWS.util.error(\n        new Error('Role assumption profiles are disabled. ' +\n                  'Failed to load profile ' + this.profile +\n                  ' from ' + creds.filename),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var self = this;\n    var roleArn = roleProfile['role_arn'];\n    var roleSessionName = roleProfile['role_session_name'];\n    var externalId = roleProfile['external_id'];\n    var mfaSerial = roleProfile['mfa_serial'];\n    var sourceProfileName = roleProfile['source_profile'];\n    var durationSeconds = parseInt(roleProfile['duration_seconds'], 10) || undefined;\n\n    // From experimentation, the following behavior mimics the AWS CLI:\n    //\n    // 1. Use region from the profile if present.\n    // 2. Otherwise fall back to N. Virginia (global endpoint).\n    //\n    // It is necessary to do the fallback explicitly, because if\n    // 'AWS_STS_REGIONAL_ENDPOINTS=regional', the underlying STS client will\n    // otherwise throw an error if region is left 'undefined'.\n    //\n    // Experimentation shows that the AWS CLI (tested at version 1.18.136)\n    // ignores the following potential sources of a region for the purposes of\n    // this AssumeRole call:\n    //\n    // - The [default] profile\n    // - The AWS_REGION environment variable\n    //\n    // Ignoring the [default] profile for the purposes of AssumeRole is arguably\n    // a bug in the CLI since it does use the [default] region for service\n    // calls... but right now we're matching behavior of the other tool.\n    var profileRegion = roleProfile['region'] || ASSUME_ROLE_DEFAULT_REGION;\n\n    if (!sourceProfileName) {\n      throw AWS.util.error(\n        new Error('source_profile is not set using profile ' + this.profile),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var sourceProfileExistanceTest = creds[sourceProfileName];\n\n    if (typeof sourceProfileExistanceTest !== 'object') {\n      throw AWS.util.error(\n        new Error('source_profile ' + sourceProfileName + ' using profile '\n          + this.profile + ' does not exist'),\n        { code: 'SharedIniFileCredentialsProviderFailure' }\n      );\n    }\n\n    var sourceCredentials = new AWS.SharedIniFileCredentials(\n      AWS.util.merge(this.options || {}, {\n        profile: sourceProfileName,\n        preferStaticCredentials: true\n      })\n    );\n\n    this.roleArn = roleArn;\n    var sts = new STS({\n      credentials: sourceCredentials,\n      region: profileRegion,\n      httpOptions: this.httpOptions\n    });\n\n    var roleParams = {\n      DurationSeconds: durationSeconds,\n      RoleArn: roleArn,\n      RoleSessionName: roleSessionName || 'aws-sdk-js-' + Date.now()\n    };\n\n    if (externalId) {\n      roleParams.ExternalId = externalId;\n    }\n\n    if (mfaSerial && self.tokenCodeFn) {\n      roleParams.SerialNumber = mfaSerial;\n      self.tokenCodeFn(mfaSerial, function(err, token) {\n        if (err) {\n          var message;\n          if (err instanceof Error) {\n            message = err.message;\n          } else {\n            message = err;\n          }\n          callback(\n            AWS.util.error(\n              new Error('Error fetching MFA token: ' + message),\n              { code: 'SharedIniFileCredentialsProviderFailure' }\n            ));\n          return;\n        }\n\n        roleParams.TokenCode = token;\n        sts.assumeRole(roleParams, callback);\n      });\n      return;\n    }\n    sts.assumeRole(roleParams, callback);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/shared_ini_file_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/sso_credentials.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/sso_credentials.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar iniLoader = AWS.util.iniLoader;\n/**\n *  Represents credentials from sso.getRoleCredentials API for\n * `sso_*` values defined in shared credentials file.\n *\n * ## Using SSO credentials\n *\n * The credentials file must specify the information below to use sso:\n *\n *     [profile sso-profile]\n *     sso_account_id = 012345678901\n *     sso_region = **-****-*\n *     sso_role_name = SampleRole\n *     sso_start_url = https://d-******.awsapps.com/start\n *\n * or using the session format:\n *\n *     [profile sso-token]\n *     sso_session = prod\n *     sso_account_id = 012345678901\n *     sso_role_name = SampleRole\n *\n *     [sso-session prod]\n *     sso_region = **-****-*\n *     sso_start_url = https://d-******.awsapps.com/start\n *\n * This information will be automatically added to your shared credentials file by running\n * `aws configure sso`.\n *\n * ## Using custom profiles\n *\n * The SDK supports loading credentials for separate profiles. This can be done\n * in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to\n *    loading the SDK.\n * 2. Directly load the AWS.SsoCredentials provider:\n *\n * ```javascript\n * var creds = new AWS.SsoCredentials({profile: 'myprofile'});\n * AWS.config.credentials = creds;\n * ```\n *\n * @!macro nobrowser\n */ AWS.SsoCredentials = AWS.util.inherit(AWS.Credentials, {\n    /**\n   * Creates a new SsoCredentials object.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var)\n   *   the filename to use when loading credentials.\n   * @option options callback [Function] (err) Credentials are eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   credentials have been loaded successfully.\n   */ constructor: function SsoCredentials(options) {\n        AWS.Credentials.call(this);\n        options = options || {};\n        this.errorCode = \"SsoCredentialsProviderFailure\";\n        this.expired = true;\n        this.filename = options.filename;\n        this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n        this.service = options.ssoClient;\n        this.httpOptions = options.httpOptions || null;\n        this.get(options.callback || AWS.util.fn.noop);\n    },\n    /**\n   * @api private\n   */ load: function load(callback) {\n        var self = this;\n        try {\n            var profiles = AWS.util.getProfilesFromSharedConfig(iniLoader, this.filename);\n            var profile = profiles[this.profile] || {};\n            if (Object.keys(profile).length === 0) {\n                throw AWS.util.error(new Error(\"Profile \" + this.profile + \" not found\"), {\n                    code: self.errorCode\n                });\n            }\n            if (profile.sso_session) {\n                if (!profile.sso_account_id || !profile.sso_role_name) {\n                    throw AWS.util.error(new Error(\"Profile \" + this.profile + \" with session \" + profile.sso_session + ' does not have valid SSO credentials. Required parameters \"sso_account_id\", \"sso_session\", ' + '\"sso_role_name\". Reference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html'), {\n                        code: self.errorCode\n                    });\n                }\n            } else {\n                if (!profile.sso_start_url || !profile.sso_account_id || !profile.sso_region || !profile.sso_role_name) {\n                    throw AWS.util.error(new Error(\"Profile \" + this.profile + ' does not have valid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ' + '\"sso_role_name\", \"sso_start_url\". Reference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html'), {\n                        code: self.errorCode\n                    });\n                }\n            }\n            this.getToken(this.profile, profile, function(err, token) {\n                if (err) {\n                    return callback(err);\n                }\n                var request = {\n                    accessToken: token,\n                    accountId: profile.sso_account_id,\n                    roleName: profile.sso_role_name\n                };\n                if (!self.service || self.service.config.region !== profile.sso_region) {\n                    self.service = new AWS.SSO({\n                        region: profile.sso_region,\n                        httpOptions: self.httpOptions\n                    });\n                }\n                self.service.getRoleCredentials(request, function(err, data) {\n                    if (err || !data || !data.roleCredentials) {\n                        callback(AWS.util.error(err || new Error('Please log in using \"aws sso login\"'), {\n                            code: self.errorCode\n                        }), null);\n                    } else if (!data.roleCredentials.accessKeyId || !data.roleCredentials.secretAccessKey || !data.roleCredentials.sessionToken || !data.roleCredentials.expiration) {\n                        throw AWS.util.error(new Error(\"SSO returns an invalid temporary credential.\"));\n                    } else {\n                        self.expired = false;\n                        self.accessKeyId = data.roleCredentials.accessKeyId;\n                        self.secretAccessKey = data.roleCredentials.secretAccessKey;\n                        self.sessionToken = data.roleCredentials.sessionToken;\n                        self.expireTime = new Date(data.roleCredentials.expiration);\n                        callback(null);\n                    }\n                });\n            });\n        } catch (err) {\n            callback(err);\n        }\n    },\n    /**\n   * @private\n   * Uses legacy file system retrieval or if sso-session is set,\n   * use the SSOTokenProvider.\n   *\n   * @param {string} profileName - name of the profile.\n   * @param {object} profile - profile data containing sso_session or sso_start_url etc.\n   * @param {function} callback - called with (err, (string) token).\n   *\n   * @returns {void}\n   */ getToken: function getToken(profileName, profile, callback) {\n        var self = this;\n        if (profile.sso_session) {\n            var _iniLoader = AWS.util.iniLoader;\n            var ssoSessions = _iniLoader.loadSsoSessionsFrom();\n            var ssoSession = ssoSessions[profile.sso_session];\n            Object.assign(profile, ssoSession);\n            var ssoTokenProvider = new AWS.SSOTokenProvider({\n                profile: profileName\n            });\n            ssoTokenProvider.load(function(err) {\n                if (err) {\n                    return callback(err);\n                }\n                return callback(null, ssoTokenProvider.token);\n            });\n            return;\n        }\n        try {\n            /**\n       * The time window (15 mins) that SDK will treat the SSO token expires in before the defined expiration date in token.\n       * This is needed because server side may have invalidated the token before the defined expiration date.\n       */ var EXPIRE_WINDOW_MS = 15 * 60 * 1000;\n            var hasher = crypto.createHash(\"sha1\");\n            var fileName = hasher.update(profile.sso_start_url).digest(\"hex\") + \".json\";\n            var cachePath = path.join(iniLoader.getHomeDir(), \".aws\", \"sso\", \"cache\", fileName);\n            var cacheFile = AWS.util.readFileSync(cachePath);\n            var cacheContent = null;\n            if (cacheFile) {\n                cacheContent = JSON.parse(cacheFile);\n            }\n            if (!cacheContent) {\n                throw AWS.util.error(new Error(\"Cached credentials not found under \" + this.profile + \" profile. Please make sure you log in with aws sso login first\"), {\n                    code: self.errorCode\n                });\n            }\n            if (!cacheContent.startUrl || !cacheContent.region || !cacheContent.accessToken || !cacheContent.expiresAt) {\n                throw AWS.util.error(new Error(\"Cached credentials are missing required properties. Try running aws sso login.\"));\n            }\n            if (new Date(cacheContent.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n                throw AWS.util.error(new Error(\"The SSO session associated with this profile has expired. To refresh this SSO session run aws sso login with the corresponding profile.\"));\n            }\n            return callback(null, cacheContent.accessToken);\n        } catch (err) {\n            return callback(err, null);\n        }\n    },\n    /**\n   * Loads the credentials from the AWS SSO process\n   *\n   * @callback callback function(err)\n   *   Called after the AWS SSO process has been executed. When this\n   *   callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */ refresh: function refresh(callback) {\n        iniLoader.clearCachedFiles();\n        this.coalesceRefresh(callback || AWS.util.fn.callback);\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/sso_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/temporary_credentials.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/temporary_credentials.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\n\n/**\n * Represents temporary credentials retrieved from {AWS.STS}. Without any\n * extra parameters, credentials will be fetched from the\n * {AWS.STS.getSessionToken} operation. If an IAM role is provided, the\n * {AWS.STS.assumeRole} operation will be used to fetch credentials for the\n * role instead.\n *\n * @note AWS.TemporaryCredentials is deprecated, but remains available for\n *   backwards compatibility. {AWS.ChainableTemporaryCredentials} is the\n *   preferred class for temporary credentials.\n *\n * To setup temporary credentials, configure a set of master credentials\n * using the standard credentials providers (environment, EC2 instance metadata,\n * or from the filesystem), then set the global credentials to a new\n * temporary credentials object:\n *\n * ```javascript\n * // Note that environment credentials are loaded by default,\n * // the following line is shown for clarity:\n * AWS.config.credentials = new AWS.EnvironmentCredentials('AWS');\n *\n * // Now set temporary credentials seeded from the master credentials\n * AWS.config.credentials = new AWS.TemporaryCredentials();\n *\n * // subsequent requests will now use temporary credentials from AWS STS.\n * new AWS.S3().listBucket(function(err, data) { ... });\n * ```\n *\n * @!attribute masterCredentials\n *   @return [AWS.Credentials] the master (non-temporary) credentials used to\n *     get and refresh temporary credentials from AWS STS.\n * @note (see constructor)\n */\nAWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new temporary credentials object.\n   *\n   * @note In order to create temporary credentials, you first need to have\n   *   \"master\" credentials configured in {AWS.Config.credentials}. These\n   *   master credentials are necessary to retrieve the temporary credentials,\n   *   as well as refresh the credentials when they expire.\n   * @param params [map] a map of options that are passed to the\n   *   {AWS.STS.assumeRole} or {AWS.STS.getSessionToken} operations.\n   *   If a `RoleArn` parameter is passed in, credentials will be based on the\n   *   IAM role.\n   * @param masterCredentials [AWS.Credentials] the master (non-temporary) credentials\n   *  used to get and refresh temporary credentials from AWS STS.\n   * @example Creating a new credentials object for generic temporary credentials\n   *   AWS.config.credentials = new AWS.TemporaryCredentials();\n   * @example Creating a new credentials object for an IAM role\n   *   AWS.config.credentials = new AWS.TemporaryCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/TemporaryCredentials',\n   *   });\n   * @see AWS.STS.assumeRole\n   * @see AWS.STS.getSessionToken\n   */\n  constructor: function TemporaryCredentials(params, masterCredentials) {\n    AWS.Credentials.call(this);\n    this.loadMasterCredentials(masterCredentials);\n    this.expired = true;\n\n    this.params = params || {};\n    if (this.params.RoleArn) {\n      this.params.RoleSessionName =\n        this.params.RoleSessionName || 'temporary-credentials';\n    }\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRole} or\n   * {AWS.STS.getSessionToken}, depending on whether an IAM role ARN was passed\n   * to the credentials {constructor}.\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh (callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load (callback) {\n    var self = this;\n    self.createClients();\n    self.masterCredentials.get(function () {\n      self.service.config.credentials = self.masterCredentials;\n      var operation = self.params.RoleArn ?\n        self.service.assumeRole : self.service.getSessionToken;\n      operation.call(self.service, function (err, data) {\n        if (!err) {\n          self.service.credentialsFrom(data, self);\n        }\n        callback(err);\n      });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  loadMasterCredentials: function loadMasterCredentials (masterCredentials) {\n    this.masterCredentials = masterCredentials || AWS.config.credentials;\n    while (this.masterCredentials.masterCredentials) {\n      this.masterCredentials = this.masterCredentials.masterCredentials;\n    }\n\n    if (typeof this.masterCredentials.get !== 'function') {\n      this.masterCredentials = new AWS.Credentials(this.masterCredentials);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function () {\n    this.service = this.service || new STS({params: this.params});\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/temporary_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/token_file_web_identity_credentials.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/token_file_web_identity_credentials.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\nvar iniLoader = AWS.util.iniLoader;\n\n/**\n * Represents OIDC credentials from a file on disk\n * If the credentials expire, the SDK can {refresh} the credentials\n * from the file.\n *\n * ## Using the web identity token file\n *\n * This provider is checked by default in the Node.js environment. To use\n * the provider simply add your OIDC token to a file (ASCII encoding) and\n * share the filename in either AWS_WEB_IDENTITY_TOKEN_FILE environment\n * variable or web_identity_token_file shared config variable\n *\n * The file contains encoded OIDC token and the characters are\n * ASCII encoded. OIDC tokens are JSON Web Tokens (JWT).\n * JWT's are 3 base64 encoded strings joined by the '.' character.\n *\n * This class will read filename from AWS_WEB_IDENTITY_TOKEN_FILE\n * environment variable or web_identity_token_file shared config variable,\n * and get the OIDC token from filename.\n * It will also read IAM role to be assumed from AWS_ROLE_ARN\n * environment variable or role_arn shared config variable.\n * This provider gets credetials using the {AWS.STS.assumeRoleWithWebIdentity}\n * service operation\n *\n * @!macro nobrowser\n */\nAWS.TokenFileWebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n\n  /**\n   * @example Creating a new credentials object\n   *  AWS.config.credentials = new AWS.TokenFileWebIdentityCredentials(\n   *   // optionally provide configuration to apply to the underlying AWS.STS service client\n   *   // if configuration is not provided, then configuration will be pulled from AWS.config\n   *   {\n   *     // specify timeout options\n   *     httpOptions: {\n   *       timeout: 100\n   *     }\n   *   });\n   * @see AWS.Config\n   */\n  constructor: function TokenFileWebIdentityCredentials(clientConfig) {\n    AWS.Credentials.call(this);\n    this.data = null;\n    this.clientConfig = AWS.util.copy(clientConfig || {});\n  },\n\n  /**\n   * Returns params from environment variables\n   *\n   * @api private\n   */\n  getParamsFromEnv: function getParamsFromEnv() {\n    var ENV_TOKEN_FILE = 'AWS_WEB_IDENTITY_TOKEN_FILE',\n        ENV_ROLE_ARN = 'AWS_ROLE_ARN';\n    if (process.env[ENV_TOKEN_FILE] && process.env[ENV_ROLE_ARN]) {\n      return [{\n        envTokenFile: process.env[ENV_TOKEN_FILE],\n        roleArn: process.env[ENV_ROLE_ARN],\n        roleSessionName: process.env['AWS_ROLE_SESSION_NAME']\n      }];\n    }\n  },\n\n  /**\n   * Returns params from shared config variables\n   *\n   * @api private\n   */\n  getParamsFromSharedConfig: function getParamsFromSharedConfig() {\n    var profiles = AWS.util.getProfilesFromSharedConfig(iniLoader);\n    var profileName = process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    var profile = profiles[profileName] || {};\n\n    if (Object.keys(profile).length === 0) {\n      throw AWS.util.error(\n        new Error('Profile ' + profileName + ' not found'),\n        { code: 'TokenFileWebIdentityCredentialsProviderFailure' }\n      );\n    }\n\n    var paramsArray = [];\n\n    while (!profile['web_identity_token_file'] && profile['source_profile']) {\n      paramsArray.unshift({\n        roleArn: profile['role_arn'],\n        roleSessionName: profile['role_session_name']\n      });\n      var sourceProfile = profile['source_profile'];\n      profile = profiles[sourceProfile];\n    }\n\n    paramsArray.unshift({\n      envTokenFile: profile['web_identity_token_file'],\n      roleArn: profile['role_arn'],\n      roleSessionName: profile['role_session_name']\n    });\n\n    return paramsArray;\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see AWS.Credentials.get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n  */\n  assumeRoleChaining: function assumeRoleChaining(paramsArray, callback) {\n    var self = this;\n    if (paramsArray.length === 0) {\n      self.service.credentialsFrom(self.data, self);\n      callback();\n    } else {\n      var params = paramsArray.shift();\n      self.service.config.credentials = self.service.credentialsFrom(self.data, self);\n      self.service.assumeRole(\n        {\n          RoleArn: params.roleArn,\n          RoleSessionName: params.roleSessionName || 'token-file-web-identity'\n        },\n        function (err, data) {\n          self.data = null;\n          if (err) {\n            callback(err);\n          } else {\n            self.data = data;\n            self.assumeRoleChaining(paramsArray, callback);\n          }\n        }\n      );\n    }\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    try {\n      var paramsArray = self.getParamsFromEnv();\n      if (!paramsArray) {\n        paramsArray = self.getParamsFromSharedConfig();\n      }\n      if (paramsArray) {\n        var params = paramsArray.shift();\n        var oidcToken = fs.readFileSync(params.envTokenFile, {encoding: 'ascii'});\n        if (!self.service) {\n          self.createClients();\n        }\n        self.service.assumeRoleWithWebIdentity(\n          {\n            WebIdentityToken: oidcToken,\n            RoleArn: params.roleArn,\n            RoleSessionName: params.roleSessionName || 'token-file-web-identity'\n          },\n          function (err, data) {\n            self.data = null;\n            if (err) {\n              callback(err);\n            } else {\n              self.data = data;\n              self.assumeRoleChaining(paramsArray, callback);\n            }\n          }\n        );\n      }\n    } catch (err) {\n      callback(err);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    if (!this.service) {\n      var stsConfig = AWS.util.merge({}, this.clientConfig);\n      this.service = new STS(stsConfig);\n\n      // Retry in case of IDPCommunicationErrorException or InvalidIdentityToken\n      this.service.retryableError = function(error) {\n        if (error.code === 'IDPCommunicationErrorException' || error.code === 'InvalidIdentityToken') {\n          return true;\n        } else {\n          return AWS.Service.prototype.retryableError.call(this, error);\n        }\n      };\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/token_file_web_identity_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/credentials/web_identity_credentials.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/credentials/web_identity_credentials.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar STS = __webpack_require__(/*! ../../clients/sts */ \"(rsc)/../../node_modules/aws-sdk/clients/sts.js\");\n\n/**\n * Represents credentials retrieved from STS Web Identity Federation support.\n *\n * By default this provider gets credentials using the\n * {AWS.STS.assumeRoleWithWebIdentity} service operation. This operation\n * requires a `RoleArn` containing the ARN of the IAM trust policy for the\n * application for which credentials will be given. In addition, the\n * `WebIdentityToken` must be set to the token provided by the identity\n * provider. See {constructor} for an example on creating a credentials\n * object with proper `RoleArn` and `WebIdentityToken` values.\n *\n * ## Refreshing Credentials from Identity Service\n *\n * In addition to AWS credentials expiring after a given amount of time, the\n * login token from the identity provider will also expire. Once this token\n * expires, it will not be usable to refresh AWS credentials, and another\n * token will be needed. The SDK does not manage refreshing of the token value,\n * but this can be done through a \"refresh token\" supported by most identity\n * providers. Consult the documentation for the identity provider for refreshing\n * tokens. Once the refreshed token is acquired, you should make sure to update\n * this new token in the credentials object's {params} property. The following\n * code will update the WebIdentityToken, assuming you have retrieved an updated\n * token from the identity provider:\n *\n * ```javascript\n * AWS.config.credentials.params.WebIdentityToken = updatedToken;\n * ```\n *\n * Future calls to `credentials.refresh()` will now use the new token.\n *\n * @!attribute params\n *   @return [map] the map of params passed to\n *     {AWS.STS.assumeRoleWithWebIdentity}. To update the token, set the\n *     `params.WebIdentityToken` property.\n * @!attribute data\n *   @return [map] the raw data response from the call to\n *     {AWS.STS.assumeRoleWithWebIdentity}. Use this if you want to get\n *     access to other properties from the response.\n */\nAWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {\n  /**\n   * Creates a new credentials object.\n   * @param (see AWS.STS.assumeRoleWithWebIdentity)\n   * @example Creating a new credentials object\n   *   AWS.config.credentials = new AWS.WebIdentityCredentials({\n   *     RoleArn: 'arn:aws:iam::1234567890:role/WebIdentity',\n   *     WebIdentityToken: 'ABCDEFGHIJKLMNOP', // token from identity service\n   *     RoleSessionName: 'web' // optional name, defaults to web-identity\n   *   }, {\n   *     // optionally provide configuration to apply to the underlying AWS.STS service client\n   *     // if configuration is not provided, then configuration will be pulled from AWS.config\n   *\n   *     // specify timeout options\n   *     httpOptions: {\n   *       timeout: 100\n   *     }\n   *   });\n   * @see AWS.STS.assumeRoleWithWebIdentity\n   * @see AWS.Config\n   */\n  constructor: function WebIdentityCredentials(params, clientConfig) {\n    AWS.Credentials.call(this);\n    this.expired = true;\n    this.params = params;\n    this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';\n    this.data = null;\n    this._clientConfig = AWS.util.copy(clientConfig || {});\n  },\n\n  /**\n   * Refreshes credentials using {AWS.STS.assumeRoleWithWebIdentity}\n   *\n   * @callback callback function(err)\n   *   Called when the STS service responds (or fails). When\n   *   this callback is called with no error, it means that the credentials\n   *   information has been loaded into the object (as the `accessKeyId`,\n   *   `secretAccessKey`, and `sessionToken` properties).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n\n  /**\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    self.createClients();\n    self.service.assumeRoleWithWebIdentity(function (err, data) {\n      self.data = null;\n      if (!err) {\n        self.data = data;\n        self.service.credentialsFrom(data, self);\n      }\n      callback(err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  createClients: function() {\n    if (!this.service) {\n      var stsConfig = AWS.util.merge({}, this._clientConfig);\n      stsConfig.params = this.params;\n      this.service = new STS(stsConfig);\n    }\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2NyZWRlbnRpYWxzL3dlYl9pZGVudGl0eV9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0IsVUFBVSxtQkFBTyxDQUFDLDBFQUFtQjs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLG1DQUFtQztBQUN2QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0NBQWtDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0NBQWtDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pELEdBQUc7O0FBRUg7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvY3JlZGVudGlhbHMvd2ViX2lkZW50aXR5X2NyZWRlbnRpYWxzLmpzPzRlMzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciBTVFMgPSByZXF1aXJlKCcuLi8uLi9jbGllbnRzL3N0cycpO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgY3JlZGVudGlhbHMgcmV0cmlldmVkIGZyb20gU1RTIFdlYiBJZGVudGl0eSBGZWRlcmF0aW9uIHN1cHBvcnQuXG4gKlxuICogQnkgZGVmYXVsdCB0aGlzIHByb3ZpZGVyIGdldHMgY3JlZGVudGlhbHMgdXNpbmcgdGhlXG4gKiB7QVdTLlNUUy5hc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5fSBzZXJ2aWNlIG9wZXJhdGlvbi4gVGhpcyBvcGVyYXRpb25cbiAqIHJlcXVpcmVzIGEgYFJvbGVBcm5gIGNvbnRhaW5pbmcgdGhlIEFSTiBvZiB0aGUgSUFNIHRydXN0IHBvbGljeSBmb3IgdGhlXG4gKiBhcHBsaWNhdGlvbiBmb3Igd2hpY2ggY3JlZGVudGlhbHMgd2lsbCBiZSBnaXZlbi4gSW4gYWRkaXRpb24sIHRoZVxuICogYFdlYklkZW50aXR5VG9rZW5gIG11c3QgYmUgc2V0IHRvIHRoZSB0b2tlbiBwcm92aWRlZCBieSB0aGUgaWRlbnRpdHlcbiAqIHByb3ZpZGVyLiBTZWUge2NvbnN0cnVjdG9yfSBmb3IgYW4gZXhhbXBsZSBvbiBjcmVhdGluZyBhIGNyZWRlbnRpYWxzXG4gKiBvYmplY3Qgd2l0aCBwcm9wZXIgYFJvbGVBcm5gIGFuZCBgV2ViSWRlbnRpdHlUb2tlbmAgdmFsdWVzLlxuICpcbiAqICMjIFJlZnJlc2hpbmcgQ3JlZGVudGlhbHMgZnJvbSBJZGVudGl0eSBTZXJ2aWNlXG4gKlxuICogSW4gYWRkaXRpb24gdG8gQVdTIGNyZWRlbnRpYWxzIGV4cGlyaW5nIGFmdGVyIGEgZ2l2ZW4gYW1vdW50IG9mIHRpbWUsIHRoZVxuICogbG9naW4gdG9rZW4gZnJvbSB0aGUgaWRlbnRpdHkgcHJvdmlkZXIgd2lsbCBhbHNvIGV4cGlyZS4gT25jZSB0aGlzIHRva2VuXG4gKiBleHBpcmVzLCBpdCB3aWxsIG5vdCBiZSB1c2FibGUgdG8gcmVmcmVzaCBBV1MgY3JlZGVudGlhbHMsIGFuZCBhbm90aGVyXG4gKiB0b2tlbiB3aWxsIGJlIG5lZWRlZC4gVGhlIFNESyBkb2VzIG5vdCBtYW5hZ2UgcmVmcmVzaGluZyBvZiB0aGUgdG9rZW4gdmFsdWUsXG4gKiBidXQgdGhpcyBjYW4gYmUgZG9uZSB0aHJvdWdoIGEgXCJyZWZyZXNoIHRva2VuXCIgc3VwcG9ydGVkIGJ5IG1vc3QgaWRlbnRpdHlcbiAqIHByb3ZpZGVycy4gQ29uc3VsdCB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGlkZW50aXR5IHByb3ZpZGVyIGZvciByZWZyZXNoaW5nXG4gKiB0b2tlbnMuIE9uY2UgdGhlIHJlZnJlc2hlZCB0b2tlbiBpcyBhY3F1aXJlZCwgeW91IHNob3VsZCBtYWtlIHN1cmUgdG8gdXBkYXRlXG4gKiB0aGlzIG5ldyB0b2tlbiBpbiB0aGUgY3JlZGVudGlhbHMgb2JqZWN0J3Mge3BhcmFtc30gcHJvcGVydHkuIFRoZSBmb2xsb3dpbmdcbiAqIGNvZGUgd2lsbCB1cGRhdGUgdGhlIFdlYklkZW50aXR5VG9rZW4sIGFzc3VtaW5nIHlvdSBoYXZlIHJldHJpZXZlZCBhbiB1cGRhdGVkXG4gKiB0b2tlbiBmcm9tIHRoZSBpZGVudGl0eSBwcm92aWRlcjpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBBV1MuY29uZmlnLmNyZWRlbnRpYWxzLnBhcmFtcy5XZWJJZGVudGl0eVRva2VuID0gdXBkYXRlZFRva2VuO1xuICogYGBgXG4gKlxuICogRnV0dXJlIGNhbGxzIHRvIGBjcmVkZW50aWFscy5yZWZyZXNoKClgIHdpbGwgbm93IHVzZSB0aGUgbmV3IHRva2VuLlxuICpcbiAqIEAhYXR0cmlidXRlIHBhcmFtc1xuICogICBAcmV0dXJuIFttYXBdIHRoZSBtYXAgb2YgcGFyYW1zIHBhc3NlZCB0b1xuICogICAgIHtBV1MuU1RTLmFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHl9LiBUbyB1cGRhdGUgdGhlIHRva2VuLCBzZXQgdGhlXG4gKiAgICAgYHBhcmFtcy5XZWJJZGVudGl0eVRva2VuYCBwcm9wZXJ0eS5cbiAqIEAhYXR0cmlidXRlIGRhdGFcbiAqICAgQHJldHVybiBbbWFwXSB0aGUgcmF3IGRhdGEgcmVzcG9uc2UgZnJvbSB0aGUgY2FsbCB0b1xuICogICAgIHtBV1MuU1RTLmFzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHl9LiBVc2UgdGhpcyBpZiB5b3Ugd2FudCB0byBnZXRcbiAqICAgICBhY2Nlc3MgdG8gb3RoZXIgcHJvcGVydGllcyBmcm9tIHRoZSByZXNwb25zZS5cbiAqL1xuQVdTLldlYklkZW50aXR5Q3JlZGVudGlhbHMgPSBBV1MudXRpbC5pbmhlcml0KEFXUy5DcmVkZW50aWFscywge1xuICAvKipcbiAgICogQ3JlYXRlcyBhIG5ldyBjcmVkZW50aWFscyBvYmplY3QuXG4gICAqIEBwYXJhbSAoc2VlIEFXUy5TVFMuYXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eSlcbiAgICogQGV4YW1wbGUgQ3JlYXRpbmcgYSBuZXcgY3JlZGVudGlhbHMgb2JqZWN0XG4gICAqICAgQVdTLmNvbmZpZy5jcmVkZW50aWFscyA9IG5ldyBBV1MuV2ViSWRlbnRpdHlDcmVkZW50aWFscyh7XG4gICAqICAgICBSb2xlQXJuOiAnYXJuOmF3czppYW06OjEyMzQ1Njc4OTA6cm9sZS9XZWJJZGVudGl0eScsXG4gICAqICAgICBXZWJJZGVudGl0eVRva2VuOiAnQUJDREVGR0hJSktMTU5PUCcsIC8vIHRva2VuIGZyb20gaWRlbnRpdHkgc2VydmljZVxuICAgKiAgICAgUm9sZVNlc3Npb25OYW1lOiAnd2ViJyAvLyBvcHRpb25hbCBuYW1lLCBkZWZhdWx0cyB0byB3ZWItaWRlbnRpdHlcbiAgICogICB9LCB7XG4gICAqICAgICAvLyBvcHRpb25hbGx5IHByb3ZpZGUgY29uZmlndXJhdGlvbiB0byBhcHBseSB0byB0aGUgdW5kZXJseWluZyBBV1MuU1RTIHNlcnZpY2UgY2xpZW50XG4gICAqICAgICAvLyBpZiBjb25maWd1cmF0aW9uIGlzIG5vdCBwcm92aWRlZCwgdGhlbiBjb25maWd1cmF0aW9uIHdpbGwgYmUgcHVsbGVkIGZyb20gQVdTLmNvbmZpZ1xuICAgKlxuICAgKiAgICAgLy8gc3BlY2lmeSB0aW1lb3V0IG9wdGlvbnNcbiAgICogICAgIGh0dHBPcHRpb25zOiB7XG4gICAqICAgICAgIHRpbWVvdXQ6IDEwMFxuICAgKiAgICAgfVxuICAgKiAgIH0pO1xuICAgKiBAc2VlIEFXUy5TVFMuYXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVxuICAgKiBAc2VlIEFXUy5Db25maWdcbiAgICovXG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBXZWJJZGVudGl0eUNyZWRlbnRpYWxzKHBhcmFtcywgY2xpZW50Q29uZmlnKSB7XG4gICAgQVdTLkNyZWRlbnRpYWxzLmNhbGwodGhpcyk7XG4gICAgdGhpcy5leHBpcmVkID0gdHJ1ZTtcbiAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICB0aGlzLnBhcmFtcy5Sb2xlU2Vzc2lvbk5hbWUgPSB0aGlzLnBhcmFtcy5Sb2xlU2Vzc2lvbk5hbWUgfHwgJ3dlYi1pZGVudGl0eSc7XG4gICAgdGhpcy5kYXRhID0gbnVsbDtcbiAgICB0aGlzLl9jbGllbnRDb25maWcgPSBBV1MudXRpbC5jb3B5KGNsaWVudENvbmZpZyB8fCB7fSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlZnJlc2hlcyBjcmVkZW50aWFscyB1c2luZyB7QVdTLlNUUy5hc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5fVxuICAgKlxuICAgKiBAY2FsbGJhY2sgY2FsbGJhY2sgZnVuY3Rpb24oZXJyKVxuICAgKiAgIENhbGxlZCB3aGVuIHRoZSBTVFMgc2VydmljZSByZXNwb25kcyAob3IgZmFpbHMpLiBXaGVuXG4gICAqICAgdGhpcyBjYWxsYmFjayBpcyBjYWxsZWQgd2l0aCBubyBlcnJvciwgaXQgbWVhbnMgdGhhdCB0aGUgY3JlZGVudGlhbHNcbiAgICogICBpbmZvcm1hdGlvbiBoYXMgYmVlbiBsb2FkZWQgaW50byB0aGUgb2JqZWN0IChhcyB0aGUgYGFjY2Vzc0tleUlkYCxcbiAgICogICBgc2VjcmV0QWNjZXNzS2V5YCwgYW5kIGBzZXNzaW9uVG9rZW5gIHByb3BlcnRpZXMpLlxuICAgKiAgIEBwYXJhbSBlcnIgW0Vycm9yXSBpZiBhbiBlcnJvciBvY2N1cnJlZCwgdGhpcyB2YWx1ZSB3aWxsIGJlIGZpbGxlZFxuICAgKiBAc2VlIGdldFxuICAgKi9cbiAgcmVmcmVzaDogZnVuY3Rpb24gcmVmcmVzaChjYWxsYmFjaykge1xuICAgIHRoaXMuY29hbGVzY2VSZWZyZXNoKGNhbGxiYWNrIHx8IEFXUy51dGlsLmZuLmNhbGxiYWNrKTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBsb2FkOiBmdW5jdGlvbiBsb2FkKGNhbGxiYWNrKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYuY3JlYXRlQ2xpZW50cygpO1xuICAgIHNlbGYuc2VydmljZS5hc3N1bWVSb2xlV2l0aFdlYklkZW50aXR5KGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgIHNlbGYuZGF0YSA9IG51bGw7XG4gICAgICBpZiAoIWVycikge1xuICAgICAgICBzZWxmLmRhdGEgPSBkYXRhO1xuICAgICAgICBzZWxmLnNlcnZpY2UuY3JlZGVudGlhbHNGcm9tKGRhdGEsIHNlbGYpO1xuICAgICAgfVxuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBjcmVhdGVDbGllbnRzOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuc2VydmljZSkge1xuICAgICAgdmFyIHN0c0NvbmZpZyA9IEFXUy51dGlsLm1lcmdlKHt9LCB0aGlzLl9jbGllbnRDb25maWcpO1xuICAgICAgc3RzQ29uZmlnLnBhcmFtcyA9IHRoaXMucGFyYW1zO1xuICAgICAgdGhpcy5zZXJ2aWNlID0gbmV3IFNUUyhzdHNDb25maWcpO1xuICAgIH1cbiAgfVxuXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/credentials/web_identity_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/discover_endpoint.js":
/*!***********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/discover_endpoint.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar util = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar endpointDiscoveryEnabledEnvs = ['AWS_ENABLE_ENDPOINT_DISCOVERY', 'AWS_ENDPOINT_DISCOVERY_ENABLED'];\n\n/**\n * Generate key (except resources and operation part) to index the endpoints in the cache\n * If input shape has endpointdiscoveryid trait then use\n *   accessKey + operation + resources + region + service as cache key\n * If input shape doesn't have endpointdiscoveryid trait then use\n *   accessKey + region + service as cache key\n * @return [map<String,String>] object with keys to index endpoints.\n * @api private\n */\nfunction getCacheKey(request) {\n  var service = request.service;\n  var api = service.api || {};\n  var operations = api.operations;\n  var identifiers = {};\n  if (service.config.region) {\n    identifiers.region = service.config.region;\n  }\n  if (api.serviceId) {\n    identifiers.serviceId = api.serviceId;\n  }\n  if (service.config.credentials.accessKeyId) {\n    identifiers.accessKeyId = service.config.credentials.accessKeyId;\n  }\n  return identifiers;\n}\n\n/**\n * Recursive helper for marshallCustomIdentifiers().\n * Looks for required string input members that have 'endpointdiscoveryid' trait.\n * @api private\n */\nfunction marshallCustomIdentifiersHelper(result, params, shape) {\n  if (!shape || params === undefined || params === null) return;\n  if (shape.type === 'structure' && shape.required && shape.required.length > 0) {\n    util.arrayEach(shape.required, function(name) {\n      var memberShape = shape.members[name];\n      if (memberShape.endpointDiscoveryId === true) {\n        var locationName = memberShape.isLocationName ? memberShape.name : name;\n        result[locationName] = String(params[name]);\n      } else {\n        marshallCustomIdentifiersHelper(result, params[name], memberShape);\n      }\n    });\n  }\n}\n\n/**\n * Get custom identifiers for cache key.\n * Identifies custom identifiers by checking each shape's `endpointDiscoveryId` trait.\n * @param [object] request object\n * @param [object] input shape of the given operation's api\n * @api private\n */\nfunction marshallCustomIdentifiers(request, shape) {\n  var identifiers = {};\n  marshallCustomIdentifiersHelper(identifiers, request.params, shape);\n  return identifiers;\n}\n\n/**\n * Call endpoint discovery operation when it's optional.\n * When endpoint is available in cache then use the cached endpoints. If endpoints\n * are unavailable then use regional endpoints and call endpoint discovery operation\n * asynchronously. This is turned off by default.\n * @param [object] request object\n * @api private\n */\nfunction optionalDiscoverEndpoint(request) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var endpoints = AWS.endpointCache.get(cacheKey);\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //or endpoint operation just failed in 1 minute\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    //found endpoint record from cache\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n  } else {\n    //endpoint record not in cache or outdated. make discovery operation\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    addApiVersionHeader(endpointRequest);\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    endpointRequest.removeListener('retry', AWS.EventListeners.Core.RETRY_CHECK);\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKey, [{\n      Address: '',\n      CachePeriodInMinutes: 1\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (data && data.Endpoints) {\n        AWS.endpointCache.put(cacheKey, data.Endpoints);\n      } else if (err) {\n        AWS.endpointCache.put(cacheKey, [{\n          Address: '',\n          CachePeriodInMinutes: 1 //not to make more endpoint operation in next 1 minute\n        }]);\n      }\n    });\n  }\n}\n\nvar requestQueue = {};\n\n/**\n * Call endpoint discovery operation when it's required.\n * When endpoint is available in cache then use cached ones. If endpoints are\n * unavailable then SDK should call endpoint operation then use returned new\n * endpoint for the api call. SDK will automatically attempt to do endpoint\n * discovery. This is turned off by default\n * @param [object] request object\n * @api private\n */\nfunction requiredDiscoverEndpoint(request, done) {\n  var service = request.service;\n  var api = service.api;\n  var operationModel = api.operations ? api.operations[request.operation] : undefined;\n  var inputShape = operationModel ? operationModel.input : undefined;\n\n  var identifiers = marshallCustomIdentifiers(request, inputShape);\n  var cacheKey = getCacheKey(request);\n  if (Object.keys(identifiers).length > 0) {\n    cacheKey = util.update(cacheKey, identifiers);\n    if (operationModel) cacheKey.operation = operationModel.name;\n  }\n  var cacheKeyStr = AWS.EndpointCache.getKeyString(cacheKey);\n  var endpoints = AWS.endpointCache.get(cacheKeyStr); //endpoint cache also accepts string keys\n  if (endpoints && endpoints.length === 1 && endpoints[0].Address === '') {\n    //endpoint operation is being made but response not yet received\n    //push request object to a pending queue\n    if (!requestQueue[cacheKeyStr]) requestQueue[cacheKeyStr] = [];\n    requestQueue[cacheKeyStr].push({request: request, callback: done});\n    return;\n  } else if (endpoints && endpoints.length > 0) {\n    request.httpRequest.updateEndpoint(endpoints[0].Address);\n    done();\n  } else {\n    var endpointRequest = service.makeRequest(api.endpointOperation, {\n      Operation: operationModel.name,\n      Identifiers: identifiers,\n    });\n    endpointRequest.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    addApiVersionHeader(endpointRequest);\n\n    //put in a placeholder for endpoints already requested, prevent\n    //too much in-flight calls\n    AWS.endpointCache.put(cacheKeyStr, [{\n      Address: '',\n      CachePeriodInMinutes: 60 //long-live cache\n    }]);\n    endpointRequest.send(function(err, data) {\n      if (err) {\n        request.response.error = util.error(err, { retryable: false });\n        AWS.endpointCache.remove(cacheKey);\n\n        //fail all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.response.error = util.error(err, { retryable: false });\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      } else if (data) {\n        AWS.endpointCache.put(cacheKeyStr, data.Endpoints);\n        request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n\n        //update the endpoint for all the pending requests in batch\n        if (requestQueue[cacheKeyStr]) {\n          var pendingRequests = requestQueue[cacheKeyStr];\n          util.arrayEach(pendingRequests, function(requestContext) {\n            requestContext.request.httpRequest.updateEndpoint(data.Endpoints[0].Address);\n            requestContext.callback();\n          });\n          delete requestQueue[cacheKeyStr];\n        }\n      }\n      done();\n    });\n  }\n}\n\n/**\n * add api version header to endpoint operation\n * @api private\n */\nfunction addApiVersionHeader(endpointRequest) {\n  var api = endpointRequest.service.api;\n  var apiVersion = api.apiVersion;\n  if (apiVersion && !endpointRequest.httpRequest.headers['x-amz-api-version']) {\n    endpointRequest.httpRequest.headers['x-amz-api-version'] = apiVersion;\n  }\n}\n\n/**\n * If api call gets invalid endpoint exception, SDK should attempt to remove the invalid\n * endpoint from cache.\n * @api private\n */\nfunction invalidateCachedEndpoints(response) {\n  var error = response.error;\n  var httpResponse = response.httpResponse;\n  if (error &&\n    (error.code === 'InvalidEndpointException' || httpResponse.statusCode === 421)\n  ) {\n    var request = response.request;\n    var operations = request.service.api.operations || {};\n    var inputShape = operations[request.operation] ? operations[request.operation].input : undefined;\n    var identifiers = marshallCustomIdentifiers(request, inputShape);\n    var cacheKey = getCacheKey(request);\n    if (Object.keys(identifiers).length > 0) {\n      cacheKey = util.update(cacheKey, identifiers);\n      if (operations[request.operation]) cacheKey.operation = operations[request.operation].name;\n    }\n    AWS.endpointCache.remove(cacheKey);\n  }\n}\n\n/**\n * If endpoint is explicitly configured, SDK should not do endpoint discovery in anytime.\n * @param [object] client Service client object.\n * @api private\n */\nfunction hasCustomEndpoint(client) {\n  //if set endpoint is set for specific client, enable endpoint discovery will raise an error.\n  if (client._originalConfig && client._originalConfig.endpoint && client._originalConfig.endpointDiscoveryEnabled === true) {\n    throw util.error(new Error(), {\n      code: 'ConfigurationException',\n      message: 'Custom endpoint is supplied; endpointDiscoveryEnabled must not be true.'\n    });\n  };\n  var svcConfig = AWS.config[client.serviceIdentifier] || {};\n  return Boolean(AWS.config.endpoint || svcConfig.endpoint || (client._originalConfig && client._originalConfig.endpoint));\n}\n\n/**\n * @api private\n */\nfunction isFalsy(value) {\n  return ['false', '0'].indexOf(value) >= 0;\n}\n\n/**\n * If endpoint discovery should perform for this request when no operation requires endpoint\n * discovery for the given service.\n * SDK performs config resolution in order like below:\n * 1. If set in client configuration.\n * 2. If set in env AWS_ENABLE_ENDPOINT_DISCOVERY.\n * 3. If set in shared ini config file with key 'endpoint_discovery_enabled'.\n * @param [object] request request object.\n * @returns [boolean|undefined] if endpoint discovery config is not set in any source, this\n *  function returns undefined\n * @api private\n */\nfunction resolveEndpointDiscoveryConfig(request) {\n  var service = request.service || {};\n  if (service.config.endpointDiscoveryEnabled !== undefined) {\n    return service.config.endpointDiscoveryEnabled;\n  }\n\n  //shared ini file is only available in Node\n  //not to check env in browser\n  if (util.isBrowser()) return undefined;\n\n  // If any of recognized endpoint discovery config env is set\n  for (var i = 0; i < endpointDiscoveryEnabledEnvs.length; i++) {\n    var env = endpointDiscoveryEnabledEnvs[i];\n    if (Object.prototype.hasOwnProperty.call(process.env, env)) {\n      if (process.env[env] === '' || process.env[env] === undefined) {\n        throw util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'environmental variable ' + env + ' cannot be set to nothing'\n        });\n      }\n      return !isFalsy(process.env[env]);\n    }\n  }\n\n  var configFile = {};\n  try {\n    configFile = AWS.util.iniLoader ? AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || AWS.util.defaultProfile\n  ] || {};\n  if (Object.prototype.hasOwnProperty.call(sharedFileConfig, 'endpoint_discovery_enabled')) {\n    if (sharedFileConfig.endpoint_discovery_enabled === undefined) {\n      throw util.error(new Error(), {\n        code: 'ConfigurationException',\n        message: 'config file entry \\'endpoint_discovery_enabled\\' cannot be set to nothing'\n      });\n    }\n    return !isFalsy(sharedFileConfig.endpoint_discovery_enabled);\n  }\n  return undefined;\n}\n\n/**\n * attach endpoint discovery logic to request object\n * @param [object] request\n * @api private\n */\nfunction discoverEndpoint(request, done) {\n  var service = request.service || {};\n  if (hasCustomEndpoint(service) || request.isPresigned()) return done();\n\n  var operations = service.api.operations || {};\n  var operationModel = operations[request.operation];\n  var isEndpointDiscoveryRequired = operationModel ? operationModel.endpointDiscoveryRequired : 'NULL';\n  var isEnabled = resolveEndpointDiscoveryConfig(request);\n  var hasRequiredEndpointDiscovery = service.api.hasRequiredEndpointDiscovery;\n  if (isEnabled || hasRequiredEndpointDiscovery) {\n    // Once a customer enables endpoint discovery, the SDK should start appending\n    // the string endpoint-discovery to the user-agent on all requests.\n    request.httpRequest.appendToUserAgent('endpoint-discovery');\n  }\n  switch (isEndpointDiscoveryRequired) {\n    case 'OPTIONAL':\n      if (isEnabled || hasRequiredEndpointDiscovery) {\n        // For a given service; if at least one operation requires endpoint discovery then the SDK must enable endpoint discovery\n        // by default for all operations of that service, including operations where endpoint discovery is optional.\n        optionalDiscoverEndpoint(request);\n        request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      }\n      done();\n      break;\n    case 'REQUIRED':\n      if (isEnabled === false) {\n        // For a given operation; if endpoint discovery is required and it has been disabled on the SDK client,\n        // then the SDK must return a clear and actionable exception.\n        request.response.error = util.error(new Error(), {\n          code: 'ConfigurationException',\n          message: 'Endpoint Discovery is disabled but ' + service.api.className + '.' + request.operation +\n                    '() requires it. Please check your configurations.'\n        });\n        done();\n        break;\n      }\n      request.addNamedListener('INVALIDATE_CACHED_ENDPOINTS', 'extractError', invalidateCachedEndpoints);\n      requiredDiscoverEndpoint(request, done);\n      break;\n    case 'NULL':\n    default:\n      done();\n      break;\n  }\n}\n\nmodule.exports = {\n  discoverEndpoint: discoverEndpoint,\n  requiredDiscoverEndpoint: requiredDiscoverEndpoint,\n  optionalDiscoverEndpoint: optionalDiscoverEndpoint,\n  marshallCustomIdentifiers: marshallCustomIdentifiers,\n  getCacheKey: getCacheKey,\n  invalidateCachedEndpoint: invalidateCachedEndpoints,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2Rpc2NvdmVyX2VuZHBvaW50LmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw0REFBUTtBQUMxQixXQUFXLG1CQUFPLENBQUMsNERBQVE7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxpQ0FBaUM7QUFDckU7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLGtCQUFrQjtBQUN4RjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IseUNBQXlDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvZGlzY292ZXJfZW5kcG9pbnQuanM/YWMzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQVdTID0gcmVxdWlyZSgnLi9jb3JlJyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJy4vdXRpbCcpO1xudmFyIGVuZHBvaW50RGlzY292ZXJ5RW5hYmxlZEVudnMgPSBbJ0FXU19FTkFCTEVfRU5EUE9JTlRfRElTQ09WRVJZJywgJ0FXU19FTkRQT0lOVF9ESVNDT1ZFUllfRU5BQkxFRCddO1xuXG4vKipcbiAqIEdlbmVyYXRlIGtleSAoZXhjZXB0IHJlc291cmNlcyBhbmQgb3BlcmF0aW9uIHBhcnQpIHRvIGluZGV4IHRoZSBlbmRwb2ludHMgaW4gdGhlIGNhY2hlXG4gKiBJZiBpbnB1dCBzaGFwZSBoYXMgZW5kcG9pbnRkaXNjb3ZlcnlpZCB0cmFpdCB0aGVuIHVzZVxuICogICBhY2Nlc3NLZXkgKyBvcGVyYXRpb24gKyByZXNvdXJjZXMgKyByZWdpb24gKyBzZXJ2aWNlIGFzIGNhY2hlIGtleVxuICogSWYgaW5wdXQgc2hhcGUgZG9lc24ndCBoYXZlIGVuZHBvaW50ZGlzY292ZXJ5aWQgdHJhaXQgdGhlbiB1c2VcbiAqICAgYWNjZXNzS2V5ICsgcmVnaW9uICsgc2VydmljZSBhcyBjYWNoZSBrZXlcbiAqIEByZXR1cm4gW21hcDxTdHJpbmcsU3RyaW5nPl0gb2JqZWN0IHdpdGgga2V5cyB0byBpbmRleCBlbmRwb2ludHMuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZ2V0Q2FjaGVLZXkocmVxdWVzdCkge1xuICB2YXIgc2VydmljZSA9IHJlcXVlc3Quc2VydmljZTtcbiAgdmFyIGFwaSA9IHNlcnZpY2UuYXBpIHx8IHt9O1xuICB2YXIgb3BlcmF0aW9ucyA9IGFwaS5vcGVyYXRpb25zO1xuICB2YXIgaWRlbnRpZmllcnMgPSB7fTtcbiAgaWYgKHNlcnZpY2UuY29uZmlnLnJlZ2lvbikge1xuICAgIGlkZW50aWZpZXJzLnJlZ2lvbiA9IHNlcnZpY2UuY29uZmlnLnJlZ2lvbjtcbiAgfVxuICBpZiAoYXBpLnNlcnZpY2VJZCkge1xuICAgIGlkZW50aWZpZXJzLnNlcnZpY2VJZCA9IGFwaS5zZXJ2aWNlSWQ7XG4gIH1cbiAgaWYgKHNlcnZpY2UuY29uZmlnLmNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkKSB7XG4gICAgaWRlbnRpZmllcnMuYWNjZXNzS2V5SWQgPSBzZXJ2aWNlLmNvbmZpZy5jcmVkZW50aWFscy5hY2Nlc3NLZXlJZDtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbi8qKlxuICogUmVjdXJzaXZlIGhlbHBlciBmb3IgbWFyc2hhbGxDdXN0b21JZGVudGlmaWVycygpLlxuICogTG9va3MgZm9yIHJlcXVpcmVkIHN0cmluZyBpbnB1dCBtZW1iZXJzIHRoYXQgaGF2ZSAnZW5kcG9pbnRkaXNjb3ZlcnlpZCcgdHJhaXQuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gbWFyc2hhbGxDdXN0b21JZGVudGlmaWVyc0hlbHBlcihyZXN1bHQsIHBhcmFtcywgc2hhcGUpIHtcbiAgaWYgKCFzaGFwZSB8fCBwYXJhbXMgPT09IHVuZGVmaW5lZCB8fCBwYXJhbXMgPT09IG51bGwpIHJldHVybjtcbiAgaWYgKHNoYXBlLnR5cGUgPT09ICdzdHJ1Y3R1cmUnICYmIHNoYXBlLnJlcXVpcmVkICYmIHNoYXBlLnJlcXVpcmVkLmxlbmd0aCA+IDApIHtcbiAgICB1dGlsLmFycmF5RWFjaChzaGFwZS5yZXF1aXJlZCwgZnVuY3Rpb24obmFtZSkge1xuICAgICAgdmFyIG1lbWJlclNoYXBlID0gc2hhcGUubWVtYmVyc1tuYW1lXTtcbiAgICAgIGlmIChtZW1iZXJTaGFwZS5lbmRwb2ludERpc2NvdmVyeUlkID09PSB0cnVlKSB7XG4gICAgICAgIHZhciBsb2NhdGlvbk5hbWUgPSBtZW1iZXJTaGFwZS5pc0xvY2F0aW9uTmFtZSA/IG1lbWJlclNoYXBlLm5hbWUgOiBuYW1lO1xuICAgICAgICByZXN1bHRbbG9jYXRpb25OYW1lXSA9IFN0cmluZyhwYXJhbXNbbmFtZV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWFyc2hhbGxDdXN0b21JZGVudGlmaWVyc0hlbHBlcihyZXN1bHQsIHBhcmFtc1tuYW1lXSwgbWVtYmVyU2hhcGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogR2V0IGN1c3RvbSBpZGVudGlmaWVycyBmb3IgY2FjaGUga2V5LlxuICogSWRlbnRpZmllcyBjdXN0b20gaWRlbnRpZmllcnMgYnkgY2hlY2tpbmcgZWFjaCBzaGFwZSdzIGBlbmRwb2ludERpc2NvdmVyeUlkYCB0cmFpdC5cbiAqIEBwYXJhbSBbb2JqZWN0XSByZXF1ZXN0IG9iamVjdFxuICogQHBhcmFtIFtvYmplY3RdIGlucHV0IHNoYXBlIG9mIHRoZSBnaXZlbiBvcGVyYXRpb24ncyBhcGlcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBtYXJzaGFsbEN1c3RvbUlkZW50aWZpZXJzKHJlcXVlc3QsIHNoYXBlKSB7XG4gIHZhciBpZGVudGlmaWVycyA9IHt9O1xuICBtYXJzaGFsbEN1c3RvbUlkZW50aWZpZXJzSGVscGVyKGlkZW50aWZpZXJzLCByZXF1ZXN0LnBhcmFtcywgc2hhcGUpO1xuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbi8qKlxuICogQ2FsbCBlbmRwb2ludCBkaXNjb3Zlcnkgb3BlcmF0aW9uIHdoZW4gaXQncyBvcHRpb25hbC5cbiAqIFdoZW4gZW5kcG9pbnQgaXMgYXZhaWxhYmxlIGluIGNhY2hlIHRoZW4gdXNlIHRoZSBjYWNoZWQgZW5kcG9pbnRzLiBJZiBlbmRwb2ludHNcbiAqIGFyZSB1bmF2YWlsYWJsZSB0aGVuIHVzZSByZWdpb25hbCBlbmRwb2ludHMgYW5kIGNhbGwgZW5kcG9pbnQgZGlzY292ZXJ5IG9wZXJhdGlvblxuICogYXN5bmNocm9ub3VzbHkuIFRoaXMgaXMgdHVybmVkIG9mZiBieSBkZWZhdWx0LlxuICogQHBhcmFtIFtvYmplY3RdIHJlcXVlc3Qgb2JqZWN0XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gb3B0aW9uYWxEaXNjb3ZlckVuZHBvaW50KHJlcXVlc3QpIHtcbiAgdmFyIHNlcnZpY2UgPSByZXF1ZXN0LnNlcnZpY2U7XG4gIHZhciBhcGkgPSBzZXJ2aWNlLmFwaTtcbiAgdmFyIG9wZXJhdGlvbk1vZGVsID0gYXBpLm9wZXJhdGlvbnMgPyBhcGkub3BlcmF0aW9uc1tyZXF1ZXN0Lm9wZXJhdGlvbl0gOiB1bmRlZmluZWQ7XG4gIHZhciBpbnB1dFNoYXBlID0gb3BlcmF0aW9uTW9kZWwgPyBvcGVyYXRpb25Nb2RlbC5pbnB1dCA6IHVuZGVmaW5lZDtcblxuICB2YXIgaWRlbnRpZmllcnMgPSBtYXJzaGFsbEN1c3RvbUlkZW50aWZpZXJzKHJlcXVlc3QsIGlucHV0U2hhcGUpO1xuICB2YXIgY2FjaGVLZXkgPSBnZXRDYWNoZUtleShyZXF1ZXN0KTtcbiAgaWYgKE9iamVjdC5rZXlzKGlkZW50aWZpZXJzKS5sZW5ndGggPiAwKSB7XG4gICAgY2FjaGVLZXkgPSB1dGlsLnVwZGF0ZShjYWNoZUtleSwgaWRlbnRpZmllcnMpO1xuICAgIGlmIChvcGVyYXRpb25Nb2RlbCkgY2FjaGVLZXkub3BlcmF0aW9uID0gb3BlcmF0aW9uTW9kZWwubmFtZTtcbiAgfVxuICB2YXIgZW5kcG9pbnRzID0gQVdTLmVuZHBvaW50Q2FjaGUuZ2V0KGNhY2hlS2V5KTtcbiAgaWYgKGVuZHBvaW50cyAmJiBlbmRwb2ludHMubGVuZ3RoID09PSAxICYmIGVuZHBvaW50c1swXS5BZGRyZXNzID09PSAnJykge1xuICAgIC8vZW5kcG9pbnQgb3BlcmF0aW9uIGlzIGJlaW5nIG1hZGUgYnV0IHJlc3BvbnNlIG5vdCB5ZXQgcmVjZWl2ZWRcbiAgICAvL29yIGVuZHBvaW50IG9wZXJhdGlvbiBqdXN0IGZhaWxlZCBpbiAxIG1pbnV0ZVxuICAgIHJldHVybjtcbiAgfSBlbHNlIGlmIChlbmRwb2ludHMgJiYgZW5kcG9pbnRzLmxlbmd0aCA+IDApIHtcbiAgICAvL2ZvdW5kIGVuZHBvaW50IHJlY29yZCBmcm9tIGNhY2hlXG4gICAgcmVxdWVzdC5odHRwUmVxdWVzdC51cGRhdGVFbmRwb2ludChlbmRwb2ludHNbMF0uQWRkcmVzcyk7XG4gIH0gZWxzZSB7XG4gICAgLy9lbmRwb2ludCByZWNvcmQgbm90IGluIGNhY2hlIG9yIG91dGRhdGVkLiBtYWtlIGRpc2NvdmVyeSBvcGVyYXRpb25cbiAgICB2YXIgZW5kcG9pbnRSZXF1ZXN0ID0gc2VydmljZS5tYWtlUmVxdWVzdChhcGkuZW5kcG9pbnRPcGVyYXRpb24sIHtcbiAgICAgIE9wZXJhdGlvbjogb3BlcmF0aW9uTW9kZWwubmFtZSxcbiAgICAgIElkZW50aWZpZXJzOiBpZGVudGlmaWVycyxcbiAgICB9KTtcbiAgICBhZGRBcGlWZXJzaW9uSGVhZGVyKGVuZHBvaW50UmVxdWVzdCk7XG4gICAgZW5kcG9pbnRSZXF1ZXN0LnJlbW92ZUxpc3RlbmVyKCd2YWxpZGF0ZScsIEFXUy5FdmVudExpc3RlbmVycy5Db3JlLlZBTElEQVRFX1BBUkFNRVRFUlMpO1xuICAgIGVuZHBvaW50UmVxdWVzdC5yZW1vdmVMaXN0ZW5lcigncmV0cnknLCBBV1MuRXZlbnRMaXN0ZW5lcnMuQ29yZS5SRVRSWV9DSEVDSyk7XG4gICAgLy9wdXQgaW4gYSBwbGFjZWhvbGRlciBmb3IgZW5kcG9pbnRzIGFscmVhZHkgcmVxdWVzdGVkLCBwcmV2ZW50XG4gICAgLy90b28gbXVjaCBpbi1mbGlnaHQgY2FsbHNcbiAgICBBV1MuZW5kcG9pbnRDYWNoZS5wdXQoY2FjaGVLZXksIFt7XG4gICAgICBBZGRyZXNzOiAnJyxcbiAgICAgIENhY2hlUGVyaW9kSW5NaW51dGVzOiAxXG4gICAgfV0pO1xuICAgIGVuZHBvaW50UmVxdWVzdC5zZW5kKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgaWYgKGRhdGEgJiYgZGF0YS5FbmRwb2ludHMpIHtcbiAgICAgICAgQVdTLmVuZHBvaW50Q2FjaGUucHV0KGNhY2hlS2V5LCBkYXRhLkVuZHBvaW50cyk7XG4gICAgICB9IGVsc2UgaWYgKGVycikge1xuICAgICAgICBBV1MuZW5kcG9pbnRDYWNoZS5wdXQoY2FjaGVLZXksIFt7XG4gICAgICAgICAgQWRkcmVzczogJycsXG4gICAgICAgICAgQ2FjaGVQZXJpb2RJbk1pbnV0ZXM6IDEgLy9ub3QgdG8gbWFrZSBtb3JlIGVuZHBvaW50IG9wZXJhdGlvbiBpbiBuZXh0IDEgbWludXRlXG4gICAgICAgIH1dKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG52YXIgcmVxdWVzdFF1ZXVlID0ge307XG5cbi8qKlxuICogQ2FsbCBlbmRwb2ludCBkaXNjb3Zlcnkgb3BlcmF0aW9uIHdoZW4gaXQncyByZXF1aXJlZC5cbiAqIFdoZW4gZW5kcG9pbnQgaXMgYXZhaWxhYmxlIGluIGNhY2hlIHRoZW4gdXNlIGNhY2hlZCBvbmVzLiBJZiBlbmRwb2ludHMgYXJlXG4gKiB1bmF2YWlsYWJsZSB0aGVuIFNESyBzaG91bGQgY2FsbCBlbmRwb2ludCBvcGVyYXRpb24gdGhlbiB1c2UgcmV0dXJuZWQgbmV3XG4gKiBlbmRwb2ludCBmb3IgdGhlIGFwaSBjYWxsLiBTREsgd2lsbCBhdXRvbWF0aWNhbGx5IGF0dGVtcHQgdG8gZG8gZW5kcG9pbnRcbiAqIGRpc2NvdmVyeS4gVGhpcyBpcyB0dXJuZWQgb2ZmIGJ5IGRlZmF1bHRcbiAqIEBwYXJhbSBbb2JqZWN0XSByZXF1ZXN0IG9iamVjdFxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlcXVpcmVkRGlzY292ZXJFbmRwb2ludChyZXF1ZXN0LCBkb25lKSB7XG4gIHZhciBzZXJ2aWNlID0gcmVxdWVzdC5zZXJ2aWNlO1xuICB2YXIgYXBpID0gc2VydmljZS5hcGk7XG4gIHZhciBvcGVyYXRpb25Nb2RlbCA9IGFwaS5vcGVyYXRpb25zID8gYXBpLm9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dIDogdW5kZWZpbmVkO1xuICB2YXIgaW5wdXRTaGFwZSA9IG9wZXJhdGlvbk1vZGVsID8gb3BlcmF0aW9uTW9kZWwuaW5wdXQgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIGlkZW50aWZpZXJzID0gbWFyc2hhbGxDdXN0b21JZGVudGlmaWVycyhyZXF1ZXN0LCBpbnB1dFNoYXBlKTtcbiAgdmFyIGNhY2hlS2V5ID0gZ2V0Q2FjaGVLZXkocmVxdWVzdCk7XG4gIGlmIChPYmplY3Qua2V5cyhpZGVudGlmaWVycykubGVuZ3RoID4gMCkge1xuICAgIGNhY2hlS2V5ID0gdXRpbC51cGRhdGUoY2FjaGVLZXksIGlkZW50aWZpZXJzKTtcbiAgICBpZiAob3BlcmF0aW9uTW9kZWwpIGNhY2hlS2V5Lm9wZXJhdGlvbiA9IG9wZXJhdGlvbk1vZGVsLm5hbWU7XG4gIH1cbiAgdmFyIGNhY2hlS2V5U3RyID0gQVdTLkVuZHBvaW50Q2FjaGUuZ2V0S2V5U3RyaW5nKGNhY2hlS2V5KTtcbiAgdmFyIGVuZHBvaW50cyA9IEFXUy5lbmRwb2ludENhY2hlLmdldChjYWNoZUtleVN0cik7IC8vZW5kcG9pbnQgY2FjaGUgYWxzbyBhY2NlcHRzIHN0cmluZyBrZXlzXG4gIGlmIChlbmRwb2ludHMgJiYgZW5kcG9pbnRzLmxlbmd0aCA9PT0gMSAmJiBlbmRwb2ludHNbMF0uQWRkcmVzcyA9PT0gJycpIHtcbiAgICAvL2VuZHBvaW50IG9wZXJhdGlvbiBpcyBiZWluZyBtYWRlIGJ1dCByZXNwb25zZSBub3QgeWV0IHJlY2VpdmVkXG4gICAgLy9wdXNoIHJlcXVlc3Qgb2JqZWN0IHRvIGEgcGVuZGluZyBxdWV1ZVxuICAgIGlmICghcmVxdWVzdFF1ZXVlW2NhY2hlS2V5U3RyXSkgcmVxdWVzdFF1ZXVlW2NhY2hlS2V5U3RyXSA9IFtdO1xuICAgIHJlcXVlc3RRdWV1ZVtjYWNoZUtleVN0cl0ucHVzaCh7cmVxdWVzdDogcmVxdWVzdCwgY2FsbGJhY2s6IGRvbmV9KTtcbiAgICByZXR1cm47XG4gIH0gZWxzZSBpZiAoZW5kcG9pbnRzICYmIGVuZHBvaW50cy5sZW5ndGggPiAwKSB7XG4gICAgcmVxdWVzdC5odHRwUmVxdWVzdC51cGRhdGVFbmRwb2ludChlbmRwb2ludHNbMF0uQWRkcmVzcyk7XG4gICAgZG9uZSgpO1xuICB9IGVsc2Uge1xuICAgIHZhciBlbmRwb2ludFJlcXVlc3QgPSBzZXJ2aWNlLm1ha2VSZXF1ZXN0KGFwaS5lbmRwb2ludE9wZXJhdGlvbiwge1xuICAgICAgT3BlcmF0aW9uOiBvcGVyYXRpb25Nb2RlbC5uYW1lLFxuICAgICAgSWRlbnRpZmllcnM6IGlkZW50aWZpZXJzLFxuICAgIH0pO1xuICAgIGVuZHBvaW50UmVxdWVzdC5yZW1vdmVMaXN0ZW5lcigndmFsaWRhdGUnLCBBV1MuRXZlbnRMaXN0ZW5lcnMuQ29yZS5WQUxJREFURV9QQVJBTUVURVJTKTtcbiAgICBhZGRBcGlWZXJzaW9uSGVhZGVyKGVuZHBvaW50UmVxdWVzdCk7XG5cbiAgICAvL3B1dCBpbiBhIHBsYWNlaG9sZGVyIGZvciBlbmRwb2ludHMgYWxyZWFkeSByZXF1ZXN0ZWQsIHByZXZlbnRcbiAgICAvL3RvbyBtdWNoIGluLWZsaWdodCBjYWxsc1xuICAgIEFXUy5lbmRwb2ludENhY2hlLnB1dChjYWNoZUtleVN0ciwgW3tcbiAgICAgIEFkZHJlc3M6ICcnLFxuICAgICAgQ2FjaGVQZXJpb2RJbk1pbnV0ZXM6IDYwIC8vbG9uZy1saXZlIGNhY2hlXG4gICAgfV0pO1xuICAgIGVuZHBvaW50UmVxdWVzdC5zZW5kKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlLmVycm9yID0gdXRpbC5lcnJvcihlcnIsIHsgcmV0cnlhYmxlOiBmYWxzZSB9KTtcbiAgICAgICAgQVdTLmVuZHBvaW50Q2FjaGUucmVtb3ZlKGNhY2hlS2V5KTtcblxuICAgICAgICAvL2ZhaWwgYWxsIHRoZSBwZW5kaW5nIHJlcXVlc3RzIGluIGJhdGNoXG4gICAgICAgIGlmIChyZXF1ZXN0UXVldWVbY2FjaGVLZXlTdHJdKSB7XG4gICAgICAgICAgdmFyIHBlbmRpbmdSZXF1ZXN0cyA9IHJlcXVlc3RRdWV1ZVtjYWNoZUtleVN0cl07XG4gICAgICAgICAgdXRpbC5hcnJheUVhY2gocGVuZGluZ1JlcXVlc3RzLCBmdW5jdGlvbihyZXF1ZXN0Q29udGV4dCkge1xuICAgICAgICAgICAgcmVxdWVzdENvbnRleHQucmVxdWVzdC5yZXNwb25zZS5lcnJvciA9IHV0aWwuZXJyb3IoZXJyLCB7IHJldHJ5YWJsZTogZmFsc2UgfSk7XG4gICAgICAgICAgICByZXF1ZXN0Q29udGV4dC5jYWxsYmFjaygpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0UXVldWVbY2FjaGVLZXlTdHJdO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRhdGEpIHtcbiAgICAgICAgQVdTLmVuZHBvaW50Q2FjaGUucHV0KGNhY2hlS2V5U3RyLCBkYXRhLkVuZHBvaW50cyk7XG4gICAgICAgIHJlcXVlc3QuaHR0cFJlcXVlc3QudXBkYXRlRW5kcG9pbnQoZGF0YS5FbmRwb2ludHNbMF0uQWRkcmVzcyk7XG5cbiAgICAgICAgLy91cGRhdGUgdGhlIGVuZHBvaW50IGZvciBhbGwgdGhlIHBlbmRpbmcgcmVxdWVzdHMgaW4gYmF0Y2hcbiAgICAgICAgaWYgKHJlcXVlc3RRdWV1ZVtjYWNoZUtleVN0cl0pIHtcbiAgICAgICAgICB2YXIgcGVuZGluZ1JlcXVlc3RzID0gcmVxdWVzdFF1ZXVlW2NhY2hlS2V5U3RyXTtcbiAgICAgICAgICB1dGlsLmFycmF5RWFjaChwZW5kaW5nUmVxdWVzdHMsIGZ1bmN0aW9uKHJlcXVlc3RDb250ZXh0KSB7XG4gICAgICAgICAgICByZXF1ZXN0Q29udGV4dC5yZXF1ZXN0Lmh0dHBSZXF1ZXN0LnVwZGF0ZUVuZHBvaW50KGRhdGEuRW5kcG9pbnRzWzBdLkFkZHJlc3MpO1xuICAgICAgICAgICAgcmVxdWVzdENvbnRleHQuY2FsbGJhY2soKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdFF1ZXVlW2NhY2hlS2V5U3RyXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZG9uZSgpO1xuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogYWRkIGFwaSB2ZXJzaW9uIGhlYWRlciB0byBlbmRwb2ludCBvcGVyYXRpb25cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBhZGRBcGlWZXJzaW9uSGVhZGVyKGVuZHBvaW50UmVxdWVzdCkge1xuICB2YXIgYXBpID0gZW5kcG9pbnRSZXF1ZXN0LnNlcnZpY2UuYXBpO1xuICB2YXIgYXBpVmVyc2lvbiA9IGFwaS5hcGlWZXJzaW9uO1xuICBpZiAoYXBpVmVyc2lvbiAmJiAhZW5kcG9pbnRSZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnNbJ3gtYW16LWFwaS12ZXJzaW9uJ10pIHtcbiAgICBlbmRwb2ludFJlcXVlc3QuaHR0cFJlcXVlc3QuaGVhZGVyc1sneC1hbXotYXBpLXZlcnNpb24nXSA9IGFwaVZlcnNpb247XG4gIH1cbn1cblxuLyoqXG4gKiBJZiBhcGkgY2FsbCBnZXRzIGludmFsaWQgZW5kcG9pbnQgZXhjZXB0aW9uLCBTREsgc2hvdWxkIGF0dGVtcHQgdG8gcmVtb3ZlIHRoZSBpbnZhbGlkXG4gKiBlbmRwb2ludCBmcm9tIGNhY2hlLlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGludmFsaWRhdGVDYWNoZWRFbmRwb2ludHMocmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG4gIHZhciBodHRwUmVzcG9uc2UgPSByZXNwb25zZS5odHRwUmVzcG9uc2U7XG4gIGlmIChlcnJvciAmJlxuICAgIChlcnJvci5jb2RlID09PSAnSW52YWxpZEVuZHBvaW50RXhjZXB0aW9uJyB8fCBodHRwUmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNDIxKVxuICApIHtcbiAgICB2YXIgcmVxdWVzdCA9IHJlc3BvbnNlLnJlcXVlc3Q7XG4gICAgdmFyIG9wZXJhdGlvbnMgPSByZXF1ZXN0LnNlcnZpY2UuYXBpLm9wZXJhdGlvbnMgfHwge307XG4gICAgdmFyIGlucHV0U2hhcGUgPSBvcGVyYXRpb25zW3JlcXVlc3Qub3BlcmF0aW9uXSA/IG9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dLmlucHV0IDogdW5kZWZpbmVkO1xuICAgIHZhciBpZGVudGlmaWVycyA9IG1hcnNoYWxsQ3VzdG9tSWRlbnRpZmllcnMocmVxdWVzdCwgaW5wdXRTaGFwZSk7XG4gICAgdmFyIGNhY2hlS2V5ID0gZ2V0Q2FjaGVLZXkocmVxdWVzdCk7XG4gICAgaWYgKE9iamVjdC5rZXlzKGlkZW50aWZpZXJzKS5sZW5ndGggPiAwKSB7XG4gICAgICBjYWNoZUtleSA9IHV0aWwudXBkYXRlKGNhY2hlS2V5LCBpZGVudGlmaWVycyk7XG4gICAgICBpZiAob3BlcmF0aW9uc1tyZXF1ZXN0Lm9wZXJhdGlvbl0pIGNhY2hlS2V5Lm9wZXJhdGlvbiA9IG9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dLm5hbWU7XG4gICAgfVxuICAgIEFXUy5lbmRwb2ludENhY2hlLnJlbW92ZShjYWNoZUtleSk7XG4gIH1cbn1cblxuLyoqXG4gKiBJZiBlbmRwb2ludCBpcyBleHBsaWNpdGx5IGNvbmZpZ3VyZWQsIFNESyBzaG91bGQgbm90IGRvIGVuZHBvaW50IGRpc2NvdmVyeSBpbiBhbnl0aW1lLlxuICogQHBhcmFtIFtvYmplY3RdIGNsaWVudCBTZXJ2aWNlIGNsaWVudCBvYmplY3QuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gaGFzQ3VzdG9tRW5kcG9pbnQoY2xpZW50KSB7XG4gIC8vaWYgc2V0IGVuZHBvaW50IGlzIHNldCBmb3Igc3BlY2lmaWMgY2xpZW50LCBlbmFibGUgZW5kcG9pbnQgZGlzY292ZXJ5IHdpbGwgcmFpc2UgYW4gZXJyb3IuXG4gIGlmIChjbGllbnQuX29yaWdpbmFsQ29uZmlnICYmIGNsaWVudC5fb3JpZ2luYWxDb25maWcuZW5kcG9pbnQgJiYgY2xpZW50Ll9vcmlnaW5hbENvbmZpZy5lbmRwb2ludERpc2NvdmVyeUVuYWJsZWQgPT09IHRydWUpIHtcbiAgICB0aHJvdyB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICBjb2RlOiAnQ29uZmlndXJhdGlvbkV4Y2VwdGlvbicsXG4gICAgICBtZXNzYWdlOiAnQ3VzdG9tIGVuZHBvaW50IGlzIHN1cHBsaWVkOyBlbmRwb2ludERpc2NvdmVyeUVuYWJsZWQgbXVzdCBub3QgYmUgdHJ1ZS4nXG4gICAgfSk7XG4gIH07XG4gIHZhciBzdmNDb25maWcgPSBBV1MuY29uZmlnW2NsaWVudC5zZXJ2aWNlSWRlbnRpZmllcl0gfHwge307XG4gIHJldHVybiBCb29sZWFuKEFXUy5jb25maWcuZW5kcG9pbnQgfHwgc3ZjQ29uZmlnLmVuZHBvaW50IHx8IChjbGllbnQuX29yaWdpbmFsQ29uZmlnICYmIGNsaWVudC5fb3JpZ2luYWxDb25maWcuZW5kcG9pbnQpKTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gaXNGYWxzeSh2YWx1ZSkge1xuICByZXR1cm4gWydmYWxzZScsICcwJ10uaW5kZXhPZih2YWx1ZSkgPj0gMDtcbn1cblxuLyoqXG4gKiBJZiBlbmRwb2ludCBkaXNjb3Zlcnkgc2hvdWxkIHBlcmZvcm0gZm9yIHRoaXMgcmVxdWVzdCB3aGVuIG5vIG9wZXJhdGlvbiByZXF1aXJlcyBlbmRwb2ludFxuICogZGlzY292ZXJ5IGZvciB0aGUgZ2l2ZW4gc2VydmljZS5cbiAqIFNESyBwZXJmb3JtcyBjb25maWcgcmVzb2x1dGlvbiBpbiBvcmRlciBsaWtlIGJlbG93OlxuICogMS4gSWYgc2V0IGluIGNsaWVudCBjb25maWd1cmF0aW9uLlxuICogMi4gSWYgc2V0IGluIGVudiBBV1NfRU5BQkxFX0VORFBPSU5UX0RJU0NPVkVSWS5cbiAqIDMuIElmIHNldCBpbiBzaGFyZWQgaW5pIGNvbmZpZyBmaWxlIHdpdGgga2V5ICdlbmRwb2ludF9kaXNjb3ZlcnlfZW5hYmxlZCcuXG4gKiBAcGFyYW0gW29iamVjdF0gcmVxdWVzdCByZXF1ZXN0IG9iamVjdC5cbiAqIEByZXR1cm5zIFtib29sZWFufHVuZGVmaW5lZF0gaWYgZW5kcG9pbnQgZGlzY292ZXJ5IGNvbmZpZyBpcyBub3Qgc2V0IGluIGFueSBzb3VyY2UsIHRoaXNcbiAqICBmdW5jdGlvbiByZXR1cm5zIHVuZGVmaW5lZFxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVFbmRwb2ludERpc2NvdmVyeUNvbmZpZyhyZXF1ZXN0KSB7XG4gIHZhciBzZXJ2aWNlID0gcmVxdWVzdC5zZXJ2aWNlIHx8IHt9O1xuICBpZiAoc2VydmljZS5jb25maWcuZW5kcG9pbnREaXNjb3ZlcnlFbmFibGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gc2VydmljZS5jb25maWcuZW5kcG9pbnREaXNjb3ZlcnlFbmFibGVkO1xuICB9XG5cbiAgLy9zaGFyZWQgaW5pIGZpbGUgaXMgb25seSBhdmFpbGFibGUgaW4gTm9kZVxuICAvL25vdCB0byBjaGVjayBlbnYgaW4gYnJvd3NlclxuICBpZiAodXRpbC5pc0Jyb3dzZXIoKSkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAvLyBJZiBhbnkgb2YgcmVjb2duaXplZCBlbmRwb2ludCBkaXNjb3ZlcnkgY29uZmlnIGVudiBpcyBzZXRcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmRwb2ludERpc2NvdmVyeUVuYWJsZWRFbnZzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGVudiA9IGVuZHBvaW50RGlzY292ZXJ5RW5hYmxlZEVudnNbaV07XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwcm9jZXNzLmVudiwgZW52KSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52W2Vudl0gPT09ICcnIHx8IHByb2Nlc3MuZW52W2Vudl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICAgICAgY29kZTogJ0NvbmZpZ3VyYXRpb25FeGNlcHRpb24nLFxuICAgICAgICAgIG1lc3NhZ2U6ICdlbnZpcm9ubWVudGFsIHZhcmlhYmxlICcgKyBlbnYgKyAnIGNhbm5vdCBiZSBzZXQgdG8gbm90aGluZydcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gIWlzRmFsc3kocHJvY2Vzcy5lbnZbZW52XSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGNvbmZpZ0ZpbGUgPSB7fTtcbiAgdHJ5IHtcbiAgICBjb25maWdGaWxlID0gQVdTLnV0aWwuaW5pTG9hZGVyID8gQVdTLnV0aWwuaW5pTG9hZGVyLmxvYWRGcm9tKHtcbiAgICAgIGlzQ29uZmlnOiB0cnVlLFxuICAgICAgZmlsZW5hbWU6IHByb2Nlc3MuZW52W0FXUy51dGlsLnNoYXJlZENvbmZpZ0ZpbGVFbnZdXG4gICAgfSkgOiB7fTtcbiAgfSBjYXRjaCAoZSkge31cbiAgdmFyIHNoYXJlZEZpbGVDb25maWcgPSBjb25maWdGaWxlW1xuICAgIHByb2Nlc3MuZW52LkFXU19QUk9GSUxFIHx8IEFXUy51dGlsLmRlZmF1bHRQcm9maWxlXG4gIF0gfHwge307XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc2hhcmVkRmlsZUNvbmZpZywgJ2VuZHBvaW50X2Rpc2NvdmVyeV9lbmFibGVkJykpIHtcbiAgICBpZiAoc2hhcmVkRmlsZUNvbmZpZy5lbmRwb2ludF9kaXNjb3ZlcnlfZW5hYmxlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICAgIGNvZGU6ICdDb25maWd1cmF0aW9uRXhjZXB0aW9uJyxcbiAgICAgICAgbWVzc2FnZTogJ2NvbmZpZyBmaWxlIGVudHJ5IFxcJ2VuZHBvaW50X2Rpc2NvdmVyeV9lbmFibGVkXFwnIGNhbm5vdCBiZSBzZXQgdG8gbm90aGluZydcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gIWlzRmFsc3koc2hhcmVkRmlsZUNvbmZpZy5lbmRwb2ludF9kaXNjb3ZlcnlfZW5hYmxlZCk7XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLyoqXG4gKiBhdHRhY2ggZW5kcG9pbnQgZGlzY292ZXJ5IGxvZ2ljIHRvIHJlcXVlc3Qgb2JqZWN0XG4gKiBAcGFyYW0gW29iamVjdF0gcmVxdWVzdFxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGRpc2NvdmVyRW5kcG9pbnQocmVxdWVzdCwgZG9uZSkge1xuICB2YXIgc2VydmljZSA9IHJlcXVlc3Quc2VydmljZSB8fCB7fTtcbiAgaWYgKGhhc0N1c3RvbUVuZHBvaW50KHNlcnZpY2UpIHx8IHJlcXVlc3QuaXNQcmVzaWduZWQoKSkgcmV0dXJuIGRvbmUoKTtcblxuICB2YXIgb3BlcmF0aW9ucyA9IHNlcnZpY2UuYXBpLm9wZXJhdGlvbnMgfHwge307XG4gIHZhciBvcGVyYXRpb25Nb2RlbCA9IG9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dO1xuICB2YXIgaXNFbmRwb2ludERpc2NvdmVyeVJlcXVpcmVkID0gb3BlcmF0aW9uTW9kZWwgPyBvcGVyYXRpb25Nb2RlbC5lbmRwb2ludERpc2NvdmVyeVJlcXVpcmVkIDogJ05VTEwnO1xuICB2YXIgaXNFbmFibGVkID0gcmVzb2x2ZUVuZHBvaW50RGlzY292ZXJ5Q29uZmlnKHJlcXVlc3QpO1xuICB2YXIgaGFzUmVxdWlyZWRFbmRwb2ludERpc2NvdmVyeSA9IHNlcnZpY2UuYXBpLmhhc1JlcXVpcmVkRW5kcG9pbnREaXNjb3Zlcnk7XG4gIGlmIChpc0VuYWJsZWQgfHwgaGFzUmVxdWlyZWRFbmRwb2ludERpc2NvdmVyeSkge1xuICAgIC8vIE9uY2UgYSBjdXN0b21lciBlbmFibGVzIGVuZHBvaW50IGRpc2NvdmVyeSwgdGhlIFNESyBzaG91bGQgc3RhcnQgYXBwZW5kaW5nXG4gICAgLy8gdGhlIHN0cmluZyBlbmRwb2ludC1kaXNjb3ZlcnkgdG8gdGhlIHVzZXItYWdlbnQgb24gYWxsIHJlcXVlc3RzLlxuICAgIHJlcXVlc3QuaHR0cFJlcXVlc3QuYXBwZW5kVG9Vc2VyQWdlbnQoJ2VuZHBvaW50LWRpc2NvdmVyeScpO1xuICB9XG4gIHN3aXRjaCAoaXNFbmRwb2ludERpc2NvdmVyeVJlcXVpcmVkKSB7XG4gICAgY2FzZSAnT1BUSU9OQUwnOlxuICAgICAgaWYgKGlzRW5hYmxlZCB8fCBoYXNSZXF1aXJlZEVuZHBvaW50RGlzY292ZXJ5KSB7XG4gICAgICAgIC8vIEZvciBhIGdpdmVuIHNlcnZpY2U7IGlmIGF0IGxlYXN0IG9uZSBvcGVyYXRpb24gcmVxdWlyZXMgZW5kcG9pbnQgZGlzY292ZXJ5IHRoZW4gdGhlIFNESyBtdXN0IGVuYWJsZSBlbmRwb2ludCBkaXNjb3ZlcnlcbiAgICAgICAgLy8gYnkgZGVmYXVsdCBmb3IgYWxsIG9wZXJhdGlvbnMgb2YgdGhhdCBzZXJ2aWNlLCBpbmNsdWRpbmcgb3BlcmF0aW9ucyB3aGVyZSBlbmRwb2ludCBkaXNjb3ZlcnkgaXMgb3B0aW9uYWwuXG4gICAgICAgIG9wdGlvbmFsRGlzY292ZXJFbmRwb2ludChyZXF1ZXN0KTtcbiAgICAgICAgcmVxdWVzdC5hZGROYW1lZExpc3RlbmVyKCdJTlZBTElEQVRFX0NBQ0hFRF9FTkRQT0lOVFMnLCAnZXh0cmFjdEVycm9yJywgaW52YWxpZGF0ZUNhY2hlZEVuZHBvaW50cyk7XG4gICAgICB9XG4gICAgICBkb25lKCk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdSRVFVSVJFRCc6XG4gICAgICBpZiAoaXNFbmFibGVkID09PSBmYWxzZSkge1xuICAgICAgICAvLyBGb3IgYSBnaXZlbiBvcGVyYXRpb247IGlmIGVuZHBvaW50IGRpc2NvdmVyeSBpcyByZXF1aXJlZCBhbmQgaXQgaGFzIGJlZW4gZGlzYWJsZWQgb24gdGhlIFNESyBjbGllbnQsXG4gICAgICAgIC8vIHRoZW4gdGhlIFNESyBtdXN0IHJldHVybiBhIGNsZWFyIGFuZCBhY3Rpb25hYmxlIGV4Y2VwdGlvbi5cbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZS5lcnJvciA9IHV0aWwuZXJyb3IobmV3IEVycm9yKCksIHtcbiAgICAgICAgICBjb2RlOiAnQ29uZmlndXJhdGlvbkV4Y2VwdGlvbicsXG4gICAgICAgICAgbWVzc2FnZTogJ0VuZHBvaW50IERpc2NvdmVyeSBpcyBkaXNhYmxlZCBidXQgJyArIHNlcnZpY2UuYXBpLmNsYXNzTmFtZSArICcuJyArIHJlcXVlc3Qub3BlcmF0aW9uICtcbiAgICAgICAgICAgICAgICAgICAgJygpIHJlcXVpcmVzIGl0LiBQbGVhc2UgY2hlY2sgeW91ciBjb25maWd1cmF0aW9ucy4nXG4gICAgICAgIH0pO1xuICAgICAgICBkb25lKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcmVxdWVzdC5hZGROYW1lZExpc3RlbmVyKCdJTlZBTElEQVRFX0NBQ0hFRF9FTkRQT0lOVFMnLCAnZXh0cmFjdEVycm9yJywgaW52YWxpZGF0ZUNhY2hlZEVuZHBvaW50cyk7XG4gICAgICByZXF1aXJlZERpc2NvdmVyRW5kcG9pbnQocmVxdWVzdCwgZG9uZSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdOVUxMJzpcbiAgICBkZWZhdWx0OlxuICAgICAgZG9uZSgpO1xuICAgICAgYnJlYWs7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGRpc2NvdmVyRW5kcG9pbnQ6IGRpc2NvdmVyRW5kcG9pbnQsXG4gIHJlcXVpcmVkRGlzY292ZXJFbmRwb2ludDogcmVxdWlyZWREaXNjb3ZlckVuZHBvaW50LFxuICBvcHRpb25hbERpc2NvdmVyRW5kcG9pbnQ6IG9wdGlvbmFsRGlzY292ZXJFbmRwb2ludCxcbiAgbWFyc2hhbGxDdXN0b21JZGVudGlmaWVyczogbWFyc2hhbGxDdXN0b21JZGVudGlmaWVycyxcbiAgZ2V0Q2FjaGVLZXk6IGdldENhY2hlS2V5LFxuICBpbnZhbGlkYXRlQ2FjaGVkRW5kcG9pbnQ6IGludmFsaWRhdGVDYWNoZWRFbmRwb2ludHMsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/discover_endpoint.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var eventMessageChunker = (__webpack_require__(/*! ../event-stream/event-message-chunker */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker.js\").eventMessageChunker);\nvar parseEvent = (__webpack_require__(/*! ./parse-event */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-event.js\").parseEvent);\n\nfunction createEventStream(body, parser, model) {\n    var eventMessages = eventMessageChunker(body);\n\n    var events = [];\n\n    for (var i = 0; i < eventMessages.length; i++) {\n        events.push(parseEvent(parser, eventMessages[i], model));\n    }\n\n    return events;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9idWZmZXJlZC1jcmVhdGUtZXZlbnQtc3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFBLDBCQUEwQixvS0FBb0U7QUFDOUYsaUJBQWlCLHlIQUFtQzs7QUFFcEQ7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IsMEJBQTBCO0FBQzlDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvZXZlbnQtc3RyZWFtL2J1ZmZlcmVkLWNyZWF0ZS1ldmVudC1zdHJlYW0uanM/YzY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXZlbnRNZXNzYWdlQ2h1bmtlciA9IHJlcXVpcmUoJy4uL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLWNodW5rZXInKS5ldmVudE1lc3NhZ2VDaHVua2VyO1xudmFyIHBhcnNlRXZlbnQgPSByZXF1aXJlKCcuL3BhcnNlLWV2ZW50JykucGFyc2VFdmVudDtcblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRTdHJlYW0oYm9keSwgcGFyc2VyLCBtb2RlbCkge1xuICAgIHZhciBldmVudE1lc3NhZ2VzID0gZXZlbnRNZXNzYWdlQ2h1bmtlcihib2R5KTtcblxuICAgIHZhciBldmVudHMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZlbnRNZXNzYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBldmVudHMucHVzaChwYXJzZUV2ZW50KHBhcnNlciwgZXZlbnRNZXNzYWdlc1tpXSwgbW9kZWwpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXZlbnRzO1xufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjcmVhdGVFdmVudFN0cmVhbTogY3JlYXRlRXZlbnRTdHJlYW1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker-stream.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/event-message-chunker-stream.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = (__webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\").util);\nvar Transform = (__webpack_require__(/*! stream */ \"stream\").Transform);\nvar allocBuffer = util.buffer.alloc;\n\n/** @type {Transform} */\nfunction EventMessageChunkerStream(options) {\n    Transform.call(this, options);\n\n    this.currentMessageTotalLength = 0;\n    this.currentMessagePendingLength = 0;\n    /** @type {Buffer} */\n    this.currentMessage = null;\n\n    /** @type {Buffer} */\n    this.messageLengthBuffer = null;\n}\n\nEventMessageChunkerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventMessageChunkerStream.prototype._transform = function(chunk, encoding, callback) {\n    var chunkLength = chunk.length;\n    var currentOffset = 0;\n\n    while (currentOffset < chunkLength) {\n        // create new message if necessary\n        if (!this.currentMessage) {\n            // working on a new message, determine total length\n            var bytesRemaining = chunkLength - currentOffset;\n            // prevent edge case where total length spans 2 chunks\n            if (!this.messageLengthBuffer) {\n                this.messageLengthBuffer = allocBuffer(4);\n            }\n            var numBytesForTotal = Math.min(\n                4 - this.currentMessagePendingLength, // remaining bytes to fill the messageLengthBuffer\n                bytesRemaining // bytes left in chunk\n            );\n\n            chunk.copy(\n                this.messageLengthBuffer,\n                this.currentMessagePendingLength,\n                currentOffset,\n                currentOffset + numBytesForTotal\n            );\n\n            this.currentMessagePendingLength += numBytesForTotal;\n            currentOffset += numBytesForTotal;\n\n            if (this.currentMessagePendingLength < 4) {\n                // not enough information to create the current message\n                break;\n            }\n            this.allocateMessage(this.messageLengthBuffer.readUInt32BE(0));\n            this.messageLengthBuffer = null;\n        }\n\n        // write data into current message\n        var numBytesToWrite = Math.min(\n            this.currentMessageTotalLength - this.currentMessagePendingLength, // number of bytes left to complete message\n            chunkLength - currentOffset // number of bytes left in the original chunk\n        );\n        chunk.copy(\n            this.currentMessage, // target buffer\n            this.currentMessagePendingLength, // target offset\n            currentOffset, // chunk offset\n            currentOffset + numBytesToWrite // chunk end to write\n        );\n        this.currentMessagePendingLength += numBytesToWrite;\n        currentOffset += numBytesToWrite;\n\n        // check if a message is ready to be pushed\n        if (this.currentMessageTotalLength && this.currentMessageTotalLength === this.currentMessagePendingLength) {\n            // push out the message\n            this.push(this.currentMessage);\n            // cleanup\n            this.currentMessage = null;\n            this.currentMessageTotalLength = 0;\n            this.currentMessagePendingLength = 0;\n        }\n    }\n\n    callback();\n};\n\nEventMessageChunkerStream.prototype._flush = function(callback) {\n    if (this.currentMessageTotalLength) {\n        if (this.currentMessageTotalLength === this.currentMessagePendingLength) {\n            callback(null, this.currentMessage);\n        } else {\n            callback(new Error('Truncated event message received.'));\n        }\n    } else {\n        callback();\n    }\n};\n\n/**\n * @param {number} size Size of the message to be allocated.\n * @api private\n */\nEventMessageChunkerStream.prototype.allocateMessage = function(size) {\n    if (typeof size !== 'number') {\n        throw new Error('Attempted to allocate an event message where size was not a number: ' + size);\n    }\n    this.currentMessageTotalLength = size;\n    this.currentMessagePendingLength = 4;\n    this.currentMessage = allocBuffer(size);\n    this.currentMessage.writeUInt32BE(size, 0);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    EventMessageChunkerStream: EventMessageChunkerStream\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLWNodW5rZXItc3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcseUZBQXVCO0FBQ2xDLGdCQUFnQix1REFBMkI7QUFDM0M7O0FBRUEsV0FBVyxXQUFXO0FBQ3RCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2Qjs7QUFFQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLWNodW5rZXItc3RyZWFtLmpzP2JmNzUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSByZXF1aXJlKCcuLi9jb3JlJykudXRpbDtcbnZhciBUcmFuc2Zvcm0gPSByZXF1aXJlKCdzdHJlYW0nKS5UcmFuc2Zvcm07XG52YXIgYWxsb2NCdWZmZXIgPSB1dGlsLmJ1ZmZlci5hbGxvYztcblxuLyoqIEB0eXBlIHtUcmFuc2Zvcm19ICovXG5mdW5jdGlvbiBFdmVudE1lc3NhZ2VDaHVua2VyU3RyZWFtKG9wdGlvbnMpIHtcbiAgICBUcmFuc2Zvcm0uY2FsbCh0aGlzLCBvcHRpb25zKTtcblxuICAgIHRoaXMuY3VycmVudE1lc3NhZ2VUb3RhbExlbmd0aCA9IDA7XG4gICAgdGhpcy5jdXJyZW50TWVzc2FnZVBlbmRpbmdMZW5ndGggPSAwO1xuICAgIC8qKiBAdHlwZSB7QnVmZmVyfSAqL1xuICAgIHRoaXMuY3VycmVudE1lc3NhZ2UgPSBudWxsO1xuXG4gICAgLyoqIEB0eXBlIHtCdWZmZXJ9ICovXG4gICAgdGhpcy5tZXNzYWdlTGVuZ3RoQnVmZmVyID0gbnVsbDtcbn1cblxuRXZlbnRNZXNzYWdlQ2h1bmtlclN0cmVhbS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFRyYW5zZm9ybS5wcm90b3R5cGUpO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gY2h1bmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbmNvZGluZ1xuICogQHBhcmFtIHsqfSBjYWxsYmFja1xuICovXG5FdmVudE1lc3NhZ2VDaHVua2VyU3RyZWFtLnByb3RvdHlwZS5fdHJhbnNmb3JtID0gZnVuY3Rpb24oY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICAgIHZhciBjaHVua0xlbmd0aCA9IGNodW5rLmxlbmd0aDtcbiAgICB2YXIgY3VycmVudE9mZnNldCA9IDA7XG5cbiAgICB3aGlsZSAoY3VycmVudE9mZnNldCA8IGNodW5rTGVuZ3RoKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBuZXcgbWVzc2FnZSBpZiBuZWNlc3NhcnlcbiAgICAgICAgaWYgKCF0aGlzLmN1cnJlbnRNZXNzYWdlKSB7XG4gICAgICAgICAgICAvLyB3b3JraW5nIG9uIGEgbmV3IG1lc3NhZ2UsIGRldGVybWluZSB0b3RhbCBsZW5ndGhcbiAgICAgICAgICAgIHZhciBieXRlc1JlbWFpbmluZyA9IGNodW5rTGVuZ3RoIC0gY3VycmVudE9mZnNldDtcbiAgICAgICAgICAgIC8vIHByZXZlbnQgZWRnZSBjYXNlIHdoZXJlIHRvdGFsIGxlbmd0aCBzcGFucyAyIGNodW5rc1xuICAgICAgICAgICAgaWYgKCF0aGlzLm1lc3NhZ2VMZW5ndGhCdWZmZXIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VMZW5ndGhCdWZmZXIgPSBhbGxvY0J1ZmZlcig0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBudW1CeXRlc0ZvclRvdGFsID0gTWF0aC5taW4oXG4gICAgICAgICAgICAgICAgNCAtIHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoLCAvLyByZW1haW5pbmcgYnl0ZXMgdG8gZmlsbCB0aGUgbWVzc2FnZUxlbmd0aEJ1ZmZlclxuICAgICAgICAgICAgICAgIGJ5dGVzUmVtYWluaW5nIC8vIGJ5dGVzIGxlZnQgaW4gY2h1bmtcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIGNodW5rLmNvcHkoXG4gICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlTGVuZ3RoQnVmZmVyLFxuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRPZmZzZXQsXG4gICAgICAgICAgICAgICAgY3VycmVudE9mZnNldCArIG51bUJ5dGVzRm9yVG90YWxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoICs9IG51bUJ5dGVzRm9yVG90YWw7XG4gICAgICAgICAgICBjdXJyZW50T2Zmc2V0ICs9IG51bUJ5dGVzRm9yVG90YWw7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRNZXNzYWdlUGVuZGluZ0xlbmd0aCA8IDQpIHtcbiAgICAgICAgICAgICAgICAvLyBub3QgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGNyZWF0ZSB0aGUgY3VycmVudCBtZXNzYWdlXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmFsbG9jYXRlTWVzc2FnZSh0aGlzLm1lc3NhZ2VMZW5ndGhCdWZmZXIucmVhZFVJbnQzMkJFKDApKTtcbiAgICAgICAgICAgIHRoaXMubWVzc2FnZUxlbmd0aEJ1ZmZlciA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3cml0ZSBkYXRhIGludG8gY3VycmVudCBtZXNzYWdlXG4gICAgICAgIHZhciBudW1CeXRlc1RvV3JpdGUgPSBNYXRoLm1pbihcbiAgICAgICAgICAgIHRoaXMuY3VycmVudE1lc3NhZ2VUb3RhbExlbmd0aCAtIHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoLCAvLyBudW1iZXIgb2YgYnl0ZXMgbGVmdCB0byBjb21wbGV0ZSBtZXNzYWdlXG4gICAgICAgICAgICBjaHVua0xlbmd0aCAtIGN1cnJlbnRPZmZzZXQgLy8gbnVtYmVyIG9mIGJ5dGVzIGxlZnQgaW4gdGhlIG9yaWdpbmFsIGNodW5rXG4gICAgICAgICk7XG4gICAgICAgIGNodW5rLmNvcHkoXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRNZXNzYWdlLCAvLyB0YXJnZXQgYnVmZmVyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRNZXNzYWdlUGVuZGluZ0xlbmd0aCwgLy8gdGFyZ2V0IG9mZnNldFxuICAgICAgICAgICAgY3VycmVudE9mZnNldCwgLy8gY2h1bmsgb2Zmc2V0XG4gICAgICAgICAgICBjdXJyZW50T2Zmc2V0ICsgbnVtQnl0ZXNUb1dyaXRlIC8vIGNodW5rIGVuZCB0byB3cml0ZVxuICAgICAgICApO1xuICAgICAgICB0aGlzLmN1cnJlbnRNZXNzYWdlUGVuZGluZ0xlbmd0aCArPSBudW1CeXRlc1RvV3JpdGU7XG4gICAgICAgIGN1cnJlbnRPZmZzZXQgKz0gbnVtQnl0ZXNUb1dyaXRlO1xuXG4gICAgICAgIC8vIGNoZWNrIGlmIGEgbWVzc2FnZSBpcyByZWFkeSB0byBiZSBwdXNoZWRcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudE1lc3NhZ2VUb3RhbExlbmd0aCAmJiB0aGlzLmN1cnJlbnRNZXNzYWdlVG90YWxMZW5ndGggPT09IHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoKSB7XG4gICAgICAgICAgICAvLyBwdXNoIG91dCB0aGUgbWVzc2FnZVxuICAgICAgICAgICAgdGhpcy5wdXNoKHRoaXMuY3VycmVudE1lc3NhZ2UpO1xuICAgICAgICAgICAgLy8gY2xlYW51cFxuICAgICAgICAgICAgdGhpcy5jdXJyZW50TWVzc2FnZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRNZXNzYWdlVG90YWxMZW5ndGggPSAwO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50TWVzc2FnZVBlbmRpbmdMZW5ndGggPSAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2FsbGJhY2soKTtcbn07XG5cbkV2ZW50TWVzc2FnZUNodW5rZXJTdHJlYW0ucHJvdG90eXBlLl9mbHVzaCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudE1lc3NhZ2VUb3RhbExlbmd0aCkge1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50TWVzc2FnZVRvdGFsTGVuZ3RoID09PSB0aGlzLmN1cnJlbnRNZXNzYWdlUGVuZGluZ0xlbmd0aCkge1xuICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgdGhpcy5jdXJyZW50TWVzc2FnZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ1RydW5jYXRlZCBldmVudCBtZXNzYWdlIHJlY2VpdmVkLicpKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gc2l6ZSBTaXplIG9mIHRoZSBtZXNzYWdlIHRvIGJlIGFsbG9jYXRlZC5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5FdmVudE1lc3NhZ2VDaHVua2VyU3RyZWFtLnByb3RvdHlwZS5hbGxvY2F0ZU1lc3NhZ2UgPSBmdW5jdGlvbihzaXplKSB7XG4gICAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F0dGVtcHRlZCB0byBhbGxvY2F0ZSBhbiBldmVudCBtZXNzYWdlIHdoZXJlIHNpemUgd2FzIG5vdCBhIG51bWJlcjogJyArIHNpemUpO1xuICAgIH1cbiAgICB0aGlzLmN1cnJlbnRNZXNzYWdlVG90YWxMZW5ndGggPSBzaXplO1xuICAgIHRoaXMuY3VycmVudE1lc3NhZ2VQZW5kaW5nTGVuZ3RoID0gNDtcbiAgICB0aGlzLmN1cnJlbnRNZXNzYWdlID0gYWxsb2NCdWZmZXIoc2l6ZSk7XG4gICAgdGhpcy5jdXJyZW50TWVzc2FnZS53cml0ZVVJbnQzMkJFKHNpemUsIDApO1xufTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRXZlbnRNZXNzYWdlQ2h1bmtlclN0cmVhbTogRXZlbnRNZXNzYWdlQ2h1bmtlclN0cmVhbVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker-stream.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/event-message-chunker.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLWNodW5rZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLWNodW5rZXIuanM/NWJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRha2VzIGluIGEgYnVmZmVyIG9mIGV2ZW50IG1lc3NhZ2VzIGFuZCBzcGxpdHMgdGhlbSBpbnRvIGluZGl2aWR1YWwgbWVzc2FnZXMuXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmZmVyXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZXZlbnRNZXNzYWdlQ2h1bmtlcihidWZmZXIpIHtcbiAgICAvKiogQHR5cGUgQnVmZmVyW10gKi9cbiAgICB2YXIgbWVzc2FnZXMgPSBbXTtcbiAgICB2YXIgb2Zmc2V0ID0gMDtcblxuICAgIHdoaWxlIChvZmZzZXQgPCBidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgIHZhciB0b3RhbExlbmd0aCA9IGJ1ZmZlci5yZWFkSW50MzJCRShvZmZzZXQpO1xuXG4gICAgICAgIC8vIGNyZWF0ZSBuZXcgYnVmZmVyIGZvciBpbmRpdmlkdWFsIG1lc3NhZ2UgKHNoYXJlcyBtZW1vcnkgd2l0aCBvcmlnaW5hbClcbiAgICAgICAgdmFyIG1lc3NhZ2UgPSBidWZmZXIuc2xpY2Uob2Zmc2V0LCB0b3RhbExlbmd0aCArIG9mZnNldCk7XG4gICAgICAgIC8vIGluY3JlbWVudCBvZmZzZXQgdG8gaXQgc3RhcnRzIGF0IHRoZSBuZXh0IG1lc3NhZ2VcbiAgICAgICAgb2Zmc2V0ICs9IHRvdGFsTGVuZ3RoO1xuXG4gICAgICAgIG1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lc3NhZ2VzO1xufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBldmVudE1lc3NhZ2VDaHVua2VyOiBldmVudE1lc3NhZ2VDaHVua2VyXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Transform = (__webpack_require__(/*! stream */ \"stream\").Transform);\nvar parseEvent = (__webpack_require__(/*! ./parse-event */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-event.js\").parseEvent);\n\n/** @type {Transform} */\nfunction EventUnmarshallerStream(options) {\n    options = options || {};\n    // set output to object mode\n    options.readableObjectMode = true;\n    Transform.call(this, options);\n    this._readableState.objectMode = true;\n\n    this.parser = options.parser;\n    this.eventStreamModel = options.eventStreamModel;\n}\n\nEventUnmarshallerStream.prototype = Object.create(Transform.prototype);\n\n/**\n *\n * @param {Buffer} chunk\n * @param {string} encoding\n * @param {*} callback\n */\nEventUnmarshallerStream.prototype._transform = function(chunk, encoding, callback) {\n    try {\n        var event = parseEvent(this.parser, chunk, this.eventStreamModel);\n        this.push(event);\n        return callback();\n    } catch (err) {\n        callback(err);\n    }\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    EventUnmarshallerStream: EventUnmarshallerStream\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9ldmVudC1tZXNzYWdlLXVubWFyc2hhbGxlci1zdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLHVEQUEyQjtBQUMzQyxpQkFBaUIseUhBQW1DOztBQUVwRCxXQUFXLFdBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLEdBQUc7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9ldmVudC1zdHJlYW0vZXZlbnQtbWVzc2FnZS11bm1hcnNoYWxsZXItc3RyZWFtLmpzPzEwYmQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFRyYW5zZm9ybSA9IHJlcXVpcmUoJ3N0cmVhbScpLlRyYW5zZm9ybTtcbnZhciBwYXJzZUV2ZW50ID0gcmVxdWlyZSgnLi9wYXJzZS1ldmVudCcpLnBhcnNlRXZlbnQ7XG5cbi8qKiBAdHlwZSB7VHJhbnNmb3JtfSAqL1xuZnVuY3Rpb24gRXZlbnRVbm1hcnNoYWxsZXJTdHJlYW0ob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIC8vIHNldCBvdXRwdXQgdG8gb2JqZWN0IG1vZGVcbiAgICBvcHRpb25zLnJlYWRhYmxlT2JqZWN0TW9kZSA9IHRydWU7XG4gICAgVHJhbnNmb3JtLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gICAgdGhpcy5fcmVhZGFibGVTdGF0ZS5vYmplY3RNb2RlID0gdHJ1ZTtcblxuICAgIHRoaXMucGFyc2VyID0gb3B0aW9ucy5wYXJzZXI7XG4gICAgdGhpcy5ldmVudFN0cmVhbU1vZGVsID0gb3B0aW9ucy5ldmVudFN0cmVhbU1vZGVsO1xufVxuXG5FdmVudFVubWFyc2hhbGxlclN0cmVhbS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFRyYW5zZm9ybS5wcm90b3R5cGUpO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gY2h1bmtcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbmNvZGluZ1xuICogQHBhcmFtIHsqfSBjYWxsYmFja1xuICovXG5FdmVudFVubWFyc2hhbGxlclN0cmVhbS5wcm90b3R5cGUuX3RyYW5zZm9ybSA9IGZ1bmN0aW9uKGNodW5rLCBlbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgZXZlbnQgPSBwYXJzZUV2ZW50KHRoaXMucGFyc2VyLCBjaHVuaywgdGhpcy5ldmVudFN0cmVhbU1vZGVsKTtcbiAgICAgICAgdGhpcy5wdXNoKGV2ZW50KTtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgfVxufTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRXZlbnRVbm1hcnNoYWxsZXJTdHJlYW06IEV2ZW50VW5tYXJzaGFsbGVyU3RyZWFtXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/int64.js":
/*!************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/int64.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = (__webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\").util);\nvar toBuffer = util.buffer.toBuffer;\n\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction Int64(bytes) {\n    if (bytes.length !== 8) {\n        throw new Error('Int64 buffers must be exactly 8 bytes');\n    }\n    if (!util.Buffer.isBuffer(bytes)) bytes = toBuffer(bytes);\n\n    this.bytes = bytes;\n}\n\n/**\n * @param {number} number\n * @returns {Int64}\n *\n * @api private\n */\nInt64.fromNumber = function(number) {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n        throw new Error(\n            number + ' is too large (or, if negative, too small) to represent as an Int64'\n        );\n    }\n\n    var bytes = new Uint8Array(8);\n    for (\n        var i = 7, remaining = Math.abs(Math.round(number));\n        i > -1 && remaining > 0;\n        i--, remaining /= 256\n    ) {\n        bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n        negate(bytes);\n    }\n\n    return new Int64(bytes);\n};\n\n/**\n * @returns {number}\n *\n * @api private\n */\nInt64.prototype.valueOf = function() {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n    if (negative) {\n        negate(bytes);\n    }\n\n    return parseInt(bytes.toString('hex'), 16) * (negative ? -1 : 1);\n};\n\nInt64.prototype.toString = function() {\n    return String(this.valueOf());\n};\n\n/**\n * @param {Buffer} bytes\n *\n * @api private\n */\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xFF;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0) {\n            break;\n        }\n    }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    Int64: Int64\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9pbnQ2NC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLHlGQUF1QjtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9ldmVudC1zdHJlYW0vaW50NjQuanM/ZWE0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbCA9IHJlcXVpcmUoJy4uL2NvcmUnKS51dGlsO1xudmFyIHRvQnVmZmVyID0gdXRpbC5idWZmZXIudG9CdWZmZXI7XG5cbi8qKlxuICogQSBsb3NzbGVzcyByZXByZXNlbnRhdGlvbiBvZiBhIHNpZ25lZCwgNjQtYml0IGludGVnZXIuIEluc3RhbmNlcyBvZiB0aGlzXG4gKiBjbGFzcyBtYXkgYmUgdXNlZCBpbiBhcml0aG1ldGljIGV4cHJlc3Npb25zIGFzIGlmIHRoZXkgd2VyZSBudW1lcmljXG4gKiBwcmltaXRpdmVzLCBidXQgdGhlIGJpbmFyeSByZXByZXNlbnRhdGlvbiB3aWxsIGJlIHByZXNlcnZlZCB1bmNoYW5nZWQgYXMgdGhlXG4gKiBgYnl0ZXNgIHByb3BlcnR5IG9mIHRoZSBvYmplY3QuIFRoZSBieXRlcyBzaG91bGQgYmUgZW5jb2RlZCBhcyBiaWctZW5kaWFuLFxuICogdHdvJ3MgY29tcGxlbWVudCBpbnRlZ2Vycy5cbiAqIEBwYXJhbSB7QnVmZmVyfSBieXRlc1xuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBJbnQ2NChieXRlcykge1xuICAgIGlmIChieXRlcy5sZW5ndGggIT09IDgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnQ2NCBidWZmZXJzIG11c3QgYmUgZXhhY3RseSA4IGJ5dGVzJyk7XG4gICAgfVxuICAgIGlmICghdXRpbC5CdWZmZXIuaXNCdWZmZXIoYnl0ZXMpKSBieXRlcyA9IHRvQnVmZmVyKGJ5dGVzKTtcblxuICAgIHRoaXMuYnl0ZXMgPSBieXRlcztcbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gbnVtYmVyXG4gKiBAcmV0dXJucyB7SW50NjR9XG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbkludDY0LmZyb21OdW1iZXIgPSBmdW5jdGlvbihudW1iZXIpIHtcbiAgICBpZiAobnVtYmVyID4gOTIyMzM3MjAzNjg1NDc3NTgwNyB8fCBudW1iZXIgPCAtOTIyMzM3MjAzNjg1NDc3NTgwOCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBudW1iZXIgKyAnIGlzIHRvbyBsYXJnZSAob3IsIGlmIG5lZ2F0aXZlLCB0b28gc21hbGwpIHRvIHJlcHJlc2VudCBhcyBhbiBJbnQ2NCdcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgYnl0ZXMgPSBuZXcgVWludDhBcnJheSg4KTtcbiAgICBmb3IgKFxuICAgICAgICB2YXIgaSA9IDcsIHJlbWFpbmluZyA9IE1hdGguYWJzKE1hdGgucm91bmQobnVtYmVyKSk7XG4gICAgICAgIGkgPiAtMSAmJiByZW1haW5pbmcgPiAwO1xuICAgICAgICBpLS0sIHJlbWFpbmluZyAvPSAyNTZcbiAgICApIHtcbiAgICAgICAgYnl0ZXNbaV0gPSByZW1haW5pbmc7XG4gICAgfVxuXG4gICAgaWYgKG51bWJlciA8IDApIHtcbiAgICAgICAgbmVnYXRlKGJ5dGVzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEludDY0KGJ5dGVzKTtcbn07XG5cbi8qKlxuICogQHJldHVybnMge251bWJlcn1cbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuSW50NjQucHJvdG90eXBlLnZhbHVlT2YgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYnl0ZXMgPSB0aGlzLmJ5dGVzLnNsaWNlKDApO1xuICAgIHZhciBuZWdhdGl2ZSA9IGJ5dGVzWzBdICYgMTI4O1xuICAgIGlmIChuZWdhdGl2ZSkge1xuICAgICAgICBuZWdhdGUoYnl0ZXMpO1xuICAgIH1cblxuICAgIHJldHVybiBwYXJzZUludChieXRlcy50b1N0cmluZygnaGV4JyksIDE2KSAqIChuZWdhdGl2ZSA/IC0xIDogMSk7XG59O1xuXG5JbnQ2NC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gU3RyaW5nKHRoaXMudmFsdWVPZigpKTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtCdWZmZXJ9IGJ5dGVzXG4gKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIG5lZ2F0ZShieXRlcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgODsgaSsrKSB7XG4gICAgICAgIGJ5dGVzW2ldIF49IDB4RkY7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSA3OyBpID4gLTE7IGktLSkge1xuICAgICAgICBieXRlc1tpXSsrO1xuICAgICAgICBpZiAoYnl0ZXNbaV0gIT09IDApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBJbnQ2NDogSW50NjRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/int64.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-event.js":
/*!******************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/parse-event.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseMessage = (__webpack_require__(/*! ./parse-message */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-message.js\").parseMessage);\n\n/**\n *\n * @param {*} parser\n * @param {Buffer} message\n * @param {*} shape\n * @api private\n */\nfunction parseEvent(parser, message, shape) {\n    var parsedMessage = parseMessage(message);\n\n    // check if message is an event or error\n    var messageType = parsedMessage.headers[':message-type'];\n    if (messageType) {\n        if (messageType.value === 'error') {\n            throw parseError(parsedMessage);\n        } else if (messageType.value !== 'event') {\n            // not sure how to parse non-events/non-errors, ignore for now\n            return;\n        }\n    }\n\n    // determine event type\n    var eventType = parsedMessage.headers[':event-type'];\n    // check that the event type is modeled\n    var eventModel = shape.members[eventType.value];\n    if (!eventModel) {\n        return;\n    }\n\n    var result = {};\n    // check if an event payload exists\n    var eventPayloadMemberName = eventModel.eventPayloadMemberName;\n    if (eventPayloadMemberName) {\n        var payloadShape = eventModel.members[eventPayloadMemberName];\n        // if the shape is binary, return the byte array\n        if (payloadShape.type === 'binary') {\n            result[eventPayloadMemberName] = parsedMessage.body;\n        } else {\n            result[eventPayloadMemberName] = parser.parse(parsedMessage.body.toString(), payloadShape);\n        }\n    }\n\n    // read event headers\n    var eventHeaderNames = eventModel.eventHeaderMemberNames;\n    for (var i = 0; i < eventHeaderNames.length; i++) {\n        var name = eventHeaderNames[i];\n        if (parsedMessage.headers[name]) {\n            // parse the header!\n            result[name] = eventModel.members[name].toType(parsedMessage.headers[name].value);\n        }\n    }\n\n    var output = {};\n    output[eventType.value] = result;\n    return output;\n}\n\nfunction parseError(message) {\n    var errorCode = message.headers[':error-code'];\n    var errorMessage = message.headers[':error-message'];\n    var error = new Error(errorMessage.value || errorMessage);\n    error.code = error.name = errorCode.value || errorCode;\n    return error;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseEvent: parseEvent\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9wYXJzZS1ldmVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBbUIsK0hBQXVDOztBQUUxRDtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9ldmVudC1zdHJlYW0vcGFyc2UtZXZlbnQuanM/NWZmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFyc2VNZXNzYWdlID0gcmVxdWlyZSgnLi9wYXJzZS1tZXNzYWdlJykucGFyc2VNZXNzYWdlO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0geyp9IHBhcnNlclxuICogQHBhcmFtIHtCdWZmZXJ9IG1lc3NhZ2VcbiAqIEBwYXJhbSB7Kn0gc2hhcGVcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBwYXJzZUV2ZW50KHBhcnNlciwgbWVzc2FnZSwgc2hhcGUpIHtcbiAgICB2YXIgcGFyc2VkTWVzc2FnZSA9IHBhcnNlTWVzc2FnZShtZXNzYWdlKTtcblxuICAgIC8vIGNoZWNrIGlmIG1lc3NhZ2UgaXMgYW4gZXZlbnQgb3IgZXJyb3JcbiAgICB2YXIgbWVzc2FnZVR5cGUgPSBwYXJzZWRNZXNzYWdlLmhlYWRlcnNbJzptZXNzYWdlLXR5cGUnXTtcbiAgICBpZiAobWVzc2FnZVR5cGUpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2VUeXBlLnZhbHVlID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBwYXJzZUVycm9yKHBhcnNlZE1lc3NhZ2UpO1xuICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2VUeXBlLnZhbHVlICE9PSAnZXZlbnQnKSB7XG4gICAgICAgICAgICAvLyBub3Qgc3VyZSBob3cgdG8gcGFyc2Ugbm9uLWV2ZW50cy9ub24tZXJyb3JzLCBpZ25vcmUgZm9yIG5vd1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gZGV0ZXJtaW5lIGV2ZW50IHR5cGVcbiAgICB2YXIgZXZlbnRUeXBlID0gcGFyc2VkTWVzc2FnZS5oZWFkZXJzWyc6ZXZlbnQtdHlwZSddO1xuICAgIC8vIGNoZWNrIHRoYXQgdGhlIGV2ZW50IHR5cGUgaXMgbW9kZWxlZFxuICAgIHZhciBldmVudE1vZGVsID0gc2hhcGUubWVtYmVyc1tldmVudFR5cGUudmFsdWVdO1xuICAgIGlmICghZXZlbnRNb2RlbCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIC8vIGNoZWNrIGlmIGFuIGV2ZW50IHBheWxvYWQgZXhpc3RzXG4gICAgdmFyIGV2ZW50UGF5bG9hZE1lbWJlck5hbWUgPSBldmVudE1vZGVsLmV2ZW50UGF5bG9hZE1lbWJlck5hbWU7XG4gICAgaWYgKGV2ZW50UGF5bG9hZE1lbWJlck5hbWUpIHtcbiAgICAgICAgdmFyIHBheWxvYWRTaGFwZSA9IGV2ZW50TW9kZWwubWVtYmVyc1tldmVudFBheWxvYWRNZW1iZXJOYW1lXTtcbiAgICAgICAgLy8gaWYgdGhlIHNoYXBlIGlzIGJpbmFyeSwgcmV0dXJuIHRoZSBieXRlIGFycmF5XG4gICAgICAgIGlmIChwYXlsb2FkU2hhcGUudHlwZSA9PT0gJ2JpbmFyeScpIHtcbiAgICAgICAgICAgIHJlc3VsdFtldmVudFBheWxvYWRNZW1iZXJOYW1lXSA9IHBhcnNlZE1lc3NhZ2UuYm9keTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdFtldmVudFBheWxvYWRNZW1iZXJOYW1lXSA9IHBhcnNlci5wYXJzZShwYXJzZWRNZXNzYWdlLmJvZHkudG9TdHJpbmcoKSwgcGF5bG9hZFNoYXBlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHJlYWQgZXZlbnQgaGVhZGVyc1xuICAgIHZhciBldmVudEhlYWRlck5hbWVzID0gZXZlbnRNb2RlbC5ldmVudEhlYWRlck1lbWJlck5hbWVzO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZXZlbnRIZWFkZXJOYW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgbmFtZSA9IGV2ZW50SGVhZGVyTmFtZXNbaV07XG4gICAgICAgIGlmIChwYXJzZWRNZXNzYWdlLmhlYWRlcnNbbmFtZV0pIHtcbiAgICAgICAgICAgIC8vIHBhcnNlIHRoZSBoZWFkZXIhXG4gICAgICAgICAgICByZXN1bHRbbmFtZV0gPSBldmVudE1vZGVsLm1lbWJlcnNbbmFtZV0udG9UeXBlKHBhcnNlZE1lc3NhZ2UuaGVhZGVyc1tuYW1lXS52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgb3V0cHV0ID0ge307XG4gICAgb3V0cHV0W2V2ZW50VHlwZS52YWx1ZV0gPSByZXN1bHQ7XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cblxuZnVuY3Rpb24gcGFyc2VFcnJvcihtZXNzYWdlKSB7XG4gICAgdmFyIGVycm9yQ29kZSA9IG1lc3NhZ2UuaGVhZGVyc1snOmVycm9yLWNvZGUnXTtcbiAgICB2YXIgZXJyb3JNZXNzYWdlID0gbWVzc2FnZS5oZWFkZXJzWyc6ZXJyb3ItbWVzc2FnZSddO1xuICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UudmFsdWUgfHwgZXJyb3JNZXNzYWdlKTtcbiAgICBlcnJvci5jb2RlID0gZXJyb3IubmFtZSA9IGVycm9yQ29kZS52YWx1ZSB8fCBlcnJvckNvZGU7XG4gICAgcmV0dXJuIGVycm9yO1xufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBwYXJzZUV2ZW50OiBwYXJzZUV2ZW50XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-event.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-message.js":
/*!********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/parse-message.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Int64 = (__webpack_require__(/*! ./int64 */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/int64.js\").Int64);\n\nvar splitMessage = (__webpack_require__(/*! ./split-message */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/split-message.js\").splitMessage);\n\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\n\n/**\n * @api private\n *\n * @param {Buffer} headers\n */\nfunction parseHeaders(headers) {\n    var out = {};\n    var position = 0;\n    while (position < headers.length) {\n        var nameLength = headers.readUInt8(position++);\n        var name = headers.slice(position, position + nameLength).toString();\n        position += nameLength;\n        switch (headers.readUInt8(position++)) {\n            case 0 /* boolTrue */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: true\n                };\n                break;\n            case 1 /* boolFalse */:\n                out[name] = {\n                    type: BOOLEAN_TAG,\n                    value: false\n                };\n                break;\n            case 2 /* byte */:\n                out[name] = {\n                    type: BYTE_TAG,\n                    value: headers.readInt8(position++)\n                };\n                break;\n            case 3 /* short */:\n                out[name] = {\n                    type: SHORT_TAG,\n                    value: headers.readInt16BE(position)\n                };\n                position += 2;\n                break;\n            case 4 /* integer */:\n                out[name] = {\n                    type: INT_TAG,\n                    value: headers.readInt32BE(position)\n                };\n                position += 4;\n                break;\n            case 5 /* long */:\n                out[name] = {\n                    type: LONG_TAG,\n                    value: new Int64(headers.slice(position, position + 8))\n                };\n                position += 8;\n                break;\n            case 6 /* byteArray */:\n                var binaryLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: BINARY_TAG,\n                    value: headers.slice(position, position + binaryLength)\n                };\n                position += binaryLength;\n                break;\n            case 7 /* string */:\n                var stringLength = headers.readUInt16BE(position);\n                position += 2;\n                out[name] = {\n                    type: STRING_TAG,\n                    value: headers.slice(\n                        position,\n                        position + stringLength\n                    ).toString()\n                };\n                position += stringLength;\n                break;\n            case 8 /* timestamp */:\n                out[name] = {\n                    type: TIMESTAMP_TAG,\n                    value: new Date(\n                        new Int64(headers.slice(position, position + 8))\n                            .valueOf()\n                    )\n                };\n                position += 8;\n                break;\n            case 9 /* uuid */:\n                var uuidChars = headers.slice(position, position + 16)\n                    .toString('hex');\n                position += 16;\n                out[name] = {\n                    type: UUID_TAG,\n                    value: uuidChars.substr(0, 8) + '-' +\n                        uuidChars.substr(8, 4) + '-' +\n                        uuidChars.substr(12, 4) + '-' +\n                        uuidChars.substr(16, 4) + '-' +\n                        uuidChars.substr(20)\n                };\n                break;\n            default:\n                throw new Error('Unrecognized header type tag');\n        }\n    }\n    return out;\n}\n\nfunction parseMessage(message) {\n    var parsed = splitMessage(message);\n    return { headers: parseHeaders(parsed.headers), body: parsed.body };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    parseMessage: parseMessage\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9wYXJzZS1tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFBLFlBQVksd0dBQXdCOztBQUVwQyxtQkFBbUIsK0hBQXVDOztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvZXZlbnQtc3RyZWFtL3BhcnNlLW1lc3NhZ2UuanM/NWVkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSW50NjQgPSByZXF1aXJlKCcuL2ludDY0JykuSW50NjQ7XG5cbnZhciBzcGxpdE1lc3NhZ2UgPSByZXF1aXJlKCcuL3NwbGl0LW1lc3NhZ2UnKS5zcGxpdE1lc3NhZ2U7XG5cbnZhciBCT09MRUFOX1RBRyA9ICdib29sZWFuJztcbnZhciBCWVRFX1RBRyA9ICdieXRlJztcbnZhciBTSE9SVF9UQUcgPSAnc2hvcnQnO1xudmFyIElOVF9UQUcgPSAnaW50ZWdlcic7XG52YXIgTE9OR19UQUcgPSAnbG9uZyc7XG52YXIgQklOQVJZX1RBRyA9ICdiaW5hcnknO1xudmFyIFNUUklOR19UQUcgPSAnc3RyaW5nJztcbnZhciBUSU1FU1RBTVBfVEFHID0gJ3RpbWVzdGFtcCc7XG52YXIgVVVJRF9UQUcgPSAndXVpZCc7XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGhlYWRlcnNcbiAqL1xuZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICB2YXIgb3V0ID0ge307XG4gICAgdmFyIHBvc2l0aW9uID0gMDtcbiAgICB3aGlsZSAocG9zaXRpb24gPCBoZWFkZXJzLmxlbmd0aCkge1xuICAgICAgICB2YXIgbmFtZUxlbmd0aCA9IGhlYWRlcnMucmVhZFVJbnQ4KHBvc2l0aW9uKyspO1xuICAgICAgICB2YXIgbmFtZSA9IGhlYWRlcnMuc2xpY2UocG9zaXRpb24sIHBvc2l0aW9uICsgbmFtZUxlbmd0aCkudG9TdHJpbmcoKTtcbiAgICAgICAgcG9zaXRpb24gKz0gbmFtZUxlbmd0aDtcbiAgICAgICAgc3dpdGNoIChoZWFkZXJzLnJlYWRVSW50OChwb3NpdGlvbisrKSkge1xuICAgICAgICAgICAgY2FzZSAwIC8qIGJvb2xUcnVlICovOlxuICAgICAgICAgICAgICAgIG91dFtuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTl9UQUcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMSAvKiBib29sRmFsc2UgKi86XG4gICAgICAgICAgICAgICAgb3V0W25hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBCT09MRUFOX1RBRyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMiAvKiBieXRlICovOlxuICAgICAgICAgICAgICAgIG91dFtuYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQllURV9UQUcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBoZWFkZXJzLnJlYWRJbnQ4KHBvc2l0aW9uKyspXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMyAvKiBzaG9ydCAqLzpcbiAgICAgICAgICAgICAgICBvdXRbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFNIT1JUX1RBRyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGhlYWRlcnMucmVhZEludDE2QkUocG9zaXRpb24pXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiArPSAyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA0IC8qIGludGVnZXIgKi86XG4gICAgICAgICAgICAgICAgb3V0W25hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBJTlRfVEFHLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaGVhZGVycy5yZWFkSW50MzJCRShwb3NpdGlvbilcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uICs9IDQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDUgLyogbG9uZyAqLzpcbiAgICAgICAgICAgICAgICBvdXRbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IExPTkdfVEFHLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3IEludDY0KGhlYWRlcnMuc2xpY2UocG9zaXRpb24sIHBvc2l0aW9uICsgOCkpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiArPSA4O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA2IC8qIGJ5dGVBcnJheSAqLzpcbiAgICAgICAgICAgICAgICB2YXIgYmluYXJ5TGVuZ3RoID0gaGVhZGVycy5yZWFkVUludDE2QkUocG9zaXRpb24pO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uICs9IDI7XG4gICAgICAgICAgICAgICAgb3V0W25hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBCSU5BUllfVEFHLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaGVhZGVycy5zbGljZShwb3NpdGlvbiwgcG9zaXRpb24gKyBiaW5hcnlMZW5ndGgpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiArPSBiaW5hcnlMZW5ndGg7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDcgLyogc3RyaW5nICovOlxuICAgICAgICAgICAgICAgIHZhciBzdHJpbmdMZW5ndGggPSBoZWFkZXJzLnJlYWRVSW50MTZCRShwb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgcG9zaXRpb24gKz0gMjtcbiAgICAgICAgICAgICAgICBvdXRbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFNUUklOR19UQUcsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBoZWFkZXJzLnNsaWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiArIHN0cmluZ0xlbmd0aFxuICAgICAgICAgICAgICAgICAgICApLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uICs9IHN0cmluZ0xlbmd0aDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgOCAvKiB0aW1lc3RhbXAgKi86XG4gICAgICAgICAgICAgICAgb3V0W25hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBUSU1FU1RBTVBfVEFHLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3IERhdGUoXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgSW50NjQoaGVhZGVycy5zbGljZShwb3NpdGlvbiwgcG9zaXRpb24gKyA4KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudmFsdWVPZigpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uICs9IDg7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDkgLyogdXVpZCAqLzpcbiAgICAgICAgICAgICAgICB2YXIgdXVpZENoYXJzID0gaGVhZGVycy5zbGljZShwb3NpdGlvbiwgcG9zaXRpb24gKyAxNilcbiAgICAgICAgICAgICAgICAgICAgLnRvU3RyaW5nKCdoZXgnKTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiArPSAxNjtcbiAgICAgICAgICAgICAgICBvdXRbbmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFVVSURfVEFHLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdXVpZENoYXJzLnN1YnN0cigwLCA4KSArICctJyArXG4gICAgICAgICAgICAgICAgICAgICAgICB1dWlkQ2hhcnMuc3Vic3RyKDgsIDQpICsgJy0nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV1aWRDaGFycy5zdWJzdHIoMTIsIDQpICsgJy0nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV1aWRDaGFycy5zdWJzdHIoMTYsIDQpICsgJy0nICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHV1aWRDaGFycy5zdWJzdHIoMjApXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbnJlY29nbml6ZWQgaGVhZGVyIHR5cGUgdGFnJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cblxuZnVuY3Rpb24gcGFyc2VNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICB2YXIgcGFyc2VkID0gc3BsaXRNZXNzYWdlKG1lc3NhZ2UpO1xuICAgIHJldHVybiB7IGhlYWRlcnM6IHBhcnNlSGVhZGVycyhwYXJzZWQuaGVhZGVycyksIGJvZHk6IHBhcnNlZC5ib2R5IH07XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHBhcnNlTWVzc2FnZTogcGFyc2VNZXNzYWdlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/parse-message.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/split-message.js":
/*!********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/split-message.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = (__webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\").util);\nvar toBuffer = util.buffer.toBuffer;\n\n// All prelude components are unsigned, 32-bit integers\nvar PRELUDE_MEMBER_LENGTH = 4;\n// The prelude consists of two components\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\n// Checksums are always CRC32 hashes.\nvar CHECKSUM_LENGTH = 4;\n// Messages must include a full prelude, a prelude checksum, and a message checksum\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n\n/**\n * @api private\n *\n * @param {Buffer} message\n */\nfunction splitMessage(message) {\n    if (!util.Buffer.isBuffer(message)) message = toBuffer(message);\n\n    if (message.length < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error('Provided message too short to accommodate event stream message overhead');\n    }\n\n    if (message.length !== message.readUInt32BE(0)) {\n        throw new Error('Reported message length does not match received message length');\n    }\n\n    var expectedPreludeChecksum = message.readUInt32BE(PRELUDE_LENGTH);\n\n    if (\n        expectedPreludeChecksum !== util.crypto.crc32(\n            message.slice(0, PRELUDE_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The prelude checksum specified in the message (' +\n            expectedPreludeChecksum +\n            ') does not match the calculated CRC32 checksum.'\n        );\n    }\n\n    var expectedMessageChecksum = message.readUInt32BE(message.length - CHECKSUM_LENGTH);\n\n    if (\n        expectedMessageChecksum !== util.crypto.crc32(\n            message.slice(0, message.length - CHECKSUM_LENGTH)\n        )\n    ) {\n        throw new Error(\n            'The message checksum did not match the expected value of ' +\n                expectedMessageChecksum\n        );\n    }\n\n    var headersStart = PRELUDE_LENGTH + CHECKSUM_LENGTH;\n    var headersEnd = headersStart + message.readUInt32BE(PRELUDE_MEMBER_LENGTH);\n\n    return {\n        headers: message.slice(headersStart, headersEnd),\n        body: message.slice(headersEnd, message.length - CHECKSUM_LENGTH),\n    };\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    splitMessage: splitMessage\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9zcGxpdC1tZXNzYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcseUZBQXVCO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9ldmVudC1zdHJlYW0vc3BsaXQtbWVzc2FnZS5qcz80NmYzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vY29yZScpLnV0aWw7XG52YXIgdG9CdWZmZXIgPSB1dGlsLmJ1ZmZlci50b0J1ZmZlcjtcblxuLy8gQWxsIHByZWx1ZGUgY29tcG9uZW50cyBhcmUgdW5zaWduZWQsIDMyLWJpdCBpbnRlZ2Vyc1xudmFyIFBSRUxVREVfTUVNQkVSX0xFTkdUSCA9IDQ7XG4vLyBUaGUgcHJlbHVkZSBjb25zaXN0cyBvZiB0d28gY29tcG9uZW50c1xudmFyIFBSRUxVREVfTEVOR1RIID0gUFJFTFVERV9NRU1CRVJfTEVOR1RIICogMjtcbi8vIENoZWNrc3VtcyBhcmUgYWx3YXlzIENSQzMyIGhhc2hlcy5cbnZhciBDSEVDS1NVTV9MRU5HVEggPSA0O1xuLy8gTWVzc2FnZXMgbXVzdCBpbmNsdWRlIGEgZnVsbCBwcmVsdWRlLCBhIHByZWx1ZGUgY2hlY2tzdW0sIGFuZCBhIG1lc3NhZ2UgY2hlY2tzdW1cbnZhciBNSU5JTVVNX01FU1NBR0VfTEVOR1RIID0gUFJFTFVERV9MRU5HVEggKyBDSEVDS1NVTV9MRU5HVEggKiAyO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBtZXNzYWdlXG4gKi9cbmZ1bmN0aW9uIHNwbGl0TWVzc2FnZShtZXNzYWdlKSB7XG4gICAgaWYgKCF1dGlsLkJ1ZmZlci5pc0J1ZmZlcihtZXNzYWdlKSkgbWVzc2FnZSA9IHRvQnVmZmVyKG1lc3NhZ2UpO1xuXG4gICAgaWYgKG1lc3NhZ2UubGVuZ3RoIDwgTUlOSU1VTV9NRVNTQUdFX0xFTkdUSCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Byb3ZpZGVkIG1lc3NhZ2UgdG9vIHNob3J0IHRvIGFjY29tbW9kYXRlIGV2ZW50IHN0cmVhbSBtZXNzYWdlIG92ZXJoZWFkJyk7XG4gICAgfVxuXG4gICAgaWYgKG1lc3NhZ2UubGVuZ3RoICE9PSBtZXNzYWdlLnJlYWRVSW50MzJCRSgwKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcG9ydGVkIG1lc3NhZ2UgbGVuZ3RoIGRvZXMgbm90IG1hdGNoIHJlY2VpdmVkIG1lc3NhZ2UgbGVuZ3RoJyk7XG4gICAgfVxuXG4gICAgdmFyIGV4cGVjdGVkUHJlbHVkZUNoZWNrc3VtID0gbWVzc2FnZS5yZWFkVUludDMyQkUoUFJFTFVERV9MRU5HVEgpO1xuXG4gICAgaWYgKFxuICAgICAgICBleHBlY3RlZFByZWx1ZGVDaGVja3N1bSAhPT0gdXRpbC5jcnlwdG8uY3JjMzIoXG4gICAgICAgICAgICBtZXNzYWdlLnNsaWNlKDAsIFBSRUxVREVfTEVOR1RIKVxuICAgICAgICApXG4gICAgKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgICdUaGUgcHJlbHVkZSBjaGVja3N1bSBzcGVjaWZpZWQgaW4gdGhlIG1lc3NhZ2UgKCcgK1xuICAgICAgICAgICAgZXhwZWN0ZWRQcmVsdWRlQ2hlY2tzdW0gK1xuICAgICAgICAgICAgJykgZG9lcyBub3QgbWF0Y2ggdGhlIGNhbGN1bGF0ZWQgQ1JDMzIgY2hlY2tzdW0uJ1xuICAgICAgICApO1xuICAgIH1cblxuICAgIHZhciBleHBlY3RlZE1lc3NhZ2VDaGVja3N1bSA9IG1lc3NhZ2UucmVhZFVJbnQzMkJFKG1lc3NhZ2UubGVuZ3RoIC0gQ0hFQ0tTVU1fTEVOR1RIKTtcblxuICAgIGlmIChcbiAgICAgICAgZXhwZWN0ZWRNZXNzYWdlQ2hlY2tzdW0gIT09IHV0aWwuY3J5cHRvLmNyYzMyKFxuICAgICAgICAgICAgbWVzc2FnZS5zbGljZSgwLCBtZXNzYWdlLmxlbmd0aCAtIENIRUNLU1VNX0xFTkdUSClcbiAgICAgICAgKVxuICAgICkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAnVGhlIG1lc3NhZ2UgY2hlY2tzdW0gZGlkIG5vdCBtYXRjaCB0aGUgZXhwZWN0ZWQgdmFsdWUgb2YgJyArXG4gICAgICAgICAgICAgICAgZXhwZWN0ZWRNZXNzYWdlQ2hlY2tzdW1cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgaGVhZGVyc1N0YXJ0ID0gUFJFTFVERV9MRU5HVEggKyBDSEVDS1NVTV9MRU5HVEg7XG4gICAgdmFyIGhlYWRlcnNFbmQgPSBoZWFkZXJzU3RhcnQgKyBtZXNzYWdlLnJlYWRVSW50MzJCRShQUkVMVURFX01FTUJFUl9MRU5HVEgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGVhZGVyczogbWVzc2FnZS5zbGljZShoZWFkZXJzU3RhcnQsIGhlYWRlcnNFbmQpLFxuICAgICAgICBib2R5OiBtZXNzYWdlLnNsaWNlKGhlYWRlcnNFbmQsIG1lc3NhZ2UubGVuZ3RoIC0gQ0hFQ0tTVU1fTEVOR1RIKSxcbiAgICB9O1xufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBzcGxpdE1lc3NhZ2U6IHNwbGl0TWVzc2FnZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/split-message.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event-stream/streaming-create-event-stream.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event-stream/streaming-create-event-stream.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * What is necessary to create an event stream in node?\n *  - http response stream\n *  - parser\n *  - event stream model\n */\n\nvar EventMessageChunkerStream = (__webpack_require__(/*! ../event-stream/event-message-chunker-stream */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-chunker-stream.js\").EventMessageChunkerStream);\nvar EventUnmarshallerStream = (__webpack_require__(/*! ../event-stream/event-message-unmarshaller-stream */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/event-message-unmarshaller-stream.js\").EventUnmarshallerStream);\n\nfunction createEventStream(stream, parser, model) {\n    var eventStream = new EventUnmarshallerStream({\n        parser: parser,\n        eventStreamModel: model\n    });\n\n    var eventMessageChunker = new EventMessageChunkerStream();\n\n    stream.pipe(\n        eventMessageChunker\n    ).pipe(eventStream);\n\n    stream.on('error', function(err) {\n        eventMessageChunker.emit('error', err);\n    });\n\n    eventMessageChunker.on('error', function(err) {\n        eventStream.emit('error', err);\n    });\n\n    return eventStream;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    createEventStream: createEventStream\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9zdHJlYW1pbmctY3JlYXRlLWV2ZW50LXN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0NBQWdDLHdMQUFpRjtBQUNqSCw4QkFBOEIsZ01BQW9GOztBQUVsSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2V2ZW50LXN0cmVhbS9zdHJlYW1pbmctY3JlYXRlLWV2ZW50LXN0cmVhbS5qcz9jMjhkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogV2hhdCBpcyBuZWNlc3NhcnkgdG8gY3JlYXRlIGFuIGV2ZW50IHN0cmVhbSBpbiBub2RlP1xuICogIC0gaHR0cCByZXNwb25zZSBzdHJlYW1cbiAqICAtIHBhcnNlclxuICogIC0gZXZlbnQgc3RyZWFtIG1vZGVsXG4gKi9cblxudmFyIEV2ZW50TWVzc2FnZUNodW5rZXJTdHJlYW0gPSByZXF1aXJlKCcuLi9ldmVudC1zdHJlYW0vZXZlbnQtbWVzc2FnZS1jaHVua2VyLXN0cmVhbScpLkV2ZW50TWVzc2FnZUNodW5rZXJTdHJlYW07XG52YXIgRXZlbnRVbm1hcnNoYWxsZXJTdHJlYW0gPSByZXF1aXJlKCcuLi9ldmVudC1zdHJlYW0vZXZlbnQtbWVzc2FnZS11bm1hcnNoYWxsZXItc3RyZWFtJykuRXZlbnRVbm1hcnNoYWxsZXJTdHJlYW07XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50U3RyZWFtKHN0cmVhbSwgcGFyc2VyLCBtb2RlbCkge1xuICAgIHZhciBldmVudFN0cmVhbSA9IG5ldyBFdmVudFVubWFyc2hhbGxlclN0cmVhbSh7XG4gICAgICAgIHBhcnNlcjogcGFyc2VyLFxuICAgICAgICBldmVudFN0cmVhbU1vZGVsOiBtb2RlbFxuICAgIH0pO1xuXG4gICAgdmFyIGV2ZW50TWVzc2FnZUNodW5rZXIgPSBuZXcgRXZlbnRNZXNzYWdlQ2h1bmtlclN0cmVhbSgpO1xuXG4gICAgc3RyZWFtLnBpcGUoXG4gICAgICAgIGV2ZW50TWVzc2FnZUNodW5rZXJcbiAgICApLnBpcGUoZXZlbnRTdHJlYW0pO1xuXG4gICAgc3RyZWFtLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycikge1xuICAgICAgICBldmVudE1lc3NhZ2VDaHVua2VyLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9KTtcblxuICAgIGV2ZW50TWVzc2FnZUNodW5rZXIub24oJ2Vycm9yJywgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGV2ZW50U3RyZWFtLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBldmVudFN0cmVhbTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY3JlYXRlRXZlbnRTdHJlYW06IGNyZWF0ZUV2ZW50U3RyZWFtXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event-stream/streaming-create-event-stream.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/event_listeners.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/event_listeners.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar SequentialExecutor = __webpack_require__(/*! ./sequential_executor */ \"(rsc)/../../node_modules/aws-sdk/lib/sequential_executor.js\");\nvar DISCOVER_ENDPOINT = (__webpack_require__(/*! ./discover_endpoint */ \"(rsc)/../../node_modules/aws-sdk/lib/discover_endpoint.js\").discoverEndpoint);\n/**\n * The namespace used to register global event listeners for request building\n * and sending.\n */\nAWS.EventListeners = {\n  /**\n   * @!attribute VALIDATE_CREDENTIALS\n   *   A request listener that validates whether the request is being\n   *   sent with credentials.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating credentials\n   *     var listener = AWS.EventListeners.Core.VALIDATE_CREDENTIALS;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_REGION\n   *   A request listener that validates whether the region is set\n   *   for a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating region configuration\n   *     var listener = AWS.EventListeners.Core.VALIDATE_REGION;\n   *     request.removeListener('validate', listener);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute VALIDATE_PARAMETERS\n   *   A request listener that validates input parameters in a request.\n   *   Handles the {AWS.Request~validate 'validate' Request event}\n   *   @example Sending a request without validating parameters\n   *     var listener = AWS.EventListeners.Core.VALIDATE_PARAMETERS;\n   *     request.removeListener('validate', listener);\n   *   @example Disable parameter validation globally\n   *     AWS.EventListeners.Core.removeListener('validate',\n   *       AWS.EventListeners.Core.VALIDATE_REGION);\n   *   @readonly\n   *   @return [Function]\n   * @!attribute SEND\n   *   A request listener that initiates the HTTP connection for a\n   *   request being sent. Handles the {AWS.Request~send 'send' Request event}\n   *   @example Replacing the HTTP handler\n   *     var listener = AWS.EventListeners.Core.SEND;\n   *     request.removeListener('send', listener);\n   *     request.on('send', function(response) {\n   *       customHandler.send(response);\n   *     });\n   *   @return [Function]\n   *   @readonly\n   * @!attribute HTTP_DATA\n   *   A request listener that reads data from the HTTP connection in order\n   *   to build the response data.\n   *   Handles the {AWS.Request~httpData 'httpData' Request event}.\n   *   Remove this handler if you are overriding the 'httpData' event and\n   *   do not want extra data processing and buffering overhead.\n   *   @example Disabling default data processing\n   *     var listener = AWS.EventListeners.Core.HTTP_DATA;\n   *     request.removeListener('httpData', listener);\n   *   @return [Function]\n   *   @readonly\n   */\n  Core: {} /* doc hack */\n};\n\n/**\n * @api private\n */\nfunction getOperationAuthtype(req) {\n  if (!req.service.api.operations) {\n    return '';\n  }\n  var operation = req.service.api.operations[req.operation];\n  return operation ? operation.authtype : '';\n}\n\n/**\n * @api private\n */\nfunction getIdentityType(req) {\n  var service = req.service;\n\n  if (service.config.signatureVersion) {\n    return service.config.signatureVersion;\n  }\n\n  if (service.api.signatureVersion) {\n    return service.api.signatureVersion;\n  }\n\n  return getOperationAuthtype(req);\n}\n\nAWS.EventListeners = {\n  Core: new SequentialExecutor().addNamedListeners(function(add, addAsync) {\n    addAsync(\n      'VALIDATE_CREDENTIALS', 'validate',\n      function VALIDATE_CREDENTIALS(req, done) {\n        if (!req.service.api.signatureVersion && !req.service.config.signatureVersion) return done(); // none\n\n        var identityType = getIdentityType(req);\n        if (identityType === 'bearer') {\n          req.service.config.getToken(function(err) {\n            if (err) {\n              req.response.error = AWS.util.error(err, {code: 'TokenError'});\n            }\n            done();\n          });\n          return;\n        }\n\n        req.service.config.getCredentials(function(err) {\n          if (err) {\n            req.response.error = AWS.util.error(err,\n              {\n                code: 'CredentialsError',\n                message: 'Missing credentials in config, if using AWS_CONFIG_FILE, set AWS_SDK_LOAD_CONFIG=1'\n              }\n            );\n          }\n          done();\n        });\n    });\n\n    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {\n      if (!req.service.isGlobalEndpoint) {\n        var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n        if (!req.service.config.region) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Missing region in config'});\n        } else if (!dnsHostRegex.test(req.service.config.region)) {\n          req.response.error = AWS.util.error(new Error(),\n            {code: 'ConfigError', message: 'Invalid region in config'});\n        }\n      }\n    });\n\n    add('BUILD_IDEMPOTENCY_TOKENS', 'validate', function BUILD_IDEMPOTENCY_TOKENS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var idempotentMembers = operation.idempotentMembers;\n      if (!idempotentMembers.length) {\n        return;\n      }\n      // creates a copy of params so user's param object isn't mutated\n      var params = AWS.util.copy(req.params);\n      for (var i = 0, iLen = idempotentMembers.length; i < iLen; i++) {\n        if (!params[idempotentMembers[i]]) {\n          // add the member\n          params[idempotentMembers[i]] = AWS.util.uuid.v4();\n        }\n      }\n      req.params = params;\n    });\n\n    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var rules = req.service.api.operations[req.operation].input;\n      var validation = req.service.config.paramValidation;\n      new AWS.ParamValidator(validation).validate(rules, req.params);\n    });\n\n    add('COMPUTE_CHECKSUM', 'afterBuild', function COMPUTE_CHECKSUM(req) {\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      if (!operation) {\n        return;\n      }\n      var body = req.httpRequest.body;\n      var isNonStreamingPayload = body && (AWS.util.Buffer.isBuffer(body) || typeof body === 'string');\n      var headers = req.httpRequest.headers;\n      if (\n        operation.httpChecksumRequired &&\n        req.service.config.computeChecksums &&\n        isNonStreamingPayload &&\n        !headers['Content-MD5']\n      ) {\n        var md5 = AWS.util.crypto.md5(body, 'base64');\n        headers['Content-MD5'] = md5;\n      }\n    });\n\n    addAsync('COMPUTE_SHA256', 'afterBuild', function COMPUTE_SHA256(req, done) {\n      req.haltHandlersOnError();\n      if (!req.service.api.operations) {\n        return;\n      }\n      var operation = req.service.api.operations[req.operation];\n      var authtype = operation ? operation.authtype : '';\n      if (!req.service.api.signatureVersion && !authtype && !req.service.config.signatureVersion) return done(); // none\n      if (req.service.getSignerClass(req) === AWS.Signers.V4) {\n        var body = req.httpRequest.body || '';\n        if (authtype.indexOf('unsigned-body') >= 0) {\n          req.httpRequest.headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n          return done();\n        }\n        AWS.util.computeSha256(body, function(err, sha) {\n          if (err) {\n            done(err);\n          }\n          else {\n            req.httpRequest.headers['X-Amz-Content-Sha256'] = sha;\n            done();\n          }\n        });\n      } else {\n        done();\n      }\n    });\n\n    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {\n      var authtype = getOperationAuthtype(req);\n      var payloadMember = AWS.util.getRequestPayloadShape(req);\n      if (req.httpRequest.headers['Content-Length'] === undefined) {\n        try {\n          var length = AWS.util.string.byteLength(req.httpRequest.body);\n          req.httpRequest.headers['Content-Length'] = length;\n        } catch (err) {\n          if (payloadMember && payloadMember.isStreaming) {\n            if (payloadMember.requiresLength) {\n              //streaming payload requires length(s3, glacier)\n              throw err;\n            } else if (authtype.indexOf('unsigned-body') >= 0) {\n              //unbounded streaming payload(lex, mediastore)\n              req.httpRequest.headers['Transfer-Encoding'] = 'chunked';\n              return;\n            } else {\n              throw err;\n            }\n          }\n          throw err;\n        }\n      }\n    });\n\n    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {\n      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;\n    });\n\n    add('SET_TRACE_ID', 'afterBuild', function SET_TRACE_ID(req) {\n      var traceIdHeaderName = 'X-Amzn-Trace-Id';\n      if (AWS.util.isNode() && !Object.hasOwnProperty.call(req.httpRequest.headers, traceIdHeaderName)) {\n        var ENV_LAMBDA_FUNCTION_NAME = 'AWS_LAMBDA_FUNCTION_NAME';\n        var ENV_TRACE_ID = '_X_AMZN_TRACE_ID';\n        var functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n        var traceId = process.env[ENV_TRACE_ID];\n        if (\n          typeof functionName === 'string' &&\n          functionName.length > 0 &&\n          typeof traceId === 'string' &&\n          traceId.length > 0\n        ) {\n          req.httpRequest.headers[traceIdHeaderName] = traceId;\n        }\n      }\n    });\n\n    add('RESTART', 'restart', function RESTART() {\n      var err = this.response.error;\n      if (!err || !err.retryable) return;\n\n      this.httpRequest = new AWS.HttpRequest(\n        this.service.endpoint,\n        this.service.region\n      );\n\n      if (this.response.retryCount < this.service.config.maxRetries) {\n        this.response.retryCount++;\n      } else {\n        this.response.error = null;\n      }\n    });\n\n    var addToHead = true;\n    addAsync('DISCOVER_ENDPOINT', 'sign', DISCOVER_ENDPOINT, addToHead);\n\n    addAsync('SIGN', 'sign', function SIGN(req, done) {\n      var service = req.service;\n      var identityType = getIdentityType(req);\n      if (!identityType || identityType.length === 0) return done(); // none\n\n      if (identityType === 'bearer') {\n        service.config.getToken(function (err, token) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var SignerClass = service.getSignerClass(req);\n            var signer = new SignerClass(req.httpRequest);\n            signer.addAuthorization(token);\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n      } else {\n        service.config.getCredentials(function (err, credentials) {\n          if (err) {\n            req.response.error = err;\n            return done();\n          }\n\n          try {\n            var date = service.getSkewCorrectedDate();\n            var SignerClass = service.getSignerClass(req);\n            var operations = req.service.api.operations || {};\n            var operation = operations[req.operation];\n            var signer = new SignerClass(req.httpRequest,\n              service.getSigningName(req),\n              {\n                signatureCache: service.config.signatureCache,\n                operation: operation,\n                signatureVersion: service.api.signatureVersion\n              });\n            signer.setServiceClientId(service._clientId);\n\n            // clear old authorization headers\n            delete req.httpRequest.headers['Authorization'];\n            delete req.httpRequest.headers['Date'];\n            delete req.httpRequest.headers['X-Amz-Date'];\n\n            // add new authorization\n            signer.addAuthorization(credentials, date);\n            req.signedAt = date;\n          } catch (e) {\n            req.response.error = e;\n          }\n          done();\n        });\n\n      }\n    });\n\n    add('VALIDATE_RESPONSE', 'validateResponse', function VALIDATE_RESPONSE(resp) {\n      if (this.service.successfulResponse(resp, this)) {\n        resp.data = {};\n        resp.error = null;\n      } else {\n        resp.data = null;\n        resp.error = AWS.util.error(new Error(),\n          {code: 'UnknownError', message: 'An unknown error occurred.'});\n      }\n    });\n\n    add('ERROR', 'error', function ERROR(err, resp) {\n      var awsQueryCompatible = resp.request.service.api.awsQueryCompatible;\n      if (awsQueryCompatible) {\n        var headers = resp.httpResponse.headers;\n        var queryErrorCode = headers ? headers['x-amzn-query-error'] : undefined;\n        if (queryErrorCode && queryErrorCode.includes(';')) {\n          resp.error.code = queryErrorCode.split(';')[0];\n        }\n      }\n    }, true);\n\n    addAsync('SEND', 'send', function SEND(resp, done) {\n      resp.httpResponse._abortCallback = done;\n      resp.error = null;\n      resp.data = null;\n\n      function callback(httpResp) {\n        resp.httpResponse.stream = httpResp;\n        var stream = resp.request.httpRequest.stream;\n        var service = resp.request.service;\n        var api = service.api;\n        var operationName = resp.request.operation;\n        var operation = api.operations[operationName] || {};\n\n        httpResp.on('headers', function onHeaders(statusCode, headers, statusMessage) {\n          resp.request.emit(\n            'httpHeaders',\n            [statusCode, headers, resp, statusMessage]\n          );\n\n          if (!resp.httpResponse.streaming) {\n            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check\n              // if we detect event streams, we're going to have to\n              // return the stream immediately\n              if (operation.hasEventOutput && service.successfulResponse(resp)) {\n                // skip reading the IncomingStream\n                resp.request.emit('httpDone');\n                done();\n                return;\n              }\n\n              httpResp.on('readable', function onReadable() {\n                var data = httpResp.read();\n                if (data !== null) {\n                  resp.request.emit('httpData', [data, resp]);\n                }\n              });\n            } else { // legacy streams API\n              httpResp.on('data', function onData(data) {\n                resp.request.emit('httpData', [data, resp]);\n              });\n            }\n          }\n        });\n\n        httpResp.on('end', function onEnd() {\n          if (!stream || !stream.didCallback) {\n            if (AWS.HttpClient.streamsApiVersion === 2 && (operation.hasEventOutput && service.successfulResponse(resp))) {\n              // don't concatenate response chunks when streaming event stream data when response is successful\n              return;\n            }\n            resp.request.emit('httpDone');\n            done();\n          }\n        });\n      }\n\n      function progress(httpResp) {\n        httpResp.on('sendProgress', function onSendProgress(value) {\n          resp.request.emit('httpUploadProgress', [value, resp]);\n        });\n\n        httpResp.on('receiveProgress', function onReceiveProgress(value) {\n          resp.request.emit('httpDownloadProgress', [value, resp]);\n        });\n      }\n\n      function error(err) {\n        if (err.code !== 'RequestAbortedError') {\n          var errCode = err.code === 'TimeoutError' ? err.code : 'NetworkingError';\n          err = AWS.util.error(err, {\n            code: errCode,\n            region: resp.request.httpRequest.region,\n            hostname: resp.request.httpRequest.endpoint.hostname,\n            retryable: true\n          });\n        }\n        resp.error = err;\n        resp.request.emit('httpError', [resp.error, resp], function() {\n          done();\n        });\n      }\n\n      function executeSend() {\n        var http = AWS.HttpClient.getInstance();\n        var httpOptions = resp.request.service.config.httpOptions || {};\n        try {\n          var stream = http.handleRequest(resp.request.httpRequest, httpOptions,\n                                          callback, error);\n          progress(stream);\n        } catch (err) {\n          error(err);\n        }\n      }\n      var timeDiff = (resp.request.service.getSkewCorrectedDate() - this.signedAt) / 1000;\n      if (timeDiff >= 60 * 10) { // if we signed 10min ago, re-sign\n        this.emit('sign', [this], function(err) {\n          if (err) done(err);\n          else executeSend();\n        });\n      } else {\n        executeSend();\n      }\n    });\n\n    add('HTTP_HEADERS', 'httpHeaders',\n        function HTTP_HEADERS(statusCode, headers, resp, statusMessage) {\n      resp.httpResponse.statusCode = statusCode;\n      resp.httpResponse.statusMessage = statusMessage;\n      resp.httpResponse.headers = headers;\n      resp.httpResponse.body = AWS.util.buffer.toBuffer('');\n      resp.httpResponse.buffers = [];\n      resp.httpResponse.numBytes = 0;\n      var dateHeader = headers.date || headers.Date;\n      var service = resp.request.service;\n      if (dateHeader) {\n        var serverTime = Date.parse(dateHeader);\n        if (service.config.correctClockSkew\n            && service.isClockSkewed(serverTime)) {\n          service.applyClockOffset(serverTime);\n        }\n      }\n    });\n\n    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {\n      if (chunk) {\n        if (AWS.util.isNode()) {\n          resp.httpResponse.numBytes += chunk.length;\n\n          var total = resp.httpResponse.headers['content-length'];\n          var progress = { loaded: resp.httpResponse.numBytes, total: total };\n          resp.request.emit('httpDownloadProgress', [progress, resp]);\n        }\n\n        resp.httpResponse.buffers.push(AWS.util.buffer.toBuffer(chunk));\n      }\n    });\n\n    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {\n      // convert buffers array into single buffer\n      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {\n        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);\n        resp.httpResponse.body = body;\n      }\n      delete resp.httpResponse.numBytes;\n      delete resp.httpResponse.buffers;\n    });\n\n    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {\n      if (resp.httpResponse.statusCode) {\n        resp.error.statusCode = resp.httpResponse.statusCode;\n        if (resp.error.retryable === undefined) {\n          resp.error.retryable = this.service.retryableError(resp.error, this);\n        }\n      }\n    });\n\n    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {\n      if (!resp.error) return;\n      switch (resp.error.code) {\n        case 'RequestExpired': // EC2 only\n        case 'ExpiredTokenException':\n        case 'ExpiredToken':\n          resp.error.retryable = true;\n          resp.request.service.config.credentials.expired = true;\n      }\n    });\n\n    add('EXPIRED_SIGNATURE', 'retry', function EXPIRED_SIGNATURE(resp) {\n      var err = resp.error;\n      if (!err) return;\n      if (typeof err.code === 'string' && typeof err.message === 'string') {\n        if (err.code.match(/Signature/) && err.message.match(/expired/)) {\n          resp.error.retryable = true;\n        }\n      }\n    });\n\n    add('CLOCK_SKEWED', 'retry', function CLOCK_SKEWED(resp) {\n      if (!resp.error) return;\n      if (this.service.clockSkewError(resp.error)\n          && this.service.config.correctClockSkew) {\n        resp.error.retryable = true;\n      }\n    });\n\n    add('REDIRECT', 'retry', function REDIRECT(resp) {\n      if (resp.error && resp.error.statusCode >= 300 &&\n          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {\n        this.httpRequest.endpoint =\n          new AWS.Endpoint(resp.httpResponse.headers['location']);\n        this.httpRequest.headers['Host'] = this.httpRequest.endpoint.host;\n        this.httpRequest.path = this.httpRequest.endpoint.path;\n        resp.error.redirect = true;\n        resp.error.retryable = true;\n      }\n    });\n\n    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {\n      if (resp.error) {\n        if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.error.retryDelay = 0;\n        } else if (resp.retryCount < resp.maxRetries) {\n          resp.error.retryDelay = this.service.retryDelays(resp.retryCount, resp.error) || 0;\n        }\n      }\n    });\n\n    addAsync('RESET_RETRY_STATE', 'afterRetry', function RESET_RETRY_STATE(resp, done) {\n      var delay, willRetry = false;\n\n      if (resp.error) {\n        delay = resp.error.retryDelay || 0;\n        if (resp.error.retryable && resp.retryCount < resp.maxRetries) {\n          resp.retryCount++;\n          willRetry = true;\n        } else if (resp.error.redirect && resp.redirectCount < resp.maxRedirects) {\n          resp.redirectCount++;\n          willRetry = true;\n        }\n      }\n\n      // delay < 0 is a signal from customBackoff to skip retries\n      if (willRetry && delay >= 0) {\n        resp.error = null;\n        setTimeout(done, delay);\n      } else {\n        done();\n      }\n    });\n  }),\n\n  CorePost: new SequentialExecutor().addNamedListeners(function(add) {\n    add('EXTRACT_REQUEST_ID', 'extractData', AWS.util.extractRequestId);\n    add('EXTRACT_REQUEST_ID', 'extractError', AWS.util.extractRequestId);\n\n    add('ENOTFOUND_ERROR', 'httpError', function ENOTFOUND_ERROR(err) {\n      function isDNSError(err) {\n        return err.errno === 'ENOTFOUND' ||\n          typeof err.errno === 'number' &&\n          typeof AWS.util.getSystemErrorName === 'function' &&\n          ['EAI_NONAME', 'EAI_NODATA'].indexOf(AWS.util.getSystemErrorName(err.errno) >= 0);\n      }\n      if (err.code === 'NetworkingError' && isDNSError(err)) {\n        var message = 'Inaccessible host: `' + err.hostname + '\\' at port `' + err.port +\n          '\\'. This service may not be available in the `' + err.region +\n          '\\' region.';\n        this.response.error = AWS.util.error(new Error(message), {\n          code: 'UnknownEndpoint',\n          region: err.region,\n          hostname: err.hostname,\n          retryable: true,\n          originalError: err\n        });\n      }\n    });\n  }),\n\n  Logger: new SequentialExecutor().addNamedListeners(function(add) {\n    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {\n      var req = resp.request;\n      var logger = req.service.config.logger;\n      if (!logger) return;\n      function filterSensitiveLog(inputShape, shape) {\n        if (!shape) {\n          return shape;\n        }\n        if (inputShape.isSensitive) {\n          return '***SensitiveInformation***';\n        }\n        switch (inputShape.type) {\n          case 'structure':\n            var struct = {};\n            AWS.util.each(shape, function(subShapeName, subShape) {\n              if (Object.prototype.hasOwnProperty.call(inputShape.members, subShapeName)) {\n                struct[subShapeName] = filterSensitiveLog(inputShape.members[subShapeName], subShape);\n              } else {\n                struct[subShapeName] = subShape;\n              }\n            });\n            return struct;\n          case 'list':\n            var list = [];\n            AWS.util.arrayEach(shape, function(subShape, index) {\n              list.push(filterSensitiveLog(inputShape.member, subShape));\n            });\n            return list;\n          case 'map':\n            var map = {};\n            AWS.util.each(shape, function(key, value) {\n              map[key] = filterSensitiveLog(inputShape.value, value);\n            });\n            return map;\n          default:\n            return shape;\n        }\n      }\n\n      function buildMessage() {\n        var time = resp.request.service.getSkewCorrectedDate().getTime();\n        var delta = (time - req.startTime.getTime()) / 1000;\n        var ansi = logger.isTTY ? true : false;\n        var status = resp.httpResponse.statusCode;\n        var censoredParams = req.params;\n        if (\n          req.service.api.operations &&\n              req.service.api.operations[req.operation] &&\n              req.service.api.operations[req.operation].input\n        ) {\n          var inputShape = req.service.api.operations[req.operation].input;\n          censoredParams = filterSensitiveLog(inputShape, req.params);\n        }\n        var params = (__webpack_require__(/*! util */ \"util\").inspect)(censoredParams, true, null);\n        var message = '';\n        if (ansi) message += '\\x1B[33m';\n        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;\n        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';\n        if (ansi) message += '\\x1B[0;1m';\n        message += ' ' + AWS.util.string.lowerFirst(req.operation);\n        message += '(' + params + ')';\n        if (ansi) message += '\\x1B[0m';\n        return message;\n      }\n\n      var line = buildMessage();\n      if (typeof logger.log === 'function') {\n        logger.log(line);\n      } else if (typeof logger.write === 'function') {\n        logger.write(line + '\\n');\n      }\n    });\n  }),\n\n  Json: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = __webpack_require__(/*! ./protocol/json */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/json.js\");\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Rest: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = __webpack_require__(/*! ./protocol/rest */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js\");\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  RestJson: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = __webpack_require__(/*! ./protocol/rest_json */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_json.js\");\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n    add('UNSET_CONTENT_LENGTH', 'afterBuild', svc.unsetContentLength);\n  }),\n\n  RestXml: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = __webpack_require__(/*! ./protocol/rest_xml */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_xml.js\");\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  }),\n\n  Query: new SequentialExecutor().addNamedListeners(function(add) {\n    var svc = __webpack_require__(/*! ./protocol/query */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/query.js\");\n    add('BUILD', 'build', svc.buildRequest);\n    add('EXTRACT_DATA', 'extractData', svc.extractData);\n    add('EXTRACT_ERROR', 'extractError', svc.extractError);\n  })\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/event_listeners.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/http.js":
/*!**********************************************!*\
  !*** ../../node_modules/aws-sdk/lib/http.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * The endpoint that a service will talk to, for example,\n * `'https://ec2.ap-southeast-1.amazonaws.com'`. If\n * you need to override an endpoint for a service, you can\n * set the endpoint on a service by passing the endpoint\n * object with the `endpoint` option key:\n *\n * ```javascript\n * var ep = new AWS.Endpoint('awsproxy.example.com');\n * var s3 = new AWS.S3({endpoint: ep});\n * s3.service.endpoint.hostname == 'awsproxy.example.com'\n * ```\n *\n * Note that if you do not specify a protocol, the protocol will\n * be selected based on your current {AWS.config} configuration.\n *\n * @!attribute protocol\n *   @return [String] the protocol (http or https) of the endpoint\n *     URL\n * @!attribute hostname\n *   @return [String] the host portion of the endpoint, e.g.,\n *     example.com\n * @!attribute host\n *   @return [String] the host portion of the endpoint including\n *     the port, e.g., example.com:80\n * @!attribute port\n *   @return [Integer] the port of the endpoint\n * @!attribute href\n *   @return [String] the full URL of the endpoint\n */\nAWS.Endpoint = inherit({\n\n  /**\n   * @overload Endpoint(endpoint)\n   *   Constructs a new endpoint given an endpoint URL. If the\n   *   URL omits a protocol (http or https), the default protocol\n   *   set in the global {AWS.config} will be used.\n   *   @param endpoint [String] the URL to construct an endpoint from\n   */\n  constructor: function Endpoint(endpoint, config) {\n    AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);\n\n    if (typeof endpoint === 'undefined' || endpoint === null) {\n      throw new Error('Invalid endpoint: ' + endpoint);\n    } else if (typeof endpoint !== 'string') {\n      return AWS.util.copy(endpoint);\n    }\n\n    if (!endpoint.match(/^http/)) {\n      var useSSL = config && config.sslEnabled !== undefined ?\n        config.sslEnabled : AWS.config.sslEnabled;\n      endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;\n    }\n\n    AWS.util.update(this, AWS.util.urlParse(endpoint));\n\n    // Ensure the port property is set as an integer\n    if (this.port) {\n      this.port = parseInt(this.port, 10);\n    } else {\n      this.port = this.protocol === 'https:' ? 443 : 80;\n    }\n  }\n\n});\n\n/**\n * The low level HTTP request object, encapsulating all HTTP header\n * and body data sent by a service request.\n *\n * @!attribute method\n *   @return [String] the HTTP method of the request\n * @!attribute path\n *   @return [String] the path portion of the URI, e.g.,\n *     \"/list/?start=5&num=10\"\n * @!attribute headers\n *   @return [map<String,String>]\n *     a map of header keys and their respective values\n * @!attribute body\n *   @return [String] the request body payload\n * @!attribute endpoint\n *   @return [AWS.Endpoint] the endpoint for the request\n * @!attribute region\n *   @api private\n *   @return [String] the region, for signing purposes only.\n */\nAWS.HttpRequest = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpRequest(endpoint, region) {\n    endpoint = new AWS.Endpoint(endpoint);\n    this.method = 'POST';\n    this.path = endpoint.path || '/';\n    this.headers = {};\n    this.body = '';\n    this.endpoint = endpoint;\n    this.region = region;\n    this._userAgent = '';\n    this.setUserAgent();\n  },\n\n  /**\n   * @api private\n   */\n  setUserAgent: function setUserAgent() {\n    this._userAgent = this.headers[this.getUserAgentHeaderName()] = AWS.util.userAgent();\n  },\n\n  getUserAgentHeaderName: function getUserAgentHeaderName() {\n    var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';\n    return prefix + 'User-Agent';\n  },\n\n  /**\n   * @api private\n   */\n  appendToUserAgent: function appendToUserAgent(agentPartial) {\n    if (typeof agentPartial === 'string' && agentPartial) {\n      this._userAgent += ' ' + agentPartial;\n    }\n    this.headers[this.getUserAgentHeaderName()] = this._userAgent;\n  },\n\n  /**\n   * @api private\n   */\n  getUserAgent: function getUserAgent() {\n    return this._userAgent;\n  },\n\n  /**\n   * @return [String] the part of the {path} excluding the\n   *   query string\n   */\n  pathname: function pathname() {\n    return this.path.split('?', 1)[0];\n  },\n\n  /**\n   * @return [String] the query string portion of the {path}\n   */\n  search: function search() {\n    var query = this.path.split('?', 2)[1];\n    if (query) {\n      query = AWS.util.queryStringParse(query);\n      return AWS.util.queryParamsToString(query);\n    }\n    return '';\n  },\n\n  /**\n   * @api private\n   * update httpRequest endpoint with endpoint string\n   */\n  updateEndpoint: function updateEndpoint(endpointStr) {\n    var newEndpoint = new AWS.Endpoint(endpointStr);\n    this.endpoint = newEndpoint;\n    this.path = newEndpoint.path || '/';\n    if (this.headers['Host']) {\n      this.headers['Host'] = newEndpoint.host;\n    }\n  }\n});\n\n/**\n * The low level HTTP response object, encapsulating all HTTP header\n * and body data returned from the request.\n *\n * @!attribute statusCode\n *   @return [Integer] the HTTP status code of the response (e.g., 200, 404)\n * @!attribute headers\n *   @return [map<String,String>]\n *      a map of response header keys and their respective values\n * @!attribute body\n *   @return [String] the response body payload\n * @!attribute [r] streaming\n *   @return [Boolean] whether this response is being streamed at a low-level.\n *     Defaults to `false` (buffered reads). Do not modify this manually, use\n *     {createUnbufferedStream} to convert the stream to unbuffered mode\n *     instead.\n */\nAWS.HttpResponse = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function HttpResponse() {\n    this.statusCode = undefined;\n    this.headers = {};\n    this.body = undefined;\n    this.streaming = false;\n    this.stream = null;\n  },\n\n  /**\n   * Disables buffering on the HTTP response and returns the stream for reading.\n   * @return [Stream, XMLHttpRequest, null] the underlying stream object.\n   *   Use this object to directly read data off of the stream.\n   * @note This object is only available after the {AWS.Request~httpHeaders}\n   *   event has fired. This method must be called prior to\n   *   {AWS.Request~httpData}.\n   * @example Taking control of a stream\n   *   request.on('httpHeaders', function(statusCode, headers) {\n   *     if (statusCode < 300) {\n   *       if (headers.etag === 'xyz') {\n   *         // pipe the stream, disabling buffering\n   *         var stream = this.response.httpResponse.createUnbufferedStream();\n   *         stream.pipe(process.stdout);\n   *       } else { // abort this request and set a better error message\n   *         this.abort();\n   *         this.response.error = new Error('Invalid ETag');\n   *       }\n   *     }\n   *   }).send(console.log);\n   */\n  createUnbufferedStream: function createUnbufferedStream() {\n    this.streaming = true;\n    return this.stream;\n  }\n});\n\n\nAWS.HttpClient = inherit({});\n\n/**\n * @api private\n */\nAWS.HttpClient.getInstance = function getInstance() {\n  if (this.singleton === undefined) {\n    this.singleton = new this();\n  }\n  return this.singleton;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/http.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/http/node.js":
/*!***************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/http/node.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar Stream = AWS.util.stream.Stream;\nvar TransformStream = AWS.util.stream.Transform;\nvar ReadableStream = AWS.util.stream.Readable;\n__webpack_require__(/*! ../http */ \"(rsc)/../../node_modules/aws-sdk/lib/http.js\");\nvar CONNECTION_REUSE_ENV_NAME = 'AWS_NODEJS_CONNECTION_REUSE_ENABLED';\n\n/**\n * @api private\n */\nAWS.NodeHttpClient = AWS.util.inherit({\n  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {\n    var self = this;\n    var endpoint = httpRequest.endpoint;\n    var pathPrefix = '';\n    if (!httpOptions) httpOptions = {};\n    if (httpOptions.proxy) {\n      pathPrefix = endpoint.protocol + '//' + endpoint.hostname;\n      if (endpoint.port !== 80 && endpoint.port !== 443) {\n        pathPrefix += ':' + endpoint.port;\n      }\n      endpoint = new AWS.Endpoint(httpOptions.proxy);\n    }\n\n    var useSSL = endpoint.protocol === 'https:';\n    var http = useSSL ? __webpack_require__(/*! https */ \"https\") : __webpack_require__(/*! http */ \"http\");\n    var options = {\n      host: endpoint.hostname,\n      port: endpoint.port,\n      method: httpRequest.method,\n      headers: httpRequest.headers,\n      path: pathPrefix + httpRequest.path\n    };\n\n    AWS.util.update(options, httpOptions);\n\n    if (!httpOptions.agent) {\n      options.agent = this.getAgent(useSSL, {\n        keepAlive: process.env[CONNECTION_REUSE_ENV_NAME] === '1' ? true : false\n      });\n    }\n\n    delete options.proxy; // proxy isn't an HTTP option\n    delete options.timeout; // timeout isn't an HTTP option\n\n    var stream = http.request(options, function (httpResp) {\n      if (stream.didCallback) return;\n\n      callback(httpResp);\n      httpResp.emit(\n        'headers',\n        httpResp.statusCode,\n        httpResp.headers,\n        httpResp.statusMessage\n      );\n    });\n    httpRequest.stream = stream; // attach stream to httpRequest\n    stream.didCallback = false;\n\n    // connection timeout support\n    if (httpOptions.connectTimeout) {\n      var connectTimeoutId;\n      stream.on('socket', function(socket) {\n        if (socket.connecting) {\n          connectTimeoutId = setTimeout(function connectTimeout() {\n            if (stream.didCallback) return; stream.didCallback = true;\n\n            stream.abort();\n            errCallback(AWS.util.error(\n              new Error('Socket timed out without establishing a connection'),\n              {code: 'TimeoutError'}\n            ));\n          }, httpOptions.connectTimeout);\n          socket.on('connect', function() {\n            clearTimeout(connectTimeoutId);\n            connectTimeoutId = null;\n          });\n        }\n      });\n    }\n\n    // timeout support\n    stream.setTimeout(httpOptions.timeout || 0, function() {\n      if (stream.didCallback) return; stream.didCallback = true;\n\n      var msg = 'Connection timed out after ' + httpOptions.timeout + 'ms';\n      errCallback(AWS.util.error(new Error(msg), {code: 'TimeoutError'}));\n      stream.abort();\n    });\n\n    stream.on('error', function(err) {\n      if (connectTimeoutId) {\n        clearTimeout(connectTimeoutId);\n        connectTimeoutId = null;\n      }\n      if (stream.didCallback) return; stream.didCallback = true;\n      if ('ECONNRESET' === err.code || 'EPIPE' === err.code || 'ETIMEDOUT' === err.code) {\n        errCallback(AWS.util.error(err, {code: 'TimeoutError'}));\n      } else {\n        errCallback(err);\n      }\n    });\n\n    var expect = httpRequest.headers.Expect || httpRequest.headers.expect;\n    if (expect === '100-continue') {\n      stream.once('continue', function() {\n        self.writeBody(stream, httpRequest);\n      });\n    } else {\n      this.writeBody(stream, httpRequest);\n    }\n\n    return stream;\n  },\n\n  writeBody: function writeBody(stream, httpRequest) {\n    var body = httpRequest.body;\n    var totalBytes = parseInt(httpRequest.headers['Content-Length'], 10);\n\n    if (body instanceof Stream) {\n      // For progress support of streaming content -\n      // pipe the data through a transform stream to emit 'sendProgress' events\n      var progressStream = this.progressStream(stream, totalBytes);\n      if (progressStream) {\n        body.pipe(progressStream).pipe(stream);\n      } else {\n        body.pipe(stream);\n      }\n    } else if (body) {\n      // The provided body is a buffer/string and is already fully available in memory -\n      // For performance it's best to send it as a whole by calling stream.end(body),\n      // Callers expect a 'sendProgress' event which is best emitted once\n      // the http request stream has been fully written and all data flushed.\n      // The use of totalBytes is important over body.length for strings where\n      // length is char length and not byte length.\n      stream.once('finish', function() {\n        stream.emit('sendProgress', {\n          loaded: totalBytes,\n          total: totalBytes\n        });\n      });\n      stream.end(body);\n    } else {\n      // no request body\n      stream.end();\n    }\n  },\n\n  /**\n   * Create the https.Agent or http.Agent according to the request schema.\n   */\n  getAgent: function getAgent(useSSL, agentOptions) {\n    var http = useSSL ? __webpack_require__(/*! https */ \"https\") : __webpack_require__(/*! http */ \"http\");\n    if (useSSL) {\n      if (!AWS.NodeHttpClient.sslAgent) {\n        AWS.NodeHttpClient.sslAgent = new http.Agent(AWS.util.merge({\n          rejectUnauthorized: process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0' ? false : true\n        }, agentOptions || {}));\n        AWS.NodeHttpClient.sslAgent.setMaxListeners(0);\n\n        // delegate maxSockets to globalAgent, set a default limit of 50 if current value is Infinity.\n        // Users can bypass this default by supplying their own Agent as part of SDK configuration.\n        Object.defineProperty(AWS.NodeHttpClient.sslAgent, 'maxSockets', {\n          enumerable: true,\n          get: function() {\n            var defaultMaxSockets = 50;\n            var globalAgent = http.globalAgent;\n            if (globalAgent && globalAgent.maxSockets !== Infinity && typeof globalAgent.maxSockets === 'number') {\n              return globalAgent.maxSockets;\n            }\n            return defaultMaxSockets;\n          }\n        });\n      }\n      return AWS.NodeHttpClient.sslAgent;\n    } else {\n      if (!AWS.NodeHttpClient.agent) {\n        AWS.NodeHttpClient.agent = new http.Agent(agentOptions);\n      }\n      return AWS.NodeHttpClient.agent;\n    }\n  },\n\n  progressStream: function progressStream(stream, totalBytes) {\n    if (typeof TransformStream === 'undefined') {\n      // for node 0.8 there is no streaming progress\n      return;\n    }\n    var loadedBytes = 0;\n    var reporter = new TransformStream();\n    reporter._transform = function(chunk, encoding, callback) {\n      if (chunk) {\n        loadedBytes += chunk.length;\n        stream.emit('sendProgress', {\n          loaded: loadedBytes,\n          total: totalBytes\n        });\n      }\n      callback(null, chunk);\n    };\n    return reporter;\n  },\n\n  emitter: null\n});\n\n/**\n * @!ignore\n */\n\n/**\n * @api private\n */\nAWS.HttpClient.prototype = AWS.NodeHttpClient.prototype;\n\n/**\n * @api private\n */\nAWS.HttpClient.streamsApiVersion = ReadableStream ? 2 : 1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/http/node.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/json/builder.js":
/*!******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/json/builder.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\n\nfunction JsonBuilder() { }\n\nJsonBuilder.prototype.build = function(value, shape) {\n  return JSON.stringify(translate(value, shape));\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined || value === null) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (shape.isDocument) {\n    return structure;\n  }\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      if (memberShape.location !== 'body') return;\n      var locationName = memberShape.isLocationName ? memberShape.name : name;\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[locationName] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result !== undefined) out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result !== undefined) out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toWireFormat(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2pzb24vYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsNkRBQVM7O0FBRTVCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvanNvbi9idWlsZGVyLmpzP2JjZTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSByZXF1aXJlKCcuLi91dGlsJyk7XG5cbmZ1bmN0aW9uIEpzb25CdWlsZGVyKCkgeyB9XG5cbkpzb25CdWlsZGVyLnByb3RvdHlwZS5idWlsZCA9IGZ1bmN0aW9uKHZhbHVlLCBzaGFwZSkge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodHJhbnNsYXRlKHZhbHVlLCBzaGFwZSkpO1xufTtcblxuZnVuY3Rpb24gdHJhbnNsYXRlKHZhbHVlLCBzaGFwZSkge1xuICBpZiAoIXNoYXBlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgc3dpdGNoIChzaGFwZS50eXBlKSB7XG4gICAgY2FzZSAnc3RydWN0dXJlJzogcmV0dXJuIHRyYW5zbGF0ZVN0cnVjdHVyZSh2YWx1ZSwgc2hhcGUpO1xuICAgIGNhc2UgJ21hcCc6IHJldHVybiB0cmFuc2xhdGVNYXAodmFsdWUsIHNoYXBlKTtcbiAgICBjYXNlICdsaXN0JzogcmV0dXJuIHRyYW5zbGF0ZUxpc3QodmFsdWUsIHNoYXBlKTtcbiAgICBkZWZhdWx0OiByZXR1cm4gdHJhbnNsYXRlU2NhbGFyKHZhbHVlLCBzaGFwZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlU3RydWN0dXJlKHN0cnVjdHVyZSwgc2hhcGUpIHtcbiAgaWYgKHNoYXBlLmlzRG9jdW1lbnQpIHtcbiAgICByZXR1cm4gc3RydWN0dXJlO1xuICB9XG4gIHZhciBzdHJ1Y3QgPSB7fTtcbiAgdXRpbC5lYWNoKHN0cnVjdHVyZSwgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICB2YXIgbWVtYmVyU2hhcGUgPSBzaGFwZS5tZW1iZXJzW25hbWVdO1xuICAgIGlmIChtZW1iZXJTaGFwZSkge1xuICAgICAgaWYgKG1lbWJlclNoYXBlLmxvY2F0aW9uICE9PSAnYm9keScpIHJldHVybjtcbiAgICAgIHZhciBsb2NhdGlvbk5hbWUgPSBtZW1iZXJTaGFwZS5pc0xvY2F0aW9uTmFtZSA/IG1lbWJlclNoYXBlLm5hbWUgOiBuYW1lO1xuICAgICAgdmFyIHJlc3VsdCA9IHRyYW5zbGF0ZSh2YWx1ZSwgbWVtYmVyU2hhcGUpO1xuICAgICAgaWYgKHJlc3VsdCAhPT0gdW5kZWZpbmVkKSBzdHJ1Y3RbbG9jYXRpb25OYW1lXSA9IHJlc3VsdDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gc3RydWN0O1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGVMaXN0KGxpc3QsIHNoYXBlKSB7XG4gIHZhciBvdXQgPSBbXTtcbiAgdXRpbC5hcnJheUVhY2gobGlzdCwgZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gdHJhbnNsYXRlKHZhbHVlLCBzaGFwZS5tZW1iZXIpO1xuICAgIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkgb3V0LnB1c2gocmVzdWx0KTtcbiAgfSk7XG4gIHJldHVybiBvdXQ7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZU1hcChtYXAsIHNoYXBlKSB7XG4gIHZhciBvdXQgPSB7fTtcbiAgdXRpbC5lYWNoKG1hcCwgZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHZhciByZXN1bHQgPSB0cmFuc2xhdGUodmFsdWUsIHNoYXBlLnZhbHVlKTtcbiAgICBpZiAocmVzdWx0ICE9PSB1bmRlZmluZWQpIG91dFtrZXldID0gcmVzdWx0O1xuICB9KTtcbiAgcmV0dXJuIG91dDtcbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlU2NhbGFyKHZhbHVlLCBzaGFwZSkge1xuICByZXR1cm4gc2hhcGUudG9XaXJlRm9ybWF0KHZhbHVlKTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBKc29uQnVpbGRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/json/builder.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/json/parser.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/json/parser.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\n\nfunction JsonParser() { }\n\nJsonParser.prototype.parse = function(value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n  if (shape.isDocument) return structure;\n\n  var struct = {};\n  var shapeMembers = shape.members;\n  var isAwsQueryCompatible = shape.api && shape.api.awsQueryCompatible;\n  util.each(shapeMembers, function(name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    } else if (isAwsQueryCompatible && memberShape.defaultValue) {\n      if (memberShape.type === 'list') {\n        struct[name] = typeof memberShape.defaultValue === 'function' ? memberShape.defaultValue() : memberShape.defaultValue;\n      }\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL2pzb24vcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQyw2REFBUzs7QUFFNUI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9qc29uL3BhcnNlci5qcz84NjRkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xuXG5mdW5jdGlvbiBKc29uUGFyc2VyKCkgeyB9XG5cbkpzb25QYXJzZXIucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24odmFsdWUsIHNoYXBlKSB7XG4gIHJldHVybiB0cmFuc2xhdGUoSlNPTi5wYXJzZSh2YWx1ZSksIHNoYXBlKTtcbn07XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZSh2YWx1ZSwgc2hhcGUpIHtcbiAgaWYgKCFzaGFwZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gIHN3aXRjaCAoc2hhcGUudHlwZSkge1xuICAgIGNhc2UgJ3N0cnVjdHVyZSc6IHJldHVybiB0cmFuc2xhdGVTdHJ1Y3R1cmUodmFsdWUsIHNoYXBlKTtcbiAgICBjYXNlICdtYXAnOiByZXR1cm4gdHJhbnNsYXRlTWFwKHZhbHVlLCBzaGFwZSk7XG4gICAgY2FzZSAnbGlzdCc6IHJldHVybiB0cmFuc2xhdGVMaXN0KHZhbHVlLCBzaGFwZSk7XG4gICAgZGVmYXVsdDogcmV0dXJuIHRyYW5zbGF0ZVNjYWxhcih2YWx1ZSwgc2hhcGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVN0cnVjdHVyZShzdHJ1Y3R1cmUsIHNoYXBlKSB7XG4gIGlmIChzdHJ1Y3R1cmUgPT0gbnVsbCkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgaWYgKHNoYXBlLmlzRG9jdW1lbnQpIHJldHVybiBzdHJ1Y3R1cmU7XG5cbiAgdmFyIHN0cnVjdCA9IHt9O1xuICB2YXIgc2hhcGVNZW1iZXJzID0gc2hhcGUubWVtYmVycztcbiAgdmFyIGlzQXdzUXVlcnlDb21wYXRpYmxlID0gc2hhcGUuYXBpICYmIHNoYXBlLmFwaS5hd3NRdWVyeUNvbXBhdGlibGU7XG4gIHV0aWwuZWFjaChzaGFwZU1lbWJlcnMsIGZ1bmN0aW9uKG5hbWUsIG1lbWJlclNoYXBlKSB7XG4gICAgdmFyIGxvY2F0aW9uTmFtZSA9IG1lbWJlclNoYXBlLmlzTG9jYXRpb25OYW1lID8gbWVtYmVyU2hhcGUubmFtZSA6IG5hbWU7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzdHJ1Y3R1cmUsIGxvY2F0aW9uTmFtZSkpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0cnVjdHVyZVtsb2NhdGlvbk5hbWVdO1xuICAgICAgdmFyIHJlc3VsdCA9IHRyYW5zbGF0ZSh2YWx1ZSwgbWVtYmVyU2hhcGUpO1xuICAgICAgaWYgKHJlc3VsdCAhPT0gdW5kZWZpbmVkKSBzdHJ1Y3RbbmFtZV0gPSByZXN1bHQ7XG4gICAgfSBlbHNlIGlmIChpc0F3c1F1ZXJ5Q29tcGF0aWJsZSAmJiBtZW1iZXJTaGFwZS5kZWZhdWx0VmFsdWUpIHtcbiAgICAgIGlmIChtZW1iZXJTaGFwZS50eXBlID09PSAnbGlzdCcpIHtcbiAgICAgICAgc3RydWN0W25hbWVdID0gdHlwZW9mIG1lbWJlclNoYXBlLmRlZmF1bHRWYWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IG1lbWJlclNoYXBlLmRlZmF1bHRWYWx1ZSgpIDogbWVtYmVyU2hhcGUuZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzdHJ1Y3Q7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZUxpc3QobGlzdCwgc2hhcGUpIHtcbiAgaWYgKGxpc3QgPT0gbnVsbCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICB2YXIgb3V0ID0gW107XG4gIHV0aWwuYXJyYXlFYWNoKGxpc3QsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIHJlc3VsdCA9IHRyYW5zbGF0ZSh2YWx1ZSwgc2hhcGUubWVtYmVyKTtcbiAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQpIG91dC5wdXNoKG51bGwpO1xuICAgIGVsc2Ugb3V0LnB1c2gocmVzdWx0KTtcbiAgfSk7XG4gIHJldHVybiBvdXQ7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZU1hcChtYXAsIHNoYXBlKSB7XG4gIGlmIChtYXAgPT0gbnVsbCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICB2YXIgb3V0ID0ge307XG4gIHV0aWwuZWFjaChtYXAsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gdHJhbnNsYXRlKHZhbHVlLCBzaGFwZS52YWx1ZSk7XG4gICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKSBvdXRba2V5XSA9IG51bGw7XG4gICAgZWxzZSBvdXRba2V5XSA9IHJlc3VsdDtcbiAgfSk7XG4gIHJldHVybiBvdXQ7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVNjYWxhcih2YWx1ZSwgc2hhcGUpIHtcbiAgcmV0dXJuIHNoYXBlLnRvVHlwZSh2YWx1ZSk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gSnNvblBhcnNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/json/parser.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/maintenance_mode_message.js":
/*!******************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/maintenance_mode_message.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("var warning = [\n  'The AWS SDK for JavaScript (v2) will enter maintenance mode',\n  'on September 8, 2024 and reach end-of-support on September 8, 2025.\\n',\n  'Please migrate your code to use AWS SDK for JavaScript (v3).',\n  'For more information, check blog post at https://a.co/cUPnyil'\n].join('\\n');\n\nmodule.exports = {\n  suppress: false\n};\n\n/**\n * To suppress this message:\n * @example\n * require('aws-sdk/lib/maintenance_mode_message').suppress = true;\n */\nfunction emitWarning() {\n  if (typeof process === 'undefined')\n    return;\n\n  // Skip maintenance mode message in Lambda environments\n  if (\n    typeof process.env === 'object' &&\n    typeof process.env.AWS_EXECUTION_ENV !== 'undefined' &&\n    process.env.AWS_EXECUTION_ENV.indexOf('AWS_Lambda_') === 0\n  ) {\n    return;\n  }\n\n  if (\n    typeof process.env === 'object' &&\n    typeof process.env.AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE !== 'undefined'\n  ) {\n    return;\n  }\n\n  if (typeof process.emitWarning === 'function') {\n    process.emitWarning(warning, {\n      type: 'NOTE'\n    });\n  }\n}\n\nsetTimeout(function () {\n  if (!module.exports.suppress) {\n    emitWarning();\n  }\n}, 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21haW50ZW5hbmNlX21vZGVfbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21haW50ZW5hbmNlX21vZGVfbWVzc2FnZS5qcz9kZDExIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB3YXJuaW5nID0gW1xuICAnVGhlIEFXUyBTREsgZm9yIEphdmFTY3JpcHQgKHYyKSB3aWxsIGVudGVyIG1haW50ZW5hbmNlIG1vZGUnLFxuICAnb24gU2VwdGVtYmVyIDgsIDIwMjQgYW5kIHJlYWNoIGVuZC1vZi1zdXBwb3J0IG9uIFNlcHRlbWJlciA4LCAyMDI1LlxcbicsXG4gICdQbGVhc2UgbWlncmF0ZSB5b3VyIGNvZGUgdG8gdXNlIEFXUyBTREsgZm9yIEphdmFTY3JpcHQgKHYzKS4nLFxuICAnRm9yIG1vcmUgaW5mb3JtYXRpb24sIGNoZWNrIGJsb2cgcG9zdCBhdCBodHRwczovL2EuY28vY1VQbnlpbCdcbl0uam9pbignXFxuJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzdXBwcmVzczogZmFsc2Vcbn07XG5cbi8qKlxuICogVG8gc3VwcHJlc3MgdGhpcyBtZXNzYWdlOlxuICogQGV4YW1wbGVcbiAqIHJlcXVpcmUoJ2F3cy1zZGsvbGliL21haW50ZW5hbmNlX21vZGVfbWVzc2FnZScpLnN1cHByZXNzID0gdHJ1ZTtcbiAqL1xuZnVuY3Rpb24gZW1pdFdhcm5pbmcoKSB7XG4gIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ3VuZGVmaW5lZCcpXG4gICAgcmV0dXJuO1xuXG4gIC8vIFNraXAgbWFpbnRlbmFuY2UgbW9kZSBtZXNzYWdlIGluIExhbWJkYSBlbnZpcm9ubWVudHNcbiAgaWYgKFxuICAgIHR5cGVvZiBwcm9jZXNzLmVudiA9PT0gJ29iamVjdCcgJiZcbiAgICB0eXBlb2YgcHJvY2Vzcy5lbnYuQVdTX0VYRUNVVElPTl9FTlYgIT09ICd1bmRlZmluZWQnICYmXG4gICAgcHJvY2Vzcy5lbnYuQVdTX0VYRUNVVElPTl9FTlYuaW5kZXhPZignQVdTX0xhbWJkYV8nKSA9PT0gMFxuICApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoXG4gICAgdHlwZW9mIHByb2Nlc3MuZW52ID09PSAnb2JqZWN0JyAmJlxuICAgIHR5cGVvZiBwcm9jZXNzLmVudi5BV1NfU0RLX0pTX1NVUFBSRVNTX01BSU5URU5BTkNFX01PREVfTUVTU0FHRSAhPT0gJ3VuZGVmaW5lZCdcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBwcm9jZXNzLmVtaXRXYXJuaW5nID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcHJvY2Vzcy5lbWl0V2FybmluZyh3YXJuaW5nLCB7XG4gICAgICB0eXBlOiAnTk9URSdcbiAgICB9KTtcbiAgfVxufVxuXG5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgaWYgKCFtb2R1bGUuZXhwb3J0cy5zdXBwcmVzcykge1xuICAgIGVtaXRXYXJuaW5nKCk7XG4gIH1cbn0sIDApO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/maintenance_mode_message.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service.js":
/*!**********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n__webpack_require__(/*! ./http */ \"(rsc)/../../node_modules/aws-sdk/lib/http.js\");\nvar inherit = AWS.util.inherit;\nvar getMetadataServiceEndpoint = __webpack_require__(/*! ./metadata_service/get_metadata_service_endpoint */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_metadata_service_endpoint.js\");\nvar URL = (__webpack_require__(/*! url */ \"url\").URL);\n\n/**\n * Represents a metadata service available on EC2 instances. Using the\n * {request} method, you can receieve metadata about any available resource\n * on the metadata service.\n *\n * You can disable the use of the IMDS by setting the AWS_EC2_METADATA_DISABLED\n * environment variable to a truthy value.\n *\n * @!attribute [r] httpOptions\n *   @return [map] a map of options to pass to the underlying HTTP request:\n *\n *     * **timeout** (Number) &mdash; a timeout value in milliseconds to wait\n *       before aborting the connection. Set to 0 for no timeout.\n *\n * @!macro nobrowser\n */\nAWS.MetadataService = inherit({\n  /**\n   * @return [String] the endpoint of the instance metadata service\n   */\n  endpoint: getMetadataServiceEndpoint(),\n\n  /**\n   * @!ignore\n   */\n\n  /**\n   * Default HTTP options. By default, the metadata service is set to not\n   * timeout on long requests. This means that on non-EC2 machines, this\n   * request will never return. If you are calling this operation from an\n   * environment that may not always run on EC2, set a `timeout` value so\n   * the SDK will abort the request after a given number of milliseconds.\n   */\n  httpOptions: { timeout: 0 },\n\n  /**\n   * when enabled, metadata service will not fetch token\n   */\n  disableFetchToken: false,\n\n  /**\n   * Creates a new MetadataService object with a given set of options.\n   *\n   * @option options host [String] the hostname of the instance metadata\n   *   service\n   * @option options httpOptions [map] a map of options to pass to the\n   *   underlying HTTP request:\n   *\n   *   * **timeout** (Number) &mdash; a timeout value in milliseconds to wait\n   *     before aborting the connection. Set to 0 for no timeout.\n   * @option options maxRetries [Integer] the maximum number of retries to\n   *   perform for timeout errors\n   * @option options retryDelayOptions [map] A set of options to configure the\n   *   retry delay on retryable errors. See AWS.Config for details.\n   * @option options ec2MetadataV1Disabled [boolean] Whether to block IMDS v1 fallback.\n   * @option options profile [string] A profile to check for IMDSv1 fallback settings.\n   * @option options filename [string] Optional filename for the config file.\n   */\n  constructor: function MetadataService(options) {\n    if (options && options.host) {\n      options.endpoint = 'http://' + options.host;\n      delete options.host;\n    }\n    this.profile = options && options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.ec2MetadataV1Disabled = !!(options && options.ec2MetadataV1Disabled);\n    this.filename = options && options.filename;\n    AWS.util.update(this, options);\n  },\n\n  /**\n   * Sends a request to the instance metadata service for a given resource.\n   *\n   * @param path [String] the path of the resource to get\n   *\n   * @param options [map] an optional map used to make request\n   *\n   *   * **method** (String) &mdash; HTTP request method\n   *\n   *   * **headers** (map<String,String>) &mdash; a map of response header keys and their respective values\n   *\n   * @callback callback function(err, data)\n   *   Called when a response is available from the service.\n   *   @param err [Error, null] if an error occurred, this value will be set\n   *   @param data [String, null] if the request was successful, the body of\n   *     the response\n   */\n  request: function request(path, options, callback) {\n    if (arguments.length === 2) {\n      callback = options;\n      options = {};\n    }\n\n    if (process.env[AWS.util.imdsDisabledEnv]) {\n      callback(new Error('EC2 Instance Metadata Service access disabled'));\n      return;\n    }\n\n    path = path || '/';\n\n    // Verify that host is a valid URL\n    if (URL) { new URL(this.endpoint); }\n\n    var httpRequest = new AWS.HttpRequest(this.endpoint + path);\n    httpRequest.method = options.method || 'GET';\n    if (options.headers) {\n      httpRequest.headers = options.headers;\n    }\n    AWS.util.handleRequestWithRetries(httpRequest, this, callback);\n  },\n\n  /**\n  * @api private\n  */\n  loadCredentialsCallbacks: [],\n\n  /**\n   * Fetches metadata token used for getting credentials\n   *\n   * @api private\n   * @callback callback function(err, token)\n   *   Called when token is loaded from the resource\n   */\n  fetchMetadataToken: function fetchMetadataToken(callback) {\n    var self = this;\n    var tokenFetchPath = '/latest/api/token';\n    self.request(\n      tokenFetchPath,\n      {\n        'method': 'PUT',\n        'headers': {\n          'x-aws-ec2-metadata-token-ttl-seconds': '21600'\n        }\n      },\n      callback\n    );\n  },\n\n  /**\n   * Fetches credentials\n   *\n   * @api private\n   * @callback cb function(err, creds)\n   *   Called when credentials are loaded from the resource\n   */\n  fetchCredentials: function fetchCredentials(options, cb) {\n    var self = this;\n    var basePath = '/latest/meta-data/iam/security-credentials/';\n\n    var isImdsV1Fallback = self.disableFetchToken\n      || !(options && options.headers && options.headers['x-aws-ec2-metadata-token']);\n\n    if (isImdsV1Fallback && !(process.env.AWS_EC2_METADATA_DISABLED)) {\n      try {\n        var profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader, this.filename);\n        var profileSettings = profiles[this.profile] || {};\n      } catch (e) {\n        profileSettings = {};\n      }\n\n      if (profileSettings.ec2_metadata_v1_disabled && profileSettings.ec2_metadata_v1_disabled !== 'false') {\n        return cb(AWS.util.error(\n          new Error('AWS EC2 Metadata v1 fallback has been blocked by AWS config file profile.')\n        ));\n      }\n\n      if (self.ec2MetadataV1Disabled) {\n        return cb(AWS.util.error(\n          new Error('AWS EC2 Metadata v1 fallback has been blocked by AWS.MetadataService::options.ec2MetadataV1Disabled=true.')\n        ));\n      }\n\n      if (process.env.AWS_EC2_METADATA_V1_DISABLED && process.env.AWS_EC2_METADATA_V1_DISABLED !== 'false') {\n        return cb(AWS.util.error(\n          new Error('AWS EC2 Metadata v1 fallback has been blocked by process.env.AWS_EC2_METADATA_V1_DISABLED.')\n        ));\n      }\n    }\n\n    self.request(basePath, options, function (err, roleName) {\n      if (err) {\n        self.disableFetchToken = !(err.statusCode === 401);\n        cb(AWS.util.error(\n          err,\n          {\n            message: 'EC2 Metadata roleName request returned error'\n          }\n        ));\n        return;\n      }\n      roleName = roleName.split('\\n')[0]; // grab first (and only) role\n      self.request(basePath + roleName, options, function (credErr, credData) {\n        if (credErr) {\n          self.disableFetchToken = !(credErr.statusCode === 401);\n          cb(AWS.util.error(\n            credErr,\n            {\n              message: 'EC2 Metadata creds request returned error'\n            }\n          ));\n          return;\n        }\n        try {\n          var credentials = JSON.parse(credData);\n          cb(null, credentials);\n        } catch (parseError) {\n          cb(parseError);\n        }\n      });\n    });\n  },\n\n  /**\n   * Loads a set of credentials stored in the instance metadata service\n   *\n   * @api private\n   * @callback callback function(err, credentials)\n   *   Called when credentials are loaded from the resource\n   *   @param err [Error] if an error occurred, this value will be set\n   *   @param credentials [Object] the raw JSON object containing all\n   *     metadata from the credentials resource\n   */\n  loadCredentials: function loadCredentials(callback) {\n    var self = this;\n    self.loadCredentialsCallbacks.push(callback);\n    if (self.loadCredentialsCallbacks.length > 1) { return; }\n\n    function callbacks(err, creds) {\n      var cb;\n      while ((cb = self.loadCredentialsCallbacks.shift()) !== undefined) {\n        cb(err, creds);\n      }\n    }\n\n    if (self.disableFetchToken) {\n      self.fetchCredentials({}, callbacks);\n    } else {\n      self.fetchMetadataToken(function(tokenError, token) {\n        if (tokenError) {\n          if (tokenError.code === 'TimeoutError') {\n            self.disableFetchToken = true;\n          } else if (tokenError.retryable === true) {\n            callbacks(AWS.util.error(\n              tokenError,\n              {\n                message: 'EC2 Metadata token request returned error'\n              }\n            ));\n            return;\n          } else if (tokenError.statusCode === 400) {\n            callbacks(AWS.util.error(\n              tokenError,\n              {\n                message: 'EC2 Metadata token request returned 400'\n              }\n            ));\n            return;\n          }\n        }\n        var options = {};\n        if (token) {\n          options.headers = {\n            'x-aws-ec2-metadata-token': token\n          };\n        }\n        self.fetchCredentials(options, callbacks);\n      });\n\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.MetadataService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service/get_endpoint.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("var getEndpoint = function() {\n  return {\n    IPv4: 'http://169.254.169.254',\n    IPv6: 'http://[fd00:ec2::254]',\n  };\n};\n\nmodule.exports = getEndpoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9tZXRhZGF0YV9zZXJ2aWNlL2dldF9lbmRwb2ludC5qcz8xNTFkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRFbmRwb2ludCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIElQdjQ6ICdodHRwOi8vMTY5LjI1NC4xNjkuMjU0JyxcbiAgICBJUHY2OiAnaHR0cDovL1tmZDAwOmVjMjo6MjU0XScsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEVuZHBvaW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_config_options.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_config_options.js ***!
  \**************************************************************************************/
/***/ ((module) => {

eval("var ENV_ENDPOINT_NAME = 'AWS_EC2_METADATA_SERVICE_ENDPOINT';\nvar CONFIG_ENDPOINT_NAME = 'ec2_metadata_service_endpoint';\n\nvar getEndpointConfigOptions = function() {\n  return {\n    environmentVariableSelector: function(env) { return env[ENV_ENDPOINT_NAME]; },\n    configFileSelector: function(profile) { return profile[CONFIG_ENDPOINT_NAME]; },\n    default: undefined,\n  };\n};\n\nmodule.exports = getEndpointConfigOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50X2NvbmZpZ19vcHRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlEQUFpRCxnQ0FBZ0M7QUFDakYsNENBQTRDLHVDQUF1QztBQUNuRjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvbWV0YWRhdGFfc2VydmljZS9nZXRfZW5kcG9pbnRfY29uZmlnX29wdGlvbnMuanM/ODAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRU5WX0VORFBPSU5UX05BTUUgPSAnQVdTX0VDMl9NRVRBREFUQV9TRVJWSUNFX0VORFBPSU5UJztcbnZhciBDT05GSUdfRU5EUE9JTlRfTkFNRSA9ICdlYzJfbWV0YWRhdGFfc2VydmljZV9lbmRwb2ludCc7XG5cbnZhciBnZXRFbmRwb2ludENvbmZpZ09wdGlvbnMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IGZ1bmN0aW9uKGVudikgeyByZXR1cm4gZW52W0VOVl9FTkRQT0lOVF9OQU1FXTsgfSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3I6IGZ1bmN0aW9uKHByb2ZpbGUpIHsgcmV0dXJuIHByb2ZpbGVbQ09ORklHX0VORFBPSU5UX05BTUVdOyB9LFxuICAgIGRlZmF1bHQ6IHVuZGVmaW5lZCxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0RW5kcG9pbnRDb25maWdPcHRpb25zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_config_options.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("var getEndpointMode = function() {\n  return {\n    IPv4: 'IPv4',\n    IPv6: 'IPv6',\n  };\n};\n\nmodule.exports = getEndpointMode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50X21vZGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50X21vZGUuanM/OTMwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0RW5kcG9pbnRNb2RlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgSVB2NDogJ0lQdjQnLFxuICAgIElQdjY6ICdJUHY2JyxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0RW5kcG9pbnRNb2RlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode_config_options.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode_config_options.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var EndpointMode = __webpack_require__(/*! ./get_endpoint_mode */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode.js\")();\n\nvar ENV_ENDPOINT_MODE_NAME = 'AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE';\nvar CONFIG_ENDPOINT_MODE_NAME = 'ec2_metadata_service_endpoint_mode';\n\nvar getEndpointModeConfigOptions = function() {\n  return {\n    environmentVariableSelector: function(env) { return env[ENV_ENDPOINT_MODE_NAME]; },\n    configFileSelector: function(profile) { return profile[CONFIG_ENDPOINT_MODE_NAME]; },\n    default: EndpointMode.IPv4,\n  };\n};\n\nmodule.exports = getEndpointModeConfigOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50X21vZGVfY29uZmlnX29wdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLG1CQUFPLENBQUMsdUdBQXFCOztBQUVoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpREFBaUQscUNBQXFDO0FBQ3RGLDRDQUE0Qyw0Q0FBNEM7QUFDeEY7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X2VuZHBvaW50X21vZGVfY29uZmlnX29wdGlvbnMuanM/MDA1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRW5kcG9pbnRNb2RlID0gcmVxdWlyZSgnLi9nZXRfZW5kcG9pbnRfbW9kZScpKCk7XG5cbnZhciBFTlZfRU5EUE9JTlRfTU9ERV9OQU1FID0gJ0FXU19FQzJfTUVUQURBVEFfU0VSVklDRV9FTkRQT0lOVF9NT0RFJztcbnZhciBDT05GSUdfRU5EUE9JTlRfTU9ERV9OQU1FID0gJ2VjMl9tZXRhZGF0YV9zZXJ2aWNlX2VuZHBvaW50X21vZGUnO1xuXG52YXIgZ2V0RW5kcG9pbnRNb2RlQ29uZmlnT3B0aW9ucyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogZnVuY3Rpb24oZW52KSB7IHJldHVybiBlbnZbRU5WX0VORFBPSU5UX01PREVfTkFNRV07IH0sXG4gICAgY29uZmlnRmlsZVNlbGVjdG9yOiBmdW5jdGlvbihwcm9maWxlKSB7IHJldHVybiBwcm9maWxlW0NPTkZJR19FTkRQT0lOVF9NT0RFX05BTUVdOyB9LFxuICAgIGRlZmF1bHQ6IEVuZHBvaW50TW9kZS5JUHY0LFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRFbmRwb2ludE1vZGVDb25maWdPcHRpb25zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode_config_options.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_metadata_service_endpoint.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/metadata_service/get_metadata_service_endpoint.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\nvar Endpoint = __webpack_require__(/*! ./get_endpoint */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint.js\")();\nvar EndpointMode = __webpack_require__(/*! ./get_endpoint_mode */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode.js\")();\n\nvar ENDPOINT_CONFIG_OPTIONS = __webpack_require__(/*! ./get_endpoint_config_options */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_config_options.js\")();\nvar ENDPOINT_MODE_CONFIG_OPTIONS = __webpack_require__(/*! ./get_endpoint_mode_config_options */ \"(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_endpoint_mode_config_options.js\")();\n\nvar getMetadataServiceEndpoint = function() {\n  var endpoint = AWS.util.loadConfig(ENDPOINT_CONFIG_OPTIONS);\n  if (endpoint !== undefined) return endpoint;\n\n  var endpointMode = AWS.util.loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS);\n  switch (endpointMode) {\n    case EndpointMode.IPv4:\n      return Endpoint.IPv4;\n    case EndpointMode.IPv6:\n      return Endpoint.IPv6;\n    default:\n      throw new Error('Unsupported endpoint mode: ' + endpointMode);\n  }\n};\n\nmodule.exports = getMetadataServiceEndpoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X21ldGFkYXRhX3NlcnZpY2VfZW5kcG9pbnQuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTOztBQUUzQixlQUFlLG1CQUFPLENBQUMsNkZBQWdCO0FBQ3ZDLG1CQUFtQixtQkFBTyxDQUFDLHVHQUFxQjs7QUFFaEQsOEJBQThCLG1CQUFPLENBQUMsMkhBQStCO0FBQ3JFLG1DQUFtQyxtQkFBTyxDQUFDLHFJQUFvQzs7QUFFL0U7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21ldGFkYXRhX3NlcnZpY2UvZ2V0X21ldGFkYXRhX3NlcnZpY2VfZW5kcG9pbnQuanM/ZTgyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQVdTID0gcmVxdWlyZSgnLi4vY29yZScpO1xuXG52YXIgRW5kcG9pbnQgPSByZXF1aXJlKCcuL2dldF9lbmRwb2ludCcpKCk7XG52YXIgRW5kcG9pbnRNb2RlID0gcmVxdWlyZSgnLi9nZXRfZW5kcG9pbnRfbW9kZScpKCk7XG5cbnZhciBFTkRQT0lOVF9DT05GSUdfT1BUSU9OUyA9IHJlcXVpcmUoJy4vZ2V0X2VuZHBvaW50X2NvbmZpZ19vcHRpb25zJykoKTtcbnZhciBFTkRQT0lOVF9NT0RFX0NPTkZJR19PUFRJT05TID0gcmVxdWlyZSgnLi9nZXRfZW5kcG9pbnRfbW9kZV9jb25maWdfb3B0aW9ucycpKCk7XG5cbnZhciBnZXRNZXRhZGF0YVNlcnZpY2VFbmRwb2ludCA9IGZ1bmN0aW9uKCkge1xuICB2YXIgZW5kcG9pbnQgPSBBV1MudXRpbC5sb2FkQ29uZmlnKEVORFBPSU5UX0NPTkZJR19PUFRJT05TKTtcbiAgaWYgKGVuZHBvaW50ICE9PSB1bmRlZmluZWQpIHJldHVybiBlbmRwb2ludDtcblxuICB2YXIgZW5kcG9pbnRNb2RlID0gQVdTLnV0aWwubG9hZENvbmZpZyhFTkRQT0lOVF9NT0RFX0NPTkZJR19PUFRJT05TKTtcbiAgc3dpdGNoIChlbmRwb2ludE1vZGUpIHtcbiAgICBjYXNlIEVuZHBvaW50TW9kZS5JUHY0OlxuICAgICAgcmV0dXJuIEVuZHBvaW50LklQdjQ7XG4gICAgY2FzZSBFbmRwb2ludE1vZGUuSVB2NjpcbiAgICAgIHJldHVybiBFbmRwb2ludC5JUHY2O1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIGVuZHBvaW50IG1vZGU6ICcgKyBlbmRwb2ludE1vZGUpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1ldGFkYXRhU2VydmljZUVuZHBvaW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/metadata_service/get_metadata_service_endpoint.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/api.js":
/*!***************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/api.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Collection = __webpack_require__(/*! ./collection */ \"(rsc)/../../node_modules/aws-sdk/lib/model/collection.js\");\nvar Operation = __webpack_require__(/*! ./operation */ \"(rsc)/../../node_modules/aws-sdk/lib/model/operation.js\");\nvar Shape = __webpack_require__(/*! ./shape */ \"(rsc)/../../node_modules/aws-sdk/lib/model/shape.js\");\nvar Paginator = __webpack_require__(/*! ./paginator */ \"(rsc)/../../node_modules/aws-sdk/lib/model/paginator.js\");\nvar ResourceWaiter = __webpack_require__(/*! ./resource_waiter */ \"(rsc)/../../node_modules/aws-sdk/lib/model/resource_waiter.js\");\nvar metadata = __webpack_require__(/*! ../../apis/metadata.json */ \"(rsc)/../../node_modules/aws-sdk/apis/metadata.json\");\n\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Api(api, options) {\n  var self = this;\n  api = api || {};\n  options = options || {};\n  options.api = this;\n\n  api.metadata = api.metadata || {};\n\n  var serviceIdentifier = options.serviceIdentifier;\n  delete options.serviceIdentifier;\n\n  property(this, 'isApi', true, false);\n  property(this, 'apiVersion', api.metadata.apiVersion);\n  property(this, 'endpointPrefix', api.metadata.endpointPrefix);\n  property(this, 'signingName', api.metadata.signingName);\n  property(this, 'globalEndpoint', api.metadata.globalEndpoint);\n  property(this, 'signatureVersion', api.metadata.signatureVersion);\n  property(this, 'jsonVersion', api.metadata.jsonVersion);\n  property(this, 'targetPrefix', api.metadata.targetPrefix);\n  property(this, 'protocol', api.metadata.protocol);\n  property(this, 'timestampFormat', api.metadata.timestampFormat);\n  property(this, 'xmlNamespaceUri', api.metadata.xmlNamespace);\n  property(this, 'abbreviation', api.metadata.serviceAbbreviation);\n  property(this, 'fullName', api.metadata.serviceFullName);\n  property(this, 'serviceId', api.metadata.serviceId);\n  if (serviceIdentifier && metadata[serviceIdentifier]) {\n      property(this, 'xmlNoDefaultLists', metadata[serviceIdentifier].xmlNoDefaultLists, false);\n  }\n\n  memoizedProperty(this, 'className', function() {\n    var name = api.metadata.serviceAbbreviation || api.metadata.serviceFullName;\n    if (!name) return null;\n\n    name = name.replace(/^Amazon|AWS\\s*|\\(.*|\\s+|\\W+/g, '');\n    if (name === 'ElasticLoadBalancing') name = 'ELB';\n    return name;\n  });\n\n  function addEndpointOperation(name, operation) {\n    if (operation.endpointoperation === true) {\n      property(self, 'endpointOperation', util.string.lowerFirst(name));\n    }\n    if (operation.endpointdiscovery && !self.hasRequiredEndpointDiscovery) {\n      property(\n        self,\n        'hasRequiredEndpointDiscovery',\n        operation.endpointdiscovery.required === true\n      );\n    }\n  }\n\n  property(this, 'operations', new Collection(api.operations, options, function(name, operation) {\n    return new Operation(name, operation, options);\n  }, util.string.lowerFirst, addEndpointOperation));\n\n  property(this, 'shapes', new Collection(api.shapes, options, function(name, shape) {\n    return Shape.create(shape, options);\n  }));\n\n  property(this, 'paginators', new Collection(api.paginators, options, function(name, paginator) {\n    return new Paginator(name, paginator, options);\n  }));\n\n  property(this, 'waiters', new Collection(api.waiters, options, function(name, waiter) {\n    return new ResourceWaiter(name, waiter, options);\n  }, util.string.lowerFirst));\n\n  if (options.documentation) {\n    property(this, 'documentation', api.documentation);\n    property(this, 'documentationUrl', api.documentationUrl);\n  }\n  property(this, 'awsQueryCompatible', api.metadata.awsQueryCompatible);\n}\n\n/**\n * @api private\n */\nmodule.exports = Api;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL2FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyw4RUFBYztBQUN2QyxnQkFBZ0IsbUJBQU8sQ0FBQyw0RUFBYTtBQUNyQyxZQUFZLG1CQUFPLENBQUMsb0VBQVM7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsNEVBQWE7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsd0ZBQW1CO0FBQ2hELGVBQWUsbUJBQU8sQ0FBQyxxRkFBMEI7O0FBRWpELFdBQVcsbUJBQU8sQ0FBQyw2REFBUztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvbW9kZWwvYXBpLmpzPzNjNjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIENvbGxlY3Rpb24gPSByZXF1aXJlKCcuL2NvbGxlY3Rpb24nKTtcbnZhciBPcGVyYXRpb24gPSByZXF1aXJlKCcuL29wZXJhdGlvbicpO1xudmFyIFNoYXBlID0gcmVxdWlyZSgnLi9zaGFwZScpO1xudmFyIFBhZ2luYXRvciA9IHJlcXVpcmUoJy4vcGFnaW5hdG9yJyk7XG52YXIgUmVzb3VyY2VXYWl0ZXIgPSByZXF1aXJlKCcuL3Jlc291cmNlX3dhaXRlcicpO1xudmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi4vLi4vYXBpcy9tZXRhZGF0YS5qc29uJyk7XG5cbnZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIHByb3BlcnR5ID0gdXRpbC5wcm9wZXJ0eTtcbnZhciBtZW1vaXplZFByb3BlcnR5ID0gdXRpbC5tZW1vaXplZFByb3BlcnR5O1xuXG5mdW5jdGlvbiBBcGkoYXBpLCBvcHRpb25zKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgYXBpID0gYXBpIHx8IHt9O1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgb3B0aW9ucy5hcGkgPSB0aGlzO1xuXG4gIGFwaS5tZXRhZGF0YSA9IGFwaS5tZXRhZGF0YSB8fCB7fTtcblxuICB2YXIgc2VydmljZUlkZW50aWZpZXIgPSBvcHRpb25zLnNlcnZpY2VJZGVudGlmaWVyO1xuICBkZWxldGUgb3B0aW9ucy5zZXJ2aWNlSWRlbnRpZmllcjtcblxuICBwcm9wZXJ0eSh0aGlzLCAnaXNBcGknLCB0cnVlLCBmYWxzZSk7XG4gIHByb3BlcnR5KHRoaXMsICdhcGlWZXJzaW9uJywgYXBpLm1ldGFkYXRhLmFwaVZlcnNpb24pO1xuICBwcm9wZXJ0eSh0aGlzLCAnZW5kcG9pbnRQcmVmaXgnLCBhcGkubWV0YWRhdGEuZW5kcG9pbnRQcmVmaXgpO1xuICBwcm9wZXJ0eSh0aGlzLCAnc2lnbmluZ05hbWUnLCBhcGkubWV0YWRhdGEuc2lnbmluZ05hbWUpO1xuICBwcm9wZXJ0eSh0aGlzLCAnZ2xvYmFsRW5kcG9pbnQnLCBhcGkubWV0YWRhdGEuZ2xvYmFsRW5kcG9pbnQpO1xuICBwcm9wZXJ0eSh0aGlzLCAnc2lnbmF0dXJlVmVyc2lvbicsIGFwaS5tZXRhZGF0YS5zaWduYXR1cmVWZXJzaW9uKTtcbiAgcHJvcGVydHkodGhpcywgJ2pzb25WZXJzaW9uJywgYXBpLm1ldGFkYXRhLmpzb25WZXJzaW9uKTtcbiAgcHJvcGVydHkodGhpcywgJ3RhcmdldFByZWZpeCcsIGFwaS5tZXRhZGF0YS50YXJnZXRQcmVmaXgpO1xuICBwcm9wZXJ0eSh0aGlzLCAncHJvdG9jb2wnLCBhcGkubWV0YWRhdGEucHJvdG9jb2wpO1xuICBwcm9wZXJ0eSh0aGlzLCAndGltZXN0YW1wRm9ybWF0JywgYXBpLm1ldGFkYXRhLnRpbWVzdGFtcEZvcm1hdCk7XG4gIHByb3BlcnR5KHRoaXMsICd4bWxOYW1lc3BhY2VVcmknLCBhcGkubWV0YWRhdGEueG1sTmFtZXNwYWNlKTtcbiAgcHJvcGVydHkodGhpcywgJ2FiYnJldmlhdGlvbicsIGFwaS5tZXRhZGF0YS5zZXJ2aWNlQWJicmV2aWF0aW9uKTtcbiAgcHJvcGVydHkodGhpcywgJ2Z1bGxOYW1lJywgYXBpLm1ldGFkYXRhLnNlcnZpY2VGdWxsTmFtZSk7XG4gIHByb3BlcnR5KHRoaXMsICdzZXJ2aWNlSWQnLCBhcGkubWV0YWRhdGEuc2VydmljZUlkKTtcbiAgaWYgKHNlcnZpY2VJZGVudGlmaWVyICYmIG1ldGFkYXRhW3NlcnZpY2VJZGVudGlmaWVyXSkge1xuICAgICAgcHJvcGVydHkodGhpcywgJ3htbE5vRGVmYXVsdExpc3RzJywgbWV0YWRhdGFbc2VydmljZUlkZW50aWZpZXJdLnhtbE5vRGVmYXVsdExpc3RzLCBmYWxzZSk7XG4gIH1cblxuICBtZW1vaXplZFByb3BlcnR5KHRoaXMsICdjbGFzc05hbWUnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmFtZSA9IGFwaS5tZXRhZGF0YS5zZXJ2aWNlQWJicmV2aWF0aW9uIHx8IGFwaS5tZXRhZGF0YS5zZXJ2aWNlRnVsbE5hbWU7XG4gICAgaWYgKCFuYW1lKSByZXR1cm4gbnVsbDtcblxuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoL15BbWF6b258QVdTXFxzKnxcXCguKnxcXHMrfFxcVysvZywgJycpO1xuICAgIGlmIChuYW1lID09PSAnRWxhc3RpY0xvYWRCYWxhbmNpbmcnKSBuYW1lID0gJ0VMQic7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGFkZEVuZHBvaW50T3BlcmF0aW9uKG5hbWUsIG9wZXJhdGlvbikge1xuICAgIGlmIChvcGVyYXRpb24uZW5kcG9pbnRvcGVyYXRpb24gPT09IHRydWUpIHtcbiAgICAgIHByb3BlcnR5KHNlbGYsICdlbmRwb2ludE9wZXJhdGlvbicsIHV0aWwuc3RyaW5nLmxvd2VyRmlyc3QobmFtZSkpO1xuICAgIH1cbiAgICBpZiAob3BlcmF0aW9uLmVuZHBvaW50ZGlzY292ZXJ5ICYmICFzZWxmLmhhc1JlcXVpcmVkRW5kcG9pbnREaXNjb3ZlcnkpIHtcbiAgICAgIHByb3BlcnR5KFxuICAgICAgICBzZWxmLFxuICAgICAgICAnaGFzUmVxdWlyZWRFbmRwb2ludERpc2NvdmVyeScsXG4gICAgICAgIG9wZXJhdGlvbi5lbmRwb2ludGRpc2NvdmVyeS5yZXF1aXJlZCA9PT0gdHJ1ZVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBwcm9wZXJ0eSh0aGlzLCAnb3BlcmF0aW9ucycsIG5ldyBDb2xsZWN0aW9uKGFwaS5vcGVyYXRpb25zLCBvcHRpb25zLCBmdW5jdGlvbihuYW1lLCBvcGVyYXRpb24pIHtcbiAgICByZXR1cm4gbmV3IE9wZXJhdGlvbihuYW1lLCBvcGVyYXRpb24sIG9wdGlvbnMpO1xuICB9LCB1dGlsLnN0cmluZy5sb3dlckZpcnN0LCBhZGRFbmRwb2ludE9wZXJhdGlvbikpO1xuXG4gIHByb3BlcnR5KHRoaXMsICdzaGFwZXMnLCBuZXcgQ29sbGVjdGlvbihhcGkuc2hhcGVzLCBvcHRpb25zLCBmdW5jdGlvbihuYW1lLCBzaGFwZSkge1xuICAgIHJldHVybiBTaGFwZS5jcmVhdGUoc2hhcGUsIG9wdGlvbnMpO1xuICB9KSk7XG5cbiAgcHJvcGVydHkodGhpcywgJ3BhZ2luYXRvcnMnLCBuZXcgQ29sbGVjdGlvbihhcGkucGFnaW5hdG9ycywgb3B0aW9ucywgZnVuY3Rpb24obmFtZSwgcGFnaW5hdG9yKSB7XG4gICAgcmV0dXJuIG5ldyBQYWdpbmF0b3IobmFtZSwgcGFnaW5hdG9yLCBvcHRpb25zKTtcbiAgfSkpO1xuXG4gIHByb3BlcnR5KHRoaXMsICd3YWl0ZXJzJywgbmV3IENvbGxlY3Rpb24oYXBpLndhaXRlcnMsIG9wdGlvbnMsIGZ1bmN0aW9uKG5hbWUsIHdhaXRlcikge1xuICAgIHJldHVybiBuZXcgUmVzb3VyY2VXYWl0ZXIobmFtZSwgd2FpdGVyLCBvcHRpb25zKTtcbiAgfSwgdXRpbC5zdHJpbmcubG93ZXJGaXJzdCkpO1xuXG4gIGlmIChvcHRpb25zLmRvY3VtZW50YXRpb24pIHtcbiAgICBwcm9wZXJ0eSh0aGlzLCAnZG9jdW1lbnRhdGlvbicsIGFwaS5kb2N1bWVudGF0aW9uKTtcbiAgICBwcm9wZXJ0eSh0aGlzLCAnZG9jdW1lbnRhdGlvblVybCcsIGFwaS5kb2N1bWVudGF0aW9uVXJsKTtcbiAgfVxuICBwcm9wZXJ0eSh0aGlzLCAnYXdzUXVlcnlDb21wYXRpYmxlJywgYXBpLm1ldGFkYXRhLmF3c1F1ZXJ5Q29tcGF0aWJsZSk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gQXBpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/api.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/collection.js":
/*!**********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/collection.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var memoizedProperty = (__webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\").memoizedProperty);\n\nfunction memoize(name, value, factory, nameTr) {\n  memoizedProperty(this, nameTr(name), function() {\n    return factory(name, value);\n  });\n}\n\nfunction Collection(iterable, options, factory, nameTr, callback) {\n  nameTr = nameTr || String;\n  var self = this;\n\n  for (var id in iterable) {\n    if (Object.prototype.hasOwnProperty.call(iterable, id)) {\n      memoize.call(self, id, iterable[id], factory, nameTr);\n      if (callback) callback(id, iterable[id]);\n    }\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = Collection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL2NvbGxlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCLHFHQUFtQzs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9tb2RlbC9jb2xsZWN0aW9uLmpzP2ExOGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1lbW9pemVkUHJvcGVydHkgPSByZXF1aXJlKCcuLi91dGlsJykubWVtb2l6ZWRQcm9wZXJ0eTtcblxuZnVuY3Rpb24gbWVtb2l6ZShuYW1lLCB2YWx1ZSwgZmFjdG9yeSwgbmFtZVRyKSB7XG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgbmFtZVRyKG5hbWUpLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFjdG9yeShuYW1lLCB2YWx1ZSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBDb2xsZWN0aW9uKGl0ZXJhYmxlLCBvcHRpb25zLCBmYWN0b3J5LCBuYW1lVHIsIGNhbGxiYWNrKSB7XG4gIG5hbWVUciA9IG5hbWVUciB8fCBTdHJpbmc7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICBmb3IgKHZhciBpZCBpbiBpdGVyYWJsZSkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaXRlcmFibGUsIGlkKSkge1xuICAgICAgbWVtb2l6ZS5jYWxsKHNlbGYsIGlkLCBpdGVyYWJsZVtpZF0sIGZhY3RvcnksIG5hbWVUcik7XG4gICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGlkLCBpdGVyYWJsZVtpZF0pO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IENvbGxlY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/collection.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/operation.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/operation.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Shape = __webpack_require__(/*! ./shape */ \"(rsc)/../../node_modules/aws-sdk/lib/model/shape.js\");\n\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar property = util.property;\nvar memoizedProperty = util.memoizedProperty;\n\nfunction Operation(name, operation, options) {\n  var self = this;\n  options = options || {};\n\n  property(this, 'name', operation.name || name);\n  property(this, 'api', options.api, false);\n\n  operation.http = operation.http || {};\n  property(this, 'endpoint', operation.endpoint);\n  property(this, 'httpMethod', operation.http.method || 'POST');\n  property(this, 'httpPath', operation.http.requestUri || '/');\n  property(this, 'authtype', operation.authtype || '');\n  property(\n    this,\n    'endpointDiscoveryRequired',\n    operation.endpointdiscovery ?\n      (operation.endpointdiscovery.required ? 'REQUIRED' : 'OPTIONAL') :\n    'NULL'\n  );\n\n  // httpChecksum replaces usage of httpChecksumRequired, but some APIs\n  // (s3control) still uses old trait.\n  var httpChecksumRequired = operation.httpChecksumRequired\n    || (operation.httpChecksum && operation.httpChecksum.requestChecksumRequired);\n  property(this, 'httpChecksumRequired', httpChecksumRequired, false);\n\n  memoizedProperty(this, 'input', function() {\n    if (!operation.input) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.input, options);\n  });\n\n  memoizedProperty(this, 'output', function() {\n    if (!operation.output) {\n      return new Shape.create({type: 'structure'}, options);\n    }\n    return Shape.create(operation.output, options);\n  });\n\n  memoizedProperty(this, 'errors', function() {\n    var list = [];\n    if (!operation.errors) return null;\n\n    for (var i = 0; i < operation.errors.length; i++) {\n      list.push(Shape.create(operation.errors[i], options));\n    }\n\n    return list;\n  });\n\n  memoizedProperty(this, 'paginator', function() {\n    return options.api.paginators[name];\n  });\n\n  if (options.documentation) {\n    property(this, 'documentation', operation.documentation);\n    property(this, 'documentationUrl', operation.documentationUrl);\n  }\n\n  // idempotentMembers only tracks top-level input shapes\n  memoizedProperty(this, 'idempotentMembers', function() {\n    var idempotentMembers = [];\n    var input = self.input;\n    var members = input.members;\n    if (!input.members) {\n      return idempotentMembers;\n    }\n    for (var name in members) {\n      if (!members.hasOwnProperty(name)) {\n        continue;\n      }\n      if (members[name].isIdempotent === true) {\n        idempotentMembers.push(name);\n      }\n    }\n    return idempotentMembers;\n  });\n\n  memoizedProperty(this, 'hasEventOutput', function() {\n    var output = self.output;\n    return hasEventStream(output);\n  });\n}\n\nfunction hasEventStream(topLevelShape) {\n  var members = topLevelShape.members;\n  var payload = topLevelShape.payload;\n\n  if (!topLevelShape.members) {\n    return false;\n  }\n\n  if (payload) {\n    var payloadMember = members[payload];\n    return payloadMember.isEventStream;\n  }\n\n  // check if any member is an event stream\n  for (var name in members) {\n    if (!members.hasOwnProperty(name)) {\n      if (members[name].isEventStream === true) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * @api private\n */\nmodule.exports = Operation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL29wZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsb0VBQVM7O0FBRTdCLFdBQVcsbUJBQU8sQ0FBQyw2REFBUztBQUM1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsNkJBQTZCO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL29wZXJhdGlvbi5qcz81OGFlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBTaGFwZSA9IHJlcXVpcmUoJy4vc2hhcGUnKTtcblxudmFyIHV0aWwgPSByZXF1aXJlKCcuLi91dGlsJyk7XG52YXIgcHJvcGVydHkgPSB1dGlsLnByb3BlcnR5O1xudmFyIG1lbW9pemVkUHJvcGVydHkgPSB1dGlsLm1lbW9pemVkUHJvcGVydHk7XG5cbmZ1bmN0aW9uIE9wZXJhdGlvbihuYW1lLCBvcGVyYXRpb24sIG9wdGlvbnMpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICBwcm9wZXJ0eSh0aGlzLCAnbmFtZScsIG9wZXJhdGlvbi5uYW1lIHx8IG5hbWUpO1xuICBwcm9wZXJ0eSh0aGlzLCAnYXBpJywgb3B0aW9ucy5hcGksIGZhbHNlKTtcblxuICBvcGVyYXRpb24uaHR0cCA9IG9wZXJhdGlvbi5odHRwIHx8IHt9O1xuICBwcm9wZXJ0eSh0aGlzLCAnZW5kcG9pbnQnLCBvcGVyYXRpb24uZW5kcG9pbnQpO1xuICBwcm9wZXJ0eSh0aGlzLCAnaHR0cE1ldGhvZCcsIG9wZXJhdGlvbi5odHRwLm1ldGhvZCB8fCAnUE9TVCcpO1xuICBwcm9wZXJ0eSh0aGlzLCAnaHR0cFBhdGgnLCBvcGVyYXRpb24uaHR0cC5yZXF1ZXN0VXJpIHx8ICcvJyk7XG4gIHByb3BlcnR5KHRoaXMsICdhdXRodHlwZScsIG9wZXJhdGlvbi5hdXRodHlwZSB8fCAnJyk7XG4gIHByb3BlcnR5KFxuICAgIHRoaXMsXG4gICAgJ2VuZHBvaW50RGlzY292ZXJ5UmVxdWlyZWQnLFxuICAgIG9wZXJhdGlvbi5lbmRwb2ludGRpc2NvdmVyeSA/XG4gICAgICAob3BlcmF0aW9uLmVuZHBvaW50ZGlzY292ZXJ5LnJlcXVpcmVkID8gJ1JFUVVJUkVEJyA6ICdPUFRJT05BTCcpIDpcbiAgICAnTlVMTCdcbiAgKTtcblxuICAvLyBodHRwQ2hlY2tzdW0gcmVwbGFjZXMgdXNhZ2Ugb2YgaHR0cENoZWNrc3VtUmVxdWlyZWQsIGJ1dCBzb21lIEFQSXNcbiAgLy8gKHMzY29udHJvbCkgc3RpbGwgdXNlcyBvbGQgdHJhaXQuXG4gIHZhciBodHRwQ2hlY2tzdW1SZXF1aXJlZCA9IG9wZXJhdGlvbi5odHRwQ2hlY2tzdW1SZXF1aXJlZFxuICAgIHx8IChvcGVyYXRpb24uaHR0cENoZWNrc3VtICYmIG9wZXJhdGlvbi5odHRwQ2hlY2tzdW0ucmVxdWVzdENoZWNrc3VtUmVxdWlyZWQpO1xuICBwcm9wZXJ0eSh0aGlzLCAnaHR0cENoZWNrc3VtUmVxdWlyZWQnLCBodHRwQ2hlY2tzdW1SZXF1aXJlZCwgZmFsc2UpO1xuXG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgJ2lucHV0JywgZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFvcGVyYXRpb24uaW5wdXQpIHtcbiAgICAgIHJldHVybiBuZXcgU2hhcGUuY3JlYXRlKHt0eXBlOiAnc3RydWN0dXJlJ30sIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gU2hhcGUuY3JlYXRlKG9wZXJhdGlvbi5pbnB1dCwgb3B0aW9ucyk7XG4gIH0pO1xuXG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgJ291dHB1dCcsIGZ1bmN0aW9uKCkge1xuICAgIGlmICghb3BlcmF0aW9uLm91dHB1dCkge1xuICAgICAgcmV0dXJuIG5ldyBTaGFwZS5jcmVhdGUoe3R5cGU6ICdzdHJ1Y3R1cmUnfSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBTaGFwZS5jcmVhdGUob3BlcmF0aW9uLm91dHB1dCwgb3B0aW9ucyk7XG4gIH0pO1xuXG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgJ2Vycm9ycycsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBsaXN0ID0gW107XG4gICAgaWYgKCFvcGVyYXRpb24uZXJyb3JzKSByZXR1cm4gbnVsbDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3BlcmF0aW9uLmVycm9ycy5sZW5ndGg7IGkrKykge1xuICAgICAgbGlzdC5wdXNoKFNoYXBlLmNyZWF0ZShvcGVyYXRpb24uZXJyb3JzW2ldLCBvcHRpb25zKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpc3Q7XG4gIH0pO1xuXG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgJ3BhZ2luYXRvcicsIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBvcHRpb25zLmFwaS5wYWdpbmF0b3JzW25hbWVdO1xuICB9KTtcblxuICBpZiAob3B0aW9ucy5kb2N1bWVudGF0aW9uKSB7XG4gICAgcHJvcGVydHkodGhpcywgJ2RvY3VtZW50YXRpb24nLCBvcGVyYXRpb24uZG9jdW1lbnRhdGlvbik7XG4gICAgcHJvcGVydHkodGhpcywgJ2RvY3VtZW50YXRpb25VcmwnLCBvcGVyYXRpb24uZG9jdW1lbnRhdGlvblVybCk7XG4gIH1cblxuICAvLyBpZGVtcG90ZW50TWVtYmVycyBvbmx5IHRyYWNrcyB0b3AtbGV2ZWwgaW5wdXQgc2hhcGVzXG4gIG1lbW9pemVkUHJvcGVydHkodGhpcywgJ2lkZW1wb3RlbnRNZW1iZXJzJywgZnVuY3Rpb24oKSB7XG4gICAgdmFyIGlkZW1wb3RlbnRNZW1iZXJzID0gW107XG4gICAgdmFyIGlucHV0ID0gc2VsZi5pbnB1dDtcbiAgICB2YXIgbWVtYmVycyA9IGlucHV0Lm1lbWJlcnM7XG4gICAgaWYgKCFpbnB1dC5tZW1iZXJzKSB7XG4gICAgICByZXR1cm4gaWRlbXBvdGVudE1lbWJlcnM7XG4gICAgfVxuICAgIGZvciAodmFyIG5hbWUgaW4gbWVtYmVycykge1xuICAgICAgaWYgKCFtZW1iZXJzLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKG1lbWJlcnNbbmFtZV0uaXNJZGVtcG90ZW50ID09PSB0cnVlKSB7XG4gICAgICAgIGlkZW1wb3RlbnRNZW1iZXJzLnB1c2gobmFtZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpZGVtcG90ZW50TWVtYmVycztcbiAgfSk7XG5cbiAgbWVtb2l6ZWRQcm9wZXJ0eSh0aGlzLCAnaGFzRXZlbnRPdXRwdXQnLCBmdW5jdGlvbigpIHtcbiAgICB2YXIgb3V0cHV0ID0gc2VsZi5vdXRwdXQ7XG4gICAgcmV0dXJuIGhhc0V2ZW50U3RyZWFtKG91dHB1dCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYXNFdmVudFN0cmVhbSh0b3BMZXZlbFNoYXBlKSB7XG4gIHZhciBtZW1iZXJzID0gdG9wTGV2ZWxTaGFwZS5tZW1iZXJzO1xuICB2YXIgcGF5bG9hZCA9IHRvcExldmVsU2hhcGUucGF5bG9hZDtcblxuICBpZiAoIXRvcExldmVsU2hhcGUubWVtYmVycykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChwYXlsb2FkKSB7XG4gICAgdmFyIHBheWxvYWRNZW1iZXIgPSBtZW1iZXJzW3BheWxvYWRdO1xuICAgIHJldHVybiBwYXlsb2FkTWVtYmVyLmlzRXZlbnRTdHJlYW07XG4gIH1cblxuICAvLyBjaGVjayBpZiBhbnkgbWVtYmVyIGlzIGFuIGV2ZW50IHN0cmVhbVxuICBmb3IgKHZhciBuYW1lIGluIG1lbWJlcnMpIHtcbiAgICBpZiAoIW1lbWJlcnMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgIGlmIChtZW1iZXJzW25hbWVdLmlzRXZlbnRTdHJlYW0gPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBPcGVyYXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/operation.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/paginator.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/paginator.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var property = (__webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\").property);\n\nfunction Paginator(name, paginator) {\n  property(this, 'inputToken', paginator.input_token);\n  property(this, 'limitKey', paginator.limit_key);\n  property(this, 'moreResults', paginator.more_results);\n  property(this, 'outputToken', paginator.output_token);\n  property(this, 'resultKey', paginator.result_key);\n}\n\n/**\n * @api private\n */\nmodule.exports = Paginator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL3BhZ2luYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLDZGQUEyQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvbW9kZWwvcGFnaW5hdG9yLmpzPzg5OTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHByb3BlcnR5ID0gcmVxdWlyZSgnLi4vdXRpbCcpLnByb3BlcnR5O1xuXG5mdW5jdGlvbiBQYWdpbmF0b3IobmFtZSwgcGFnaW5hdG9yKSB7XG4gIHByb3BlcnR5KHRoaXMsICdpbnB1dFRva2VuJywgcGFnaW5hdG9yLmlucHV0X3Rva2VuKTtcbiAgcHJvcGVydHkodGhpcywgJ2xpbWl0S2V5JywgcGFnaW5hdG9yLmxpbWl0X2tleSk7XG4gIHByb3BlcnR5KHRoaXMsICdtb3JlUmVzdWx0cycsIHBhZ2luYXRvci5tb3JlX3Jlc3VsdHMpO1xuICBwcm9wZXJ0eSh0aGlzLCAnb3V0cHV0VG9rZW4nLCBwYWdpbmF0b3Iub3V0cHV0X3Rva2VuKTtcbiAgcHJvcGVydHkodGhpcywgJ3Jlc3VsdEtleScsIHBhZ2luYXRvci5yZXN1bHRfa2V5KTtcbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBQYWdpbmF0b3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/paginator.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/resource_waiter.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/resource_waiter.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar property = util.property;\n\nfunction ResourceWaiter(name, waiter, options) {\n  options = options || {};\n  property(this, 'name', name);\n  property(this, 'api', options.api, false);\n\n  if (waiter.operation) {\n    property(this, 'operation', util.string.lowerFirst(waiter.operation));\n  }\n\n  var self = this;\n  var keys = [\n    'type',\n    'description',\n    'delay',\n    'maxAttempts',\n    'acceptors'\n  ];\n\n  keys.forEach(function(key) {\n    var value = waiter[key];\n    if (value) {\n      property(self, key, value);\n    }\n  });\n}\n\n/**\n * @api private\n */\nmodule.exports = ResourceWaiter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL21vZGVsL3Jlc291cmNlX3dhaXRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsNkRBQVM7QUFDNUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9tb2RlbC9yZXNvdXJjZV93YWl0ZXIuanM/M2U2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbCA9IHJlcXVpcmUoJy4uL3V0aWwnKTtcbnZhciBwcm9wZXJ0eSA9IHV0aWwucHJvcGVydHk7XG5cbmZ1bmN0aW9uIFJlc291cmNlV2FpdGVyKG5hbWUsIHdhaXRlciwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgcHJvcGVydHkodGhpcywgJ25hbWUnLCBuYW1lKTtcbiAgcHJvcGVydHkodGhpcywgJ2FwaScsIG9wdGlvbnMuYXBpLCBmYWxzZSk7XG5cbiAgaWYgKHdhaXRlci5vcGVyYXRpb24pIHtcbiAgICBwcm9wZXJ0eSh0aGlzLCAnb3BlcmF0aW9uJywgdXRpbC5zdHJpbmcubG93ZXJGaXJzdCh3YWl0ZXIub3BlcmF0aW9uKSk7XG4gIH1cblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBrZXlzID0gW1xuICAgICd0eXBlJyxcbiAgICAnZGVzY3JpcHRpb24nLFxuICAgICdkZWxheScsXG4gICAgJ21heEF0dGVtcHRzJyxcbiAgICAnYWNjZXB0b3JzJ1xuICBdO1xuXG4gIGtleXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICB2YXIgdmFsdWUgPSB3YWl0ZXJba2V5XTtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHByb3BlcnR5KHNlbGYsIGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gUmVzb3VyY2VXYWl0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/resource_waiter.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/model/shape.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/model/shape.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Collection = __webpack_require__(/*! ./collection */ \"(rsc)/../../node_modules/aws-sdk/lib/model/collection.js\");\n\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\n\nfunction property(obj, name, value) {\n  if (value !== null && value !== undefined) {\n    util.property.apply(this, arguments);\n  }\n}\n\nfunction memoizedProperty(obj, name) {\n  if (!obj.constructor.prototype[name]) {\n    util.memoizedProperty.apply(this, arguments);\n  }\n}\n\nfunction Shape(shape, options, memberName) {\n  options = options || {};\n\n  property(this, 'shape', shape.shape);\n  property(this, 'api', options.api, false);\n  property(this, 'type', shape.type);\n  property(this, 'enum', shape.enum);\n  property(this, 'min', shape.min);\n  property(this, 'max', shape.max);\n  property(this, 'pattern', shape.pattern);\n  property(this, 'location', shape.location || this.location || 'body');\n  property(this, 'name', this.name || shape.xmlName || shape.queryName ||\n    shape.locationName || memberName);\n  property(this, 'isStreaming', shape.streaming || this.isStreaming || false);\n  property(this, 'requiresLength', shape.requiresLength, false);\n  property(this, 'isComposite', shape.isComposite || false);\n  property(this, 'isShape', true, false);\n  property(this, 'isQueryName', Boolean(shape.queryName), false);\n  property(this, 'isLocationName', Boolean(shape.locationName), false);\n  property(this, 'isIdempotent', shape.idempotencyToken === true);\n  property(this, 'isJsonValue', shape.jsonvalue === true);\n  property(this, 'isSensitive', shape.sensitive === true || shape.prototype && shape.prototype.sensitive === true);\n  property(this, 'isEventStream', Boolean(shape.eventstream), false);\n  property(this, 'isEvent', Boolean(shape.event), false);\n  property(this, 'isEventPayload', Boolean(shape.eventpayload), false);\n  property(this, 'isEventHeader', Boolean(shape.eventheader), false);\n  property(this, 'isTimestampFormatSet', Boolean(shape.timestampFormat) || shape.prototype && shape.prototype.isTimestampFormatSet === true, false);\n  property(this, 'endpointDiscoveryId', Boolean(shape.endpointdiscoveryid), false);\n  property(this, 'hostLabel', Boolean(shape.hostLabel), false);\n\n  if (options.documentation) {\n    property(this, 'documentation', shape.documentation);\n    property(this, 'documentationUrl', shape.documentationUrl);\n  }\n\n  if (shape.xmlAttribute) {\n    property(this, 'isXmlAttribute', shape.xmlAttribute || false);\n  }\n\n  // type conversion and parsing\n  property(this, 'defaultValue', null);\n  this.toWireFormat = function(value) {\n    if (value === null || value === undefined) return '';\n    return value;\n  };\n  this.toType = function(value) { return value; };\n}\n\n/**\n * @api private\n */\nShape.normalizedTypes = {\n  character: 'string',\n  double: 'float',\n  long: 'integer',\n  short: 'integer',\n  biginteger: 'integer',\n  bigdecimal: 'float',\n  blob: 'binary'\n};\n\n/**\n * @api private\n */\nShape.types = {\n  'structure': StructureShape,\n  'list': ListShape,\n  'map': MapShape,\n  'boolean': BooleanShape,\n  'timestamp': TimestampShape,\n  'float': FloatShape,\n  'integer': IntegerShape,\n  'string': StringShape,\n  'base64': Base64Shape,\n  'binary': BinaryShape\n};\n\nShape.resolve = function resolve(shape, options) {\n  if (shape.shape) {\n    var refShape = options.api.shapes[shape.shape];\n    if (!refShape) {\n      throw new Error('Cannot find shape reference: ' + shape.shape);\n    }\n\n    return refShape;\n  } else {\n    return null;\n  }\n};\n\nShape.create = function create(shape, options, memberName) {\n  if (shape.isShape) return shape;\n\n  var refShape = Shape.resolve(shape, options);\n  if (refShape) {\n    var filteredKeys = Object.keys(shape);\n    if (!options.documentation) {\n      filteredKeys = filteredKeys.filter(function(name) {\n        return !name.match(/documentation/);\n      });\n    }\n\n    // create an inline shape with extra members\n    var InlineShape = function() {\n      refShape.constructor.call(this, shape, options, memberName);\n    };\n    InlineShape.prototype = refShape;\n    return new InlineShape();\n  } else {\n    // set type if not set\n    if (!shape.type) {\n      if (shape.members) shape.type = 'structure';\n      else if (shape.member) shape.type = 'list';\n      else if (shape.key) shape.type = 'map';\n      else shape.type = 'string';\n    }\n\n    // normalize types\n    var origType = shape.type;\n    if (Shape.normalizedTypes[shape.type]) {\n      shape.type = Shape.normalizedTypes[shape.type];\n    }\n\n    if (Shape.types[shape.type]) {\n      return new Shape.types[shape.type](shape, options, memberName);\n    } else {\n      throw new Error('Unrecognized shape type: ' + origType);\n    }\n  }\n};\n\nfunction CompositeShape(shape) {\n  Shape.apply(this, arguments);\n  property(this, 'isComposite', true);\n\n  if (shape.flattened) {\n    property(this, 'flattened', shape.flattened || false);\n  }\n}\n\nfunction StructureShape(shape, options) {\n  var self = this;\n  var requiredMap = null, firstInit = !this.isShape;\n\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'members', {});\n    property(this, 'memberNames', []);\n    property(this, 'required', []);\n    property(this, 'isRequired', function() { return false; });\n    property(this, 'isDocument', Boolean(shape.document));\n  }\n\n  if (shape.members) {\n    property(this, 'members', new Collection(shape.members, options, function(name, member) {\n      return Shape.create(member, options, name);\n    }));\n    memoizedProperty(this, 'memberNames', function() {\n      return shape.xmlOrder || Object.keys(shape.members);\n    });\n\n    if (shape.event) {\n      memoizedProperty(this, 'eventPayloadMemberName', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        // iterate over members to find ones that are event payloads\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventPayload) {\n            return memberNames[i];\n          }\n        }\n      });\n\n      memoizedProperty(this, 'eventHeaderMemberNames', function() {\n        var members = self.members;\n        var memberNames = self.memberNames;\n        var eventHeaderMemberNames = [];\n        // iterate over members to find ones that are event headers\n        for (var i = 0, iLen = memberNames.length; i < iLen; i++) {\n          if (members[memberNames[i]].isEventHeader) {\n            eventHeaderMemberNames.push(memberNames[i]);\n          }\n        }\n        return eventHeaderMemberNames;\n      });\n    }\n  }\n\n  if (shape.required) {\n    property(this, 'required', shape.required);\n    property(this, 'isRequired', function(name) {\n      if (!requiredMap) {\n        requiredMap = {};\n        for (var i = 0; i < shape.required.length; i++) {\n          requiredMap[shape.required[i]] = true;\n        }\n      }\n\n      return requiredMap[name];\n    }, false, true);\n  }\n\n  property(this, 'resultWrapper', shape.resultWrapper || null);\n\n  if (shape.payload) {\n    property(this, 'payload', shape.payload);\n  }\n\n  if (typeof shape.xmlNamespace === 'string') {\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace);\n  } else if (typeof shape.xmlNamespace === 'object') {\n    property(this, 'xmlNamespacePrefix', shape.xmlNamespace.prefix);\n    property(this, 'xmlNamespaceUri', shape.xmlNamespace.uri);\n  }\n}\n\nfunction ListShape(shape, options) {\n  var self = this, firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return []; });\n  }\n\n  if (shape.member) {\n    memoizedProperty(this, 'member', function() {\n      return Shape.create(shape.member, options);\n    });\n  }\n\n  if (this.flattened) {\n    var oldName = this.name;\n    memoizedProperty(this, 'name', function() {\n      return self.member.name || oldName;\n    });\n  }\n}\n\nfunction MapShape(shape, options) {\n  var firstInit = !this.isShape;\n  CompositeShape.apply(this, arguments);\n\n  if (firstInit) {\n    property(this, 'defaultValue', function() { return {}; });\n    property(this, 'key', Shape.create({type: 'string'}, options));\n    property(this, 'value', Shape.create({type: 'string'}, options));\n  }\n\n  if (shape.key) {\n    memoizedProperty(this, 'key', function() {\n      return Shape.create(shape.key, options);\n    });\n  }\n  if (shape.value) {\n    memoizedProperty(this, 'value', function() {\n      return Shape.create(shape.value, options);\n    });\n  }\n}\n\nfunction TimestampShape(shape) {\n  var self = this;\n  Shape.apply(this, arguments);\n\n  if (shape.timestampFormat) {\n    property(this, 'timestampFormat', shape.timestampFormat);\n  } else if (self.isTimestampFormatSet && this.timestampFormat) {\n    property(this, 'timestampFormat', this.timestampFormat);\n  } else if (this.location === 'header') {\n    property(this, 'timestampFormat', 'rfc822');\n  } else if (this.location === 'querystring') {\n    property(this, 'timestampFormat', 'iso8601');\n  } else if (this.api) {\n    switch (this.api.protocol) {\n      case 'json':\n      case 'rest-json':\n        property(this, 'timestampFormat', 'unixTimestamp');\n        break;\n      case 'rest-xml':\n      case 'query':\n      case 'ec2':\n        property(this, 'timestampFormat', 'iso8601');\n        break;\n    }\n  }\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    if (typeof value.toUTCString === 'function') return value;\n    return typeof value === 'string' || typeof value === 'number' ?\n           util.date.parseTimestamp(value) : null;\n  };\n\n  this.toWireFormat = function(value) {\n    return util.date.format(value, self.timestampFormat);\n  };\n}\n\nfunction StringShape() {\n  Shape.apply(this, arguments);\n\n  var nullLessProtocols = ['rest-xml', 'query', 'ec2'];\n  this.toType = function(value) {\n    value = this.api && nullLessProtocols.indexOf(this.api.protocol) > -1 ?\n      value || '' : value;\n    if (this.isJsonValue) {\n      return JSON.parse(value);\n    }\n\n    return value && typeof value.toString === 'function' ?\n      value.toString() : value;\n  };\n\n  this.toWireFormat = function(value) {\n    return this.isJsonValue ? JSON.stringify(value) : value;\n  };\n}\n\nfunction FloatShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseFloat(value);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction IntegerShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (value === null || value === undefined) return null;\n    return parseInt(value, 10);\n  };\n  this.toWireFormat = this.toType;\n}\n\nfunction BinaryShape() {\n  Shape.apply(this, arguments);\n  this.toType = function(value) {\n    var buf = util.base64.decode(value);\n    if (this.isSensitive && util.isNode() && typeof util.Buffer.alloc === 'function') {\n  /* Node.js can create a Buffer that is not isolated.\n   * i.e. buf.byteLength !== buf.buffer.byteLength\n   * This means that the sensitive data is accessible to anyone with access to buf.buffer.\n   * If this is the node shared Buffer, then other code within this process _could_ find this secret.\n   * Copy sensitive data to an isolated Buffer and zero the sensitive data.\n   * While this is safe to do here, copying this code somewhere else may produce unexpected results.\n   */\n      var secureBuf = util.Buffer.alloc(buf.length, buf);\n      buf.fill(0);\n      buf = secureBuf;\n    }\n    return buf;\n  };\n  this.toWireFormat = util.base64.encode;\n}\n\nfunction Base64Shape() {\n  BinaryShape.apply(this, arguments);\n}\n\nfunction BooleanShape() {\n  Shape.apply(this, arguments);\n\n  this.toType = function(value) {\n    if (typeof value === 'boolean') return value;\n    if (value === null || value === undefined) return null;\n    return value === 'true';\n  };\n}\n\n/**\n * @api private\n */\nShape.shapes = {\n  StructureShape: StructureShape,\n  ListShape: ListShape,\n  MapShape: MapShape,\n  StringShape: StringShape,\n  BooleanShape: BooleanShape,\n  Base64Shape: Base64Shape\n};\n\n/**\n * @api private\n */\nmodule.exports = Shape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/model/shape.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/node_loader.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/node_loader.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\n\nvar region_utils = __webpack_require__(/*! ./region/utils */ \"(rsc)/../../node_modules/aws-sdk/lib/region/utils.js\");\nvar isFipsRegion = region_utils.isFipsRegion;\nvar getRealRegion = region_utils.getRealRegion;\n\nutil.isBrowser = function() { return false; };\nutil.isNode = function() { return true; };\n\n// node.js specific modules\nutil.crypto.lib = __webpack_require__(/*! crypto */ \"crypto\");\nutil.Buffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\nutil.domain = __webpack_require__(/*! domain */ \"domain\");\nutil.stream = __webpack_require__(/*! stream */ \"stream\");\nutil.url = __webpack_require__(/*! url */ \"url\");\nutil.querystring = __webpack_require__(/*! querystring */ \"querystring\");\nutil.environment = 'nodejs';\nutil.createEventStream = util.stream.Readable ?\n  (__webpack_require__(/*! ./event-stream/streaming-create-event-stream */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/streaming-create-event-stream.js\").createEventStream) : (__webpack_require__(/*! ./event-stream/buffered-create-event-stream */ \"(rsc)/../../node_modules/aws-sdk/lib/event-stream/buffered-create-event-stream.js\").createEventStream);\nutil.realClock = __webpack_require__(/*! ./realclock/nodeClock */ \"(rsc)/../../node_modules/aws-sdk/lib/realclock/nodeClock.js\");\nutil.clientSideMonitoring = {\n  Publisher: (__webpack_require__(/*! ./publisher */ \"(rsc)/../../node_modules/aws-sdk/lib/publisher/index.js\").Publisher),\n  configProvider: __webpack_require__(/*! ./publisher/configuration */ \"(rsc)/../../node_modules/aws-sdk/lib/publisher/configuration.js\"),\n};\nutil.iniLoader = (__webpack_require__(/*! ./shared-ini */ \"(rsc)/../../node_modules/aws-sdk/lib/shared-ini/index.js\").iniLoader);\nutil.getSystemErrorName = (__webpack_require__(/*! util */ \"util\").getSystemErrorName);\n\nutil.loadConfig = function(options) {\n  var envValue = options.environmentVariableSelector(process.env);\n  if (envValue !== undefined) {\n    return envValue;\n  }\n\n  var configFile = {};\n  try {\n    configFile = util.iniLoader ? util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[util.sharedConfigFileEnv]\n    }) : {};\n  } catch (e) {}\n  var sharedFileConfig = configFile[\n    process.env.AWS_PROFILE || util.defaultProfile\n  ] || {};\n  var configValue = options.configFileSelector(sharedFileConfig);\n  if (configValue !== undefined) {\n    return configValue;\n  }\n\n  if (typeof options.default === 'function') {\n    return options.default();\n  }\n  return options.default;\n};\n\nvar AWS;\n\n/**\n * @api private\n */\nmodule.exports = AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n__webpack_require__(/*! ./credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials.js\");\n__webpack_require__(/*! ./credentials/credential_provider_chain */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/credential_provider_chain.js\");\n__webpack_require__(/*! ./credentials/temporary_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/temporary_credentials.js\");\n__webpack_require__(/*! ./credentials/chainable_temporary_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/chainable_temporary_credentials.js\");\n__webpack_require__(/*! ./credentials/web_identity_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/web_identity_credentials.js\");\n__webpack_require__(/*! ./credentials/cognito_identity_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/cognito_identity_credentials.js\");\n__webpack_require__(/*! ./credentials/saml_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/saml_credentials.js\");\n__webpack_require__(/*! ./credentials/process_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/process_credentials.js\");\n\n// Load the xml2js XML parser\nAWS.XML.Parser = __webpack_require__(/*! ./xml/node_parser */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/node_parser.js\");\n\n// Load Node HTTP client\n__webpack_require__(/*! ./http/node */ \"(rsc)/../../node_modules/aws-sdk/lib/http/node.js\");\n\n__webpack_require__(/*! ./shared-ini/ini-loader */ \"(rsc)/../../node_modules/aws-sdk/lib/shared-ini/ini-loader.js\");\n\n// Load custom credential providers\n__webpack_require__(/*! ./credentials/token_file_web_identity_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/token_file_web_identity_credentials.js\");\n__webpack_require__(/*! ./credentials/ec2_metadata_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/ec2_metadata_credentials.js\");\n__webpack_require__(/*! ./credentials/remote_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/remote_credentials.js\");\n__webpack_require__(/*! ./credentials/ecs_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/ecs_credentials.js\");\n__webpack_require__(/*! ./credentials/environment_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/environment_credentials.js\");\n__webpack_require__(/*! ./credentials/file_system_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/file_system_credentials.js\");\n__webpack_require__(/*! ./credentials/shared_ini_file_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/shared_ini_file_credentials.js\");\n__webpack_require__(/*! ./credentials/process_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/process_credentials.js\");\n__webpack_require__(/*! ./credentials/sso_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/credentials/sso_credentials.js\");\n\n// Setup default providers for credentials chain\n// If this changes, please update documentation for\n// AWS.CredentialProviderChain.defaultProviders in\n// credentials/credential_provider_chain.js\nAWS.CredentialProviderChain.defaultProviders = [\n  function () { return new AWS.EnvironmentCredentials('AWS'); },\n  function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n  function () { return new AWS.SsoCredentials(); },\n  function () { return new AWS.SharedIniFileCredentials(); },\n  function () { return new AWS.ECSCredentials(); },\n  function () { return new AWS.ProcessCredentials(); },\n  function () { return new AWS.TokenFileWebIdentityCredentials(); },\n  function () { return new AWS.EC2MetadataCredentials(); }\n];\n\n// Load custom token providers\n__webpack_require__(/*! ./token */ \"(rsc)/../../node_modules/aws-sdk/lib/token.js\");\n__webpack_require__(/*! ./token/token_provider_chain */ \"(rsc)/../../node_modules/aws-sdk/lib/token/token_provider_chain.js\");\n__webpack_require__(/*! ./token/sso_token_provider */ \"(rsc)/../../node_modules/aws-sdk/lib/token/sso_token_provider.js\");\n\n// Setup default providers for token chain\n// If this changes, please update documentation for\n// AWS.TokenProviderChain.defaultProviders in\n// token/token_provider_chain.js\nAWS.TokenProviderChain.defaultProviders = [\n  function () { return new AWS.SSOTokenProvider(); },\n];\n\nvar getRegion = function() {\n  var env = process.env;\n  var region = env.AWS_REGION || env.AMAZON_REGION;\n  if (env[AWS.util.configOptInEnv]) {\n    var toCheck = [\n      {filename: env[AWS.util.sharedCredentialsFileEnv]},\n      {isConfig: true, filename: env[AWS.util.sharedConfigFileEnv]}\n    ];\n    var iniLoader = AWS.util.iniLoader;\n    while (!region && toCheck.length) {\n      var configFile = {};\n      var fileInfo = toCheck.shift();\n      try {\n        configFile = iniLoader.loadFrom(fileInfo);\n      } catch (err) {\n        if (fileInfo.isConfig) throw err;\n      }\n      var profile = configFile[env.AWS_PROFILE || AWS.util.defaultProfile];\n      region = profile && profile.region;\n    }\n  }\n  return region;\n};\n\nvar getBooleanValue = function(value) {\n  return value === 'true' ? true: value === 'false' ? false: undefined;\n};\n\nvar USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function(env) {\n    return getBooleanValue(env['AWS_USE_FIPS_ENDPOINT']);\n  },\n  configFileSelector: function(profile) {\n    return getBooleanValue(profile['use_fips_endpoint']);\n  },\n  default: false,\n};\n\nvar USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function(env) {\n    return getBooleanValue(env['AWS_USE_DUALSTACK_ENDPOINT']);\n  },\n  configFileSelector: function(profile) {\n    return getBooleanValue(profile['use_dualstack_endpoint']);\n  },\n  default: false,\n};\n\n// Update configuration keys\nAWS.util.update(AWS.Config.prototype.keys, {\n  credentials: function () {\n    var credentials = null;\n    new AWS.CredentialProviderChain([\n      function () { return new AWS.EnvironmentCredentials('AWS'); },\n      function () { return new AWS.EnvironmentCredentials('AMAZON'); },\n      function () { return new AWS.SharedIniFileCredentials({ disableAssumeRole: true }); }\n    ]).resolve(function(err, creds) {\n      if (!err) credentials = creds;\n    });\n    return credentials;\n  },\n  credentialProvider: function() {\n    return new AWS.CredentialProviderChain();\n  },\n  logger: function () {\n    return process.env.AWSJS_DEBUG ? console : null;\n  },\n  region: function() {\n    var region = getRegion();\n    return region ? getRealRegion(region): undefined;\n  },\n  tokenProvider: function() {\n    return new AWS.TokenProviderChain();\n  },\n  useFipsEndpoint: function() {\n    var region = getRegion();\n    return isFipsRegion(region)\n      ? true\n      : util.loadConfig(USE_FIPS_ENDPOINT_CONFIG_OPTIONS);\n  },\n  useDualstackEndpoint: function() {\n    return util.loadConfig(USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS);\n  }\n});\n\n// Reset configuration\nAWS.config = new AWS.Config();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/node_loader.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/param_validator.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/param_validator.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    if (shape.isDocument) return true;\n\n    this.validateType(params, context, ['object'], 'structure');\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else if (paramValue !== undefined && paramValue !== null) {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/param_validator.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/helpers.js":
/*!**********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/helpers.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util =  __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\nfunction populateHostPrefix(request)  {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation];\n  //don't marshal host prefix when operation has endpoint discovery traits\n  if (hasEndpointDiscover(request)) return request;\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n  return request;\n}\n\n/**\n * @api private\n */\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && (api.endpointOperation === util.string.lowerFirst(operationModel.name));\n  return (operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true);\n}\n\n/**\n * @api private\n */\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function(name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n\n/**\n * @api private\n */\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n\n/**\n * @api private\n */\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.');\n  //Reference: https://tools.ietf.org/html/rfc1123#section-2\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function(label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: label + ' is not hostname compatible.'});\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxtQkFBTyxDQUFDLDZEQUFTO0FBQzdCLFVBQVUsbUJBQU8sQ0FBQyw2REFBUzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxpQ0FBaUMsZUFBZTtBQUNoRDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsRUFBRTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUVBQXlFO0FBQ2xGO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9wcm90b2NvbC9oZWxwZXJzLmpzPzUwYzIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSAgcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxuLyoqXG4gKiBQcmVwZW5kIHByZWZpeCBkZWZpbmVkIGJ5IEFQSSBtb2RlbCB0byBlbmRwb2ludCB0aGF0J3MgYWxyZWFkeVxuICogY29uc3RydWN0ZWQuIFRoaXMgZmVhdHVyZSBkb2VzIG5vdCBhcHBseSB0byBvcGVyYXRpb25zIHVzaW5nXG4gKiBlbmRwb2ludCBkaXNjb3ZlcnkgYW5kIGNhbiBiZSBkaXNhYmxlZC5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBwb3B1bGF0ZUhvc3RQcmVmaXgocmVxdWVzdCkgIHtcbiAgdmFyIGVuYWJsZWQgPSByZXF1ZXN0LnNlcnZpY2UuY29uZmlnLmhvc3RQcmVmaXhFbmFibGVkO1xuICBpZiAoIWVuYWJsZWQpIHJldHVybiByZXF1ZXN0O1xuICB2YXIgb3BlcmF0aW9uTW9kZWwgPSByZXF1ZXN0LnNlcnZpY2UuYXBpLm9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dO1xuICAvL2Rvbid0IG1hcnNoYWwgaG9zdCBwcmVmaXggd2hlbiBvcGVyYXRpb24gaGFzIGVuZHBvaW50IGRpc2NvdmVyeSB0cmFpdHNcbiAgaWYgKGhhc0VuZHBvaW50RGlzY292ZXIocmVxdWVzdCkpIHJldHVybiByZXF1ZXN0O1xuICBpZiAob3BlcmF0aW9uTW9kZWwuZW5kcG9pbnQgJiYgb3BlcmF0aW9uTW9kZWwuZW5kcG9pbnQuaG9zdFByZWZpeCkge1xuICAgIHZhciBob3N0UHJlZml4Tm90YXRpb24gPSBvcGVyYXRpb25Nb2RlbC5lbmRwb2ludC5ob3N0UHJlZml4O1xuICAgIHZhciBob3N0UHJlZml4ID0gZXhwYW5kSG9zdFByZWZpeChob3N0UHJlZml4Tm90YXRpb24sIHJlcXVlc3QucGFyYW1zLCBvcGVyYXRpb25Nb2RlbC5pbnB1dCk7XG4gICAgcHJlcGVuZEVuZHBvaW50UHJlZml4KHJlcXVlc3QuaHR0cFJlcXVlc3QuZW5kcG9pbnQsIGhvc3RQcmVmaXgpO1xuICAgIHZhbGlkYXRlSG9zdG5hbWUocmVxdWVzdC5odHRwUmVxdWVzdC5lbmRwb2ludC5ob3N0bmFtZSk7XG4gIH1cbiAgcmV0dXJuIHJlcXVlc3Q7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGhhc0VuZHBvaW50RGlzY292ZXIocmVxdWVzdCkge1xuICB2YXIgYXBpID0gcmVxdWVzdC5zZXJ2aWNlLmFwaTtcbiAgdmFyIG9wZXJhdGlvbk1vZGVsID0gYXBpLm9wZXJhdGlvbnNbcmVxdWVzdC5vcGVyYXRpb25dO1xuICB2YXIgaXNFbmRwb2ludE9wZXJhdGlvbiA9IGFwaS5lbmRwb2ludE9wZXJhdGlvbiAmJiAoYXBpLmVuZHBvaW50T3BlcmF0aW9uID09PSB1dGlsLnN0cmluZy5sb3dlckZpcnN0KG9wZXJhdGlvbk1vZGVsLm5hbWUpKTtcbiAgcmV0dXJuIChvcGVyYXRpb25Nb2RlbC5lbmRwb2ludERpc2NvdmVyeVJlcXVpcmVkICE9PSAnTlVMTCcgfHwgaXNFbmRwb2ludE9wZXJhdGlvbiA9PT0gdHJ1ZSk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGV4cGFuZEhvc3RQcmVmaXgoaG9zdFByZWZpeE5vdGF0aW9uLCBwYXJhbXMsIHNoYXBlKSB7XG4gIHV0aWwuZWFjaChzaGFwZS5tZW1iZXJzLCBmdW5jdGlvbihuYW1lLCBtZW1iZXIpIHtcbiAgICBpZiAobWVtYmVyLmhvc3RMYWJlbCA9PT0gdHJ1ZSkge1xuICAgICAgaWYgKHR5cGVvZiBwYXJhbXNbbmFtZV0gIT09ICdzdHJpbmcnIHx8IHBhcmFtc1tuYW1lXSA9PT0gJycpIHtcbiAgICAgICAgdGhyb3cgdXRpbC5lcnJvcihuZXcgRXJyb3IoKSwge1xuICAgICAgICAgIG1lc3NhZ2U6ICdQYXJhbWV0ZXIgJyArIG5hbWUgKyAnIHNob3VsZCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcuJyxcbiAgICAgICAgICBjb2RlOiAnSW52YWxpZFBhcmFtZXRlcidcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdcXFxceycgKyBuYW1lICsgJ1xcXFx9JywgJ2cnKTtcbiAgICAgIGhvc3RQcmVmaXhOb3RhdGlvbiA9IGhvc3RQcmVmaXhOb3RhdGlvbi5yZXBsYWNlKHJlZ2V4LCBwYXJhbXNbbmFtZV0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBob3N0UHJlZml4Tm90YXRpb247XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHByZXBlbmRFbmRwb2ludFByZWZpeChlbmRwb2ludCwgcHJlZml4KSB7XG4gIGlmIChlbmRwb2ludC5ob3N0KSB7XG4gICAgZW5kcG9pbnQuaG9zdCA9IHByZWZpeCArIGVuZHBvaW50Lmhvc3Q7XG4gIH1cbiAgaWYgKGVuZHBvaW50Lmhvc3RuYW1lKSB7XG4gICAgZW5kcG9pbnQuaG9zdG5hbWUgPSBwcmVmaXggKyBlbmRwb2ludC5ob3N0bmFtZTtcbiAgfVxufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiB2YWxpZGF0ZUhvc3RuYW1lKGhvc3RuYW1lKSB7XG4gIHZhciBsYWJlbHMgPSBob3N0bmFtZS5zcGxpdCgnLicpO1xuICAvL1JlZmVyZW5jZTogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzExMjMjc2VjdGlvbi0yXG4gIHZhciBob3N0UGF0dGVybiA9IC9eW2EtekEtWjAtOV17MX0kfF5bYS16QS1aMC05XVthLXpBLVowLTlcXC1dKlthLXpBLVowLTldJC87XG4gIHV0aWwuYXJyYXlFYWNoKGxhYmVscywgZnVuY3Rpb24obGFiZWwpIHtcbiAgICBpZiAoIWxhYmVsLmxlbmd0aCB8fCBsYWJlbC5sZW5ndGggPCAxIHx8IGxhYmVsLmxlbmd0aCA+IDYzKSB7XG4gICAgICB0aHJvdyB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICAgIGNvZGU6ICdWYWxpZGF0aW9uRXJyb3InLFxuICAgICAgICBtZXNzYWdlOiAnSG9zdG5hbWUgbGFiZWwgbGVuZ3RoIHNob3VsZCBiZSBiZXR3ZWVuIDEgdG8gNjMgY2hhcmFjdGVycywgaW5jbHVzaXZlLidcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoIWhvc3RQYXR0ZXJuLnRlc3QobGFiZWwpKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihuZXcgRXJyb3IoKSxcbiAgICAgICAge2NvZGU6ICdWYWxpZGF0aW9uRXJyb3InLCBtZXNzYWdlOiBsYWJlbCArICcgaXMgbm90IGhvc3RuYW1lIGNvbXBhdGlibGUuJ30pO1xuICAgIH1cbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwb3B1bGF0ZUhvc3RQcmVmaXg6IHBvcHVsYXRlSG9zdFByZWZpeFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/helpers.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/json.js":
/*!*******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/json.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar JsonBuilder = __webpack_require__(/*! ../json/builder */ \"(rsc)/../../node_modules/aws-sdk/lib/json/builder.js\");\nvar JsonParser = __webpack_require__(/*! ../json/parser */ \"(rsc)/../../node_modules/aws-sdk/lib/json/parser.js\");\nvar populateHostPrefix = (__webpack_require__(/*! ./helpers */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/helpers.js\").populateHostPrefix);\n\nfunction buildRequest(req) {\n  var httpRequest = req.httpRequest;\n  var api = req.service.api;\n  var target = api.targetPrefix + '.' + api.operations[req.operation].name;\n  var version = api.jsonVersion || '1.0';\n  var input = api.operations[req.operation].input;\n  var builder = new JsonBuilder();\n\n  if (version === 1) version = '1.0';\n\n  if (api.awsQueryCompatible) {\n    if (!httpRequest.params) {\n      httpRequest.params = {};\n    }\n    // because Query protocol does this.\n    Object.assign(httpRequest.params, req.params);\n  }\n\n  httpRequest.body = builder.build(req.params || {}, input);\n  httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;\n  httpRequest.headers['X-Amz-Target'] = target;\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var error = {};\n  var httpResponse = resp.httpResponse;\n\n  error.code = httpResponse.headers['x-amzn-errortype'] || 'UnknownError';\n  if (typeof error.code === 'string') {\n    error.code = error.code.split(':')[0];\n  }\n\n  if (httpResponse.body.length > 0) {\n    try {\n      var e = JSON.parse(httpResponse.body.toString());\n\n      var code = e.__type || e.code || e.Code;\n      if (code) {\n        error.code = code.split('#').pop();\n      }\n      if (error.code === 'RequestEntityTooLarge') {\n        error.message = 'Request body must be less than 1 MB';\n      } else {\n        error.message = (e.message || e.Message || null);\n      }\n\n      // The minimized models do not have error shapes, so\n      // without expanding the model size, it's not possible\n      // to validate the response shape (members) or\n      // check if any are sensitive to logging.\n\n      // Assign the fields as non-enumerable, allowing specific access only.\n      for (var key in e || {}) {\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n        error['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(error, key, {\n          value: e[key],\n          enumerable: false,\n          writable: true\n        });\n      }\n    } catch (e) {\n      error.statusCode = httpResponse.statusCode;\n      error.message = httpResponse.statusMessage;\n    }\n  } else {\n    error.statusCode = httpResponse.statusCode;\n    error.message = httpResponse.statusCode.toString();\n  }\n\n  resp.error = util.error(new Error(), error);\n}\n\nfunction extractData(resp) {\n  var body = resp.httpResponse.body.toString() || '{}';\n  if (resp.request.service.config.convertResponseTypes === false) {\n    resp.data = JSON.parse(body);\n  } else {\n    var operation = resp.request.service.api.operations[resp.request.operation];\n    var shape = operation.output || {};\n    var parser = new JsonParser();\n    resp.data = parser.parse(body, shape);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL2pzb24uanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLDZEQUFTO0FBQzVCLGtCQUFrQixtQkFBTyxDQUFDLDZFQUFpQjtBQUMzQyxpQkFBaUIsbUJBQU8sQ0FBQywyRUFBZ0I7QUFDekMseUJBQXlCLHFIQUF1Qzs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbURBQW1EO0FBQ25EO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvcHJvdG9jb2wvanNvbi5qcz8yMWY0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIEpzb25CdWlsZGVyID0gcmVxdWlyZSgnLi4vanNvbi9idWlsZGVyJyk7XG52YXIgSnNvblBhcnNlciA9IHJlcXVpcmUoJy4uL2pzb24vcGFyc2VyJyk7XG52YXIgcG9wdWxhdGVIb3N0UHJlZml4ID0gcmVxdWlyZSgnLi9oZWxwZXJzJykucG9wdWxhdGVIb3N0UHJlZml4O1xuXG5mdW5jdGlvbiBidWlsZFJlcXVlc3QocmVxKSB7XG4gIHZhciBodHRwUmVxdWVzdCA9IHJlcS5odHRwUmVxdWVzdDtcbiAgdmFyIGFwaSA9IHJlcS5zZXJ2aWNlLmFwaTtcbiAgdmFyIHRhcmdldCA9IGFwaS50YXJnZXRQcmVmaXggKyAnLicgKyBhcGkub3BlcmF0aW9uc1tyZXEub3BlcmF0aW9uXS5uYW1lO1xuICB2YXIgdmVyc2lvbiA9IGFwaS5qc29uVmVyc2lvbiB8fCAnMS4wJztcbiAgdmFyIGlucHV0ID0gYXBpLm9wZXJhdGlvbnNbcmVxLm9wZXJhdGlvbl0uaW5wdXQ7XG4gIHZhciBidWlsZGVyID0gbmV3IEpzb25CdWlsZGVyKCk7XG5cbiAgaWYgKHZlcnNpb24gPT09IDEpIHZlcnNpb24gPSAnMS4wJztcblxuICBpZiAoYXBpLmF3c1F1ZXJ5Q29tcGF0aWJsZSkge1xuICAgIGlmICghaHR0cFJlcXVlc3QucGFyYW1zKSB7XG4gICAgICBodHRwUmVxdWVzdC5wYXJhbXMgPSB7fTtcbiAgICB9XG4gICAgLy8gYmVjYXVzZSBRdWVyeSBwcm90b2NvbCBkb2VzIHRoaXMuXG4gICAgT2JqZWN0LmFzc2lnbihodHRwUmVxdWVzdC5wYXJhbXMsIHJlcS5wYXJhbXMpO1xuICB9XG5cbiAgaHR0cFJlcXVlc3QuYm9keSA9IGJ1aWxkZXIuYnVpbGQocmVxLnBhcmFtcyB8fCB7fSwgaW5wdXQpO1xuICBodHRwUmVxdWVzdC5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi94LWFtei1qc29uLScgKyB2ZXJzaW9uO1xuICBodHRwUmVxdWVzdC5oZWFkZXJzWydYLUFtei1UYXJnZXQnXSA9IHRhcmdldDtcblxuICBwb3B1bGF0ZUhvc3RQcmVmaXgocmVxKTtcbn1cblxuZnVuY3Rpb24gZXh0cmFjdEVycm9yKHJlc3ApIHtcbiAgdmFyIGVycm9yID0ge307XG4gIHZhciBodHRwUmVzcG9uc2UgPSByZXNwLmh0dHBSZXNwb25zZTtcblxuICBlcnJvci5jb2RlID0gaHR0cFJlc3BvbnNlLmhlYWRlcnNbJ3gtYW16bi1lcnJvcnR5cGUnXSB8fCAnVW5rbm93bkVycm9yJztcbiAgaWYgKHR5cGVvZiBlcnJvci5jb2RlID09PSAnc3RyaW5nJykge1xuICAgIGVycm9yLmNvZGUgPSBlcnJvci5jb2RlLnNwbGl0KCc6JylbMF07XG4gIH1cblxuICBpZiAoaHR0cFJlc3BvbnNlLmJvZHkubGVuZ3RoID4gMCkge1xuICAgIHRyeSB7XG4gICAgICB2YXIgZSA9IEpTT04ucGFyc2UoaHR0cFJlc3BvbnNlLmJvZHkudG9TdHJpbmcoKSk7XG5cbiAgICAgIHZhciBjb2RlID0gZS5fX3R5cGUgfHwgZS5jb2RlIHx8IGUuQ29kZTtcbiAgICAgIGlmIChjb2RlKSB7XG4gICAgICAgIGVycm9yLmNvZGUgPSBjb2RlLnNwbGl0KCcjJykucG9wKCk7XG4gICAgICB9XG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ1JlcXVlc3RFbnRpdHlUb29MYXJnZScpIHtcbiAgICAgICAgZXJyb3IubWVzc2FnZSA9ICdSZXF1ZXN0IGJvZHkgbXVzdCBiZSBsZXNzIHRoYW4gMSBNQic7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlcnJvci5tZXNzYWdlID0gKGUubWVzc2FnZSB8fCBlLk1lc3NhZ2UgfHwgbnVsbCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBtaW5pbWl6ZWQgbW9kZWxzIGRvIG5vdCBoYXZlIGVycm9yIHNoYXBlcywgc29cbiAgICAgIC8vIHdpdGhvdXQgZXhwYW5kaW5nIHRoZSBtb2RlbCBzaXplLCBpdCdzIG5vdCBwb3NzaWJsZVxuICAgICAgLy8gdG8gdmFsaWRhdGUgdGhlIHJlc3BvbnNlIHNoYXBlIChtZW1iZXJzKSBvclxuICAgICAgLy8gY2hlY2sgaWYgYW55IGFyZSBzZW5zaXRpdmUgdG8gbG9nZ2luZy5cblxuICAgICAgLy8gQXNzaWduIHRoZSBmaWVsZHMgYXMgbm9uLWVudW1lcmFibGUsIGFsbG93aW5nIHNwZWNpZmljIGFjY2VzcyBvbmx5LlxuICAgICAgZm9yICh2YXIga2V5IGluIGUgfHwge30pIHtcbiAgICAgICAgaWYgKGtleSA9PT0gJ2NvZGUnIHx8IGtleSA9PT0gJ21lc3NhZ2UnKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgZXJyb3JbJ1snICsga2V5ICsgJ10nXSA9ICdTZWUgZXJyb3IuJyArIGtleSArICcgZm9yIGRldGFpbHMuJztcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVycm9yLCBrZXksIHtcbiAgICAgICAgICB2YWx1ZTogZVtrZXldLFxuICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGVycm9yLnN0YXR1c0NvZGUgPSBodHRwUmVzcG9uc2Uuc3RhdHVzQ29kZTtcbiAgICAgIGVycm9yLm1lc3NhZ2UgPSBodHRwUmVzcG9uc2Uuc3RhdHVzTWVzc2FnZTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZXJyb3Iuc3RhdHVzQ29kZSA9IGh0dHBSZXNwb25zZS5zdGF0dXNDb2RlO1xuICAgIGVycm9yLm1lc3NhZ2UgPSBodHRwUmVzcG9uc2Uuc3RhdHVzQ29kZS50b1N0cmluZygpO1xuICB9XG5cbiAgcmVzcC5lcnJvciA9IHV0aWwuZXJyb3IobmV3IEVycm9yKCksIGVycm9yKTtcbn1cblxuZnVuY3Rpb24gZXh0cmFjdERhdGEocmVzcCkge1xuICB2YXIgYm9keSA9IHJlc3AuaHR0cFJlc3BvbnNlLmJvZHkudG9TdHJpbmcoKSB8fCAne30nO1xuICBpZiAocmVzcC5yZXF1ZXN0LnNlcnZpY2UuY29uZmlnLmNvbnZlcnRSZXNwb25zZVR5cGVzID09PSBmYWxzZSkge1xuICAgIHJlc3AuZGF0YSA9IEpTT04ucGFyc2UoYm9keSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG9wZXJhdGlvbiA9IHJlc3AucmVxdWVzdC5zZXJ2aWNlLmFwaS5vcGVyYXRpb25zW3Jlc3AucmVxdWVzdC5vcGVyYXRpb25dO1xuICAgIHZhciBzaGFwZSA9IG9wZXJhdGlvbi5vdXRwdXQgfHwge307XG4gICAgdmFyIHBhcnNlciA9IG5ldyBKc29uUGFyc2VyKCk7XG4gICAgcmVzcC5kYXRhID0gcGFyc2VyLnBhcnNlKGJvZHksIHNoYXBlKTtcbiAgfVxufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYnVpbGRSZXF1ZXN0OiBidWlsZFJlcXVlc3QsXG4gIGV4dHJhY3RFcnJvcjogZXh0cmFjdEVycm9yLFxuICBleHRyYWN0RGF0YTogZXh0cmFjdERhdGFcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/json.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/query.js":
/*!********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/query.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar QueryParamSerializer = __webpack_require__(/*! ../query/query_param_serializer */ \"(rsc)/../../node_modules/aws-sdk/lib/query/query_param_serializer.js\");\nvar Shape = __webpack_require__(/*! ../model/shape */ \"(rsc)/../../node_modules/aws-sdk/lib/model/shape.js\");\nvar populateHostPrefix = (__webpack_require__(/*! ./helpers */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/helpers.js\").populateHostPrefix);\n\nfunction buildRequest(req) {\n  var operation = req.service.api.operations[req.operation];\n  var httpRequest = req.httpRequest;\n  httpRequest.headers['Content-Type'] =\n    'application/x-www-form-urlencoded; charset=utf-8';\n  httpRequest.params = {\n    Version: req.service.api.apiVersion,\n    Action: operation.name\n  };\n\n  // convert the request parameters into a list of query params,\n  // e.g. Deeply.NestedParam.0.Name=value\n  var builder = new QueryParamSerializer();\n  builder.serialize(req.params, operation.input, function(name, value) {\n    httpRequest.params[name] = value;\n  });\n  httpRequest.body = util.queryParamsToString(httpRequest.params);\n\n  populateHostPrefix(req);\n}\n\nfunction extractError(resp) {\n  var data, body = resp.httpResponse.body.toString();\n  if (body.match('<UnknownOperationException')) {\n    data = {\n      Code: 'UnknownOperation',\n      Message: 'Unknown operation ' + resp.request.operation\n    };\n  } else {\n    try {\n      data = new AWS.XML.Parser().parse(body);\n    } catch (e) {\n      data = {\n        Code: resp.httpResponse.statusCode,\n        Message: resp.httpResponse.statusMessage\n      };\n    }\n  }\n\n  if (data.requestId && !resp.requestId) resp.requestId = data.requestId;\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var shape = operation.output || {};\n  var origRules = shape;\n\n  if (origRules.resultWrapper) {\n    var tmp = Shape.create({type: 'structure'});\n    tmp.members[origRules.resultWrapper] = shape;\n    tmp.memberNames = [origRules.resultWrapper];\n    util.property(shape, 'name', shape.resultWrapper);\n    shape = tmp;\n  }\n\n  var parser = new AWS.XML.Parser();\n\n  // TODO: Refactor XML Parser to parse RequestId from response.\n  if (shape && shape.members && !shape.members._XAMZRequestId) {\n    var requestIdShape = Shape.create(\n      { type: 'string' },\n      { api: { protocol: 'query' } },\n      'requestId'\n    );\n    shape.members._XAMZRequestId = requestIdShape;\n  }\n\n  var data = parser.parse(resp.httpResponse.body.toString(), shape);\n  resp.requestId = data._XAMZRequestId || data.requestId;\n\n  if (data._XAMZRequestId) delete data._XAMZRequestId;\n\n  if (origRules.resultWrapper) {\n    if (data[origRules.resultWrapper]) {\n      util.update(data, data[origRules.resultWrapper]);\n      delete data[origRules.resultWrapper];\n    }\n  }\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3F1ZXJ5LmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUztBQUMzQixXQUFXLG1CQUFPLENBQUMsNkRBQVM7QUFDNUIsMkJBQTJCLG1CQUFPLENBQUMsNkdBQWlDO0FBQ3BFLFlBQVksbUJBQU8sQ0FBQywyRUFBZ0I7QUFDcEMseUJBQXlCLHFIQUF1Qzs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0JBQWdCO0FBQ3hCLFFBQVEsT0FBTyxxQkFBcUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3F1ZXJ5LmpzP2E4OTUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIFF1ZXJ5UGFyYW1TZXJpYWxpemVyID0gcmVxdWlyZSgnLi4vcXVlcnkvcXVlcnlfcGFyYW1fc2VyaWFsaXplcicpO1xudmFyIFNoYXBlID0gcmVxdWlyZSgnLi4vbW9kZWwvc2hhcGUnKTtcbnZhciBwb3B1bGF0ZUhvc3RQcmVmaXggPSByZXF1aXJlKCcuL2hlbHBlcnMnKS5wb3B1bGF0ZUhvc3RQcmVmaXg7XG5cbmZ1bmN0aW9uIGJ1aWxkUmVxdWVzdChyZXEpIHtcbiAgdmFyIG9wZXJhdGlvbiA9IHJlcS5zZXJ2aWNlLmFwaS5vcGVyYXRpb25zW3JlcS5vcGVyYXRpb25dO1xuICB2YXIgaHR0cFJlcXVlc3QgPSByZXEuaHR0cFJlcXVlc3Q7XG4gIGh0dHBSZXF1ZXN0LmhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID1cbiAgICAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PXV0Zi04JztcbiAgaHR0cFJlcXVlc3QucGFyYW1zID0ge1xuICAgIFZlcnNpb246IHJlcS5zZXJ2aWNlLmFwaS5hcGlWZXJzaW9uLFxuICAgIEFjdGlvbjogb3BlcmF0aW9uLm5hbWVcbiAgfTtcblxuICAvLyBjb252ZXJ0IHRoZSByZXF1ZXN0IHBhcmFtZXRlcnMgaW50byBhIGxpc3Qgb2YgcXVlcnkgcGFyYW1zLFxuICAvLyBlLmcuIERlZXBseS5OZXN0ZWRQYXJhbS4wLk5hbWU9dmFsdWVcbiAgdmFyIGJ1aWxkZXIgPSBuZXcgUXVlcnlQYXJhbVNlcmlhbGl6ZXIoKTtcbiAgYnVpbGRlci5zZXJpYWxpemUocmVxLnBhcmFtcywgb3BlcmF0aW9uLmlucHV0LCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGh0dHBSZXF1ZXN0LnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICB9KTtcbiAgaHR0cFJlcXVlc3QuYm9keSA9IHV0aWwucXVlcnlQYXJhbXNUb1N0cmluZyhodHRwUmVxdWVzdC5wYXJhbXMpO1xuXG4gIHBvcHVsYXRlSG9zdFByZWZpeChyZXEpO1xufVxuXG5mdW5jdGlvbiBleHRyYWN0RXJyb3IocmVzcCkge1xuICB2YXIgZGF0YSwgYm9keSA9IHJlc3AuaHR0cFJlc3BvbnNlLmJvZHkudG9TdHJpbmcoKTtcbiAgaWYgKGJvZHkubWF0Y2goJzxVbmtub3duT3BlcmF0aW9uRXhjZXB0aW9uJykpIHtcbiAgICBkYXRhID0ge1xuICAgICAgQ29kZTogJ1Vua25vd25PcGVyYXRpb24nLFxuICAgICAgTWVzc2FnZTogJ1Vua25vd24gb3BlcmF0aW9uICcgKyByZXNwLnJlcXVlc3Qub3BlcmF0aW9uXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0cnkge1xuICAgICAgZGF0YSA9IG5ldyBBV1MuWE1MLlBhcnNlcigpLnBhcnNlKGJvZHkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGRhdGEgPSB7XG4gICAgICAgIENvZGU6IHJlc3AuaHR0cFJlc3BvbnNlLnN0YXR1c0NvZGUsXG4gICAgICAgIE1lc3NhZ2U6IHJlc3AuaHR0cFJlc3BvbnNlLnN0YXR1c01lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgaWYgKGRhdGEucmVxdWVzdElkICYmICFyZXNwLnJlcXVlc3RJZCkgcmVzcC5yZXF1ZXN0SWQgPSBkYXRhLnJlcXVlc3RJZDtcbiAgaWYgKGRhdGEuRXJyb3JzKSBkYXRhID0gZGF0YS5FcnJvcnM7XG4gIGlmIChkYXRhLkVycm9yKSBkYXRhID0gZGF0YS5FcnJvcjtcbiAgaWYgKGRhdGEuQ29kZSkge1xuICAgIHJlc3AuZXJyb3IgPSB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICBjb2RlOiBkYXRhLkNvZGUsXG4gICAgICBtZXNzYWdlOiBkYXRhLk1lc3NhZ2VcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXNwLmVycm9yID0gdXRpbC5lcnJvcihuZXcgRXJyb3IoKSwge1xuICAgICAgY29kZTogcmVzcC5odHRwUmVzcG9uc2Uuc3RhdHVzQ29kZSxcbiAgICAgIG1lc3NhZ2U6IG51bGxcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBleHRyYWN0RGF0YShyZXNwKSB7XG4gIHZhciByZXEgPSByZXNwLnJlcXVlc3Q7XG4gIHZhciBvcGVyYXRpb24gPSByZXEuc2VydmljZS5hcGkub3BlcmF0aW9uc1tyZXEub3BlcmF0aW9uXTtcbiAgdmFyIHNoYXBlID0gb3BlcmF0aW9uLm91dHB1dCB8fCB7fTtcbiAgdmFyIG9yaWdSdWxlcyA9IHNoYXBlO1xuXG4gIGlmIChvcmlnUnVsZXMucmVzdWx0V3JhcHBlcikge1xuICAgIHZhciB0bXAgPSBTaGFwZS5jcmVhdGUoe3R5cGU6ICdzdHJ1Y3R1cmUnfSk7XG4gICAgdG1wLm1lbWJlcnNbb3JpZ1J1bGVzLnJlc3VsdFdyYXBwZXJdID0gc2hhcGU7XG4gICAgdG1wLm1lbWJlck5hbWVzID0gW29yaWdSdWxlcy5yZXN1bHRXcmFwcGVyXTtcbiAgICB1dGlsLnByb3BlcnR5KHNoYXBlLCAnbmFtZScsIHNoYXBlLnJlc3VsdFdyYXBwZXIpO1xuICAgIHNoYXBlID0gdG1wO1xuICB9XG5cbiAgdmFyIHBhcnNlciA9IG5ldyBBV1MuWE1MLlBhcnNlcigpO1xuXG4gIC8vIFRPRE86IFJlZmFjdG9yIFhNTCBQYXJzZXIgdG8gcGFyc2UgUmVxdWVzdElkIGZyb20gcmVzcG9uc2UuXG4gIGlmIChzaGFwZSAmJiBzaGFwZS5tZW1iZXJzICYmICFzaGFwZS5tZW1iZXJzLl9YQU1aUmVxdWVzdElkKSB7XG4gICAgdmFyIHJlcXVlc3RJZFNoYXBlID0gU2hhcGUuY3JlYXRlKFxuICAgICAgeyB0eXBlOiAnc3RyaW5nJyB9LFxuICAgICAgeyBhcGk6IHsgcHJvdG9jb2w6ICdxdWVyeScgfSB9LFxuICAgICAgJ3JlcXVlc3RJZCdcbiAgICApO1xuICAgIHNoYXBlLm1lbWJlcnMuX1hBTVpSZXF1ZXN0SWQgPSByZXF1ZXN0SWRTaGFwZTtcbiAgfVxuXG4gIHZhciBkYXRhID0gcGFyc2VyLnBhcnNlKHJlc3AuaHR0cFJlc3BvbnNlLmJvZHkudG9TdHJpbmcoKSwgc2hhcGUpO1xuICByZXNwLnJlcXVlc3RJZCA9IGRhdGEuX1hBTVpSZXF1ZXN0SWQgfHwgZGF0YS5yZXF1ZXN0SWQ7XG5cbiAgaWYgKGRhdGEuX1hBTVpSZXF1ZXN0SWQpIGRlbGV0ZSBkYXRhLl9YQU1aUmVxdWVzdElkO1xuXG4gIGlmIChvcmlnUnVsZXMucmVzdWx0V3JhcHBlcikge1xuICAgIGlmIChkYXRhW29yaWdSdWxlcy5yZXN1bHRXcmFwcGVyXSkge1xuICAgICAgdXRpbC51cGRhdGUoZGF0YSwgZGF0YVtvcmlnUnVsZXMucmVzdWx0V3JhcHBlcl0pO1xuICAgICAgZGVsZXRlIGRhdGFbb3JpZ1J1bGVzLnJlc3VsdFdyYXBwZXJdO1xuICAgIH1cbiAgfVxuXG4gIHJlc3AuZGF0YSA9IGRhdGE7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBidWlsZFJlcXVlc3Q6IGJ1aWxkUmVxdWVzdCxcbiAgZXh0cmFjdEVycm9yOiBleHRyYWN0RXJyb3IsXG4gIGV4dHJhY3REYXRhOiBleHRyYWN0RGF0YVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/query.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js":
/*!*******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/rest.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar populateHostPrefix = (__webpack_require__(/*! ./helpers */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/helpers.js\").populateHostPrefix);\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function(_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function(val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function(key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function(val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ?\n          util.base64.decode(headers[header]) :\n          headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3Jlc3QuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLDZEQUFTO0FBQzVCLHlCQUF5QixxSEFBdUM7O0FBRWhFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDRCQUE0QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWTtBQUNaO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkJBQTZCO0FBQ25EO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9wcm90b2NvbC9yZXN0LmpzPzczZTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSByZXF1aXJlKCcuLi91dGlsJyk7XG52YXIgcG9wdWxhdGVIb3N0UHJlZml4ID0gcmVxdWlyZSgnLi9oZWxwZXJzJykucG9wdWxhdGVIb3N0UHJlZml4O1xuXG5mdW5jdGlvbiBwb3B1bGF0ZU1ldGhvZChyZXEpIHtcbiAgcmVxLmh0dHBSZXF1ZXN0Lm1ldGhvZCA9IHJlcS5zZXJ2aWNlLmFwaS5vcGVyYXRpb25zW3JlcS5vcGVyYXRpb25dLmh0dHBNZXRob2Q7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVVJJKGVuZHBvaW50UGF0aCwgb3BlcmF0aW9uUGF0aCwgaW5wdXQsIHBhcmFtcykge1xuICB2YXIgdXJpID0gW2VuZHBvaW50UGF0aCwgb3BlcmF0aW9uUGF0aF0uam9pbignLycpO1xuICB1cmkgPSB1cmkucmVwbGFjZSgvXFwvKy9nLCAnLycpO1xuXG4gIHZhciBxdWVyeVN0cmluZyA9IHt9LCBxdWVyeVN0cmluZ1NldCA9IGZhbHNlO1xuICB1dGlsLmVhY2goaW5wdXQubWVtYmVycywgZnVuY3Rpb24gKG5hbWUsIG1lbWJlcikge1xuICAgIHZhciBwYXJhbVZhbHVlID0gcGFyYW1zW25hbWVdO1xuICAgIGlmIChwYXJhbVZhbHVlID09PSBudWxsIHx8IHBhcmFtVmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICAgIGlmIChtZW1iZXIubG9jYXRpb24gPT09ICd1cmknKSB7XG4gICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKCdcXFxceycgKyBtZW1iZXIubmFtZSArICcoXFxcXCspP1xcXFx9Jyk7XG4gICAgICB1cmkgPSB1cmkucmVwbGFjZShyZWdleCwgZnVuY3Rpb24oXywgcGx1cykge1xuICAgICAgICB2YXIgZm4gPSBwbHVzID8gdXRpbC51cmlFc2NhcGVQYXRoIDogdXRpbC51cmlFc2NhcGU7XG4gICAgICAgIHJldHVybiBmbihTdHJpbmcocGFyYW1WYWx1ZSkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChtZW1iZXIubG9jYXRpb24gPT09ICdxdWVyeXN0cmluZycpIHtcbiAgICAgIHF1ZXJ5U3RyaW5nU2V0ID0gdHJ1ZTtcblxuICAgICAgaWYgKG1lbWJlci50eXBlID09PSAnbGlzdCcpIHtcbiAgICAgICAgcXVlcnlTdHJpbmdbbWVtYmVyLm5hbWVdID0gcGFyYW1WYWx1ZS5tYXAoZnVuY3Rpb24odmFsKSB7XG4gICAgICAgICAgcmV0dXJuIHV0aWwudXJpRXNjYXBlKG1lbWJlci5tZW1iZXIudG9XaXJlRm9ybWF0KHZhbCkudG9TdHJpbmcoKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChtZW1iZXIudHlwZSA9PT0gJ21hcCcpIHtcbiAgICAgICAgdXRpbC5lYWNoKHBhcmFtVmFsdWUsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nW2tleV0gPSB2YWx1ZS5tYXAoZnVuY3Rpb24odmFsKSB7XG4gICAgICAgICAgICAgIHJldHVybiB1dGlsLnVyaUVzY2FwZShTdHJpbmcodmFsKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcXVlcnlTdHJpbmdba2V5XSA9IHV0aWwudXJpRXNjYXBlKFN0cmluZyh2YWx1ZSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBxdWVyeVN0cmluZ1ttZW1iZXIubmFtZV0gPSB1dGlsLnVyaUVzY2FwZShtZW1iZXIudG9XaXJlRm9ybWF0KHBhcmFtVmFsdWUpLnRvU3RyaW5nKCkpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHF1ZXJ5U3RyaW5nU2V0KSB7XG4gICAgdXJpICs9ICh1cmkuaW5kZXhPZignPycpID49IDAgPyAnJicgOiAnPycpO1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIHV0aWwuYXJyYXlFYWNoKE9iamVjdC5rZXlzKHF1ZXJ5U3RyaW5nKS5zb3J0KCksIGZ1bmN0aW9uKGtleSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHF1ZXJ5U3RyaW5nW2tleV0pKSB7XG4gICAgICAgIHF1ZXJ5U3RyaW5nW2tleV0gPSBbcXVlcnlTdHJpbmdba2V5XV07XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXJ5U3RyaW5nW2tleV0ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcGFydHMucHVzaCh1dGlsLnVyaUVzY2FwZShTdHJpbmcoa2V5KSkgKyAnPScgKyBxdWVyeVN0cmluZ1trZXldW2ldKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB1cmkgKz0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgcmV0dXJuIHVyaTtcbn1cblxuZnVuY3Rpb24gcG9wdWxhdGVVUkkocmVxKSB7XG4gIHZhciBvcGVyYXRpb24gPSByZXEuc2VydmljZS5hcGkub3BlcmF0aW9uc1tyZXEub3BlcmF0aW9uXTtcbiAgdmFyIGlucHV0ID0gb3BlcmF0aW9uLmlucHV0O1xuXG4gIHZhciB1cmkgPSBnZW5lcmF0ZVVSSShyZXEuaHR0cFJlcXVlc3QuZW5kcG9pbnQucGF0aCwgb3BlcmF0aW9uLmh0dHBQYXRoLCBpbnB1dCwgcmVxLnBhcmFtcyk7XG4gIHJlcS5odHRwUmVxdWVzdC5wYXRoID0gdXJpO1xufVxuXG5mdW5jdGlvbiBwb3B1bGF0ZUhlYWRlcnMocmVxKSB7XG4gIHZhciBvcGVyYXRpb24gPSByZXEuc2VydmljZS5hcGkub3BlcmF0aW9uc1tyZXEub3BlcmF0aW9uXTtcbiAgdXRpbC5lYWNoKG9wZXJhdGlvbi5pbnB1dC5tZW1iZXJzLCBmdW5jdGlvbiAobmFtZSwgbWVtYmVyKSB7XG4gICAgdmFyIHZhbHVlID0gcmVxLnBhcmFtc1tuYW1lXTtcbiAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgaWYgKG1lbWJlci5sb2NhdGlvbiA9PT0gJ2hlYWRlcnMnICYmIG1lbWJlci50eXBlID09PSAnbWFwJykge1xuICAgICAgdXRpbC5lYWNoKHZhbHVlLCBmdW5jdGlvbihrZXksIG1lbWJlclZhbHVlKSB7XG4gICAgICAgIHJlcS5odHRwUmVxdWVzdC5oZWFkZXJzW21lbWJlci5uYW1lICsga2V5XSA9IG1lbWJlclZhbHVlO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChtZW1iZXIubG9jYXRpb24gPT09ICdoZWFkZXInKSB7XG4gICAgICB2YWx1ZSA9IG1lbWJlci50b1dpcmVGb3JtYXQodmFsdWUpLnRvU3RyaW5nKCk7XG4gICAgICBpZiAobWVtYmVyLmlzSnNvblZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdXRpbC5iYXNlNjQuZW5jb2RlKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJlcS5odHRwUmVxdWVzdC5oZWFkZXJzW21lbWJlci5uYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGJ1aWxkUmVxdWVzdChyZXEpIHtcbiAgcG9wdWxhdGVNZXRob2QocmVxKTtcbiAgcG9wdWxhdGVVUkkocmVxKTtcbiAgcG9wdWxhdGVIZWFkZXJzKHJlcSk7XG4gIHBvcHVsYXRlSG9zdFByZWZpeChyZXEpO1xufVxuXG5mdW5jdGlvbiBleHRyYWN0RXJyb3IoKSB7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3REYXRhKHJlc3ApIHtcbiAgdmFyIHJlcSA9IHJlc3AucmVxdWVzdDtcbiAgdmFyIGRhdGEgPSB7fTtcbiAgdmFyIHIgPSByZXNwLmh0dHBSZXNwb25zZTtcbiAgdmFyIG9wZXJhdGlvbiA9IHJlcS5zZXJ2aWNlLmFwaS5vcGVyYXRpb25zW3JlcS5vcGVyYXRpb25dO1xuICB2YXIgb3V0cHV0ID0gb3BlcmF0aW9uLm91dHB1dDtcblxuICAvLyBub3JtYWxpemUgaGVhZGVycyBuYW1lcyB0byBsb3dlci1jYXNlZCBrZXlzIGZvciBtYXRjaGluZ1xuICB2YXIgaGVhZGVycyA9IHt9O1xuICB1dGlsLmVhY2goci5oZWFkZXJzLCBmdW5jdGlvbiAoaywgdikge1xuICAgIGhlYWRlcnNbay50b0xvd2VyQ2FzZSgpXSA9IHY7XG4gIH0pO1xuXG4gIHV0aWwuZWFjaChvdXRwdXQubWVtYmVycywgZnVuY3Rpb24obmFtZSwgbWVtYmVyKSB7XG4gICAgdmFyIGhlYWRlciA9IChtZW1iZXIubmFtZSB8fCBuYW1lKS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChtZW1iZXIubG9jYXRpb24gPT09ICdoZWFkZXJzJyAmJiBtZW1iZXIudHlwZSA9PT0gJ21hcCcpIHtcbiAgICAgIGRhdGFbbmFtZV0gPSB7fTtcbiAgICAgIHZhciBsb2NhdGlvbiA9IG1lbWJlci5pc0xvY2F0aW9uTmFtZSA/IG1lbWJlci5uYW1lIDogJyc7XG4gICAgICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoJ14nICsgbG9jYXRpb24gKyAnKC4rKScsICdpJyk7XG4gICAgICB1dGlsLmVhY2goci5oZWFkZXJzLCBmdW5jdGlvbiAoaywgdikge1xuICAgICAgICB2YXIgcmVzdWx0ID0gay5tYXRjaChwYXR0ZXJuKTtcbiAgICAgICAgaWYgKHJlc3VsdCAhPT0gbnVsbCkge1xuICAgICAgICAgIGRhdGFbbmFtZV1bcmVzdWx0WzFdXSA9IHY7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAobWVtYmVyLmxvY2F0aW9uID09PSAnaGVhZGVyJykge1xuICAgICAgaWYgKGhlYWRlcnNbaGVhZGVyXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG1lbWJlci5pc0pzb25WYWx1ZSA/XG4gICAgICAgICAgdXRpbC5iYXNlNjQuZGVjb2RlKGhlYWRlcnNbaGVhZGVyXSkgOlxuICAgICAgICAgIGhlYWRlcnNbaGVhZGVyXTtcbiAgICAgICAgZGF0YVtuYW1lXSA9IG1lbWJlci50b1R5cGUodmFsdWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobWVtYmVyLmxvY2F0aW9uID09PSAnc3RhdHVzQ29kZScpIHtcbiAgICAgIGRhdGFbbmFtZV0gPSBwYXJzZUludChyLnN0YXR1c0NvZGUsIDEwKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJlc3AuZGF0YSA9IGRhdGE7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBidWlsZFJlcXVlc3Q6IGJ1aWxkUmVxdWVzdCxcbiAgZXh0cmFjdEVycm9yOiBleHRyYWN0RXJyb3IsXG4gIGV4dHJhY3REYXRhOiBleHRyYWN0RGF0YSxcbiAgZ2VuZXJhdGVVUkk6IGdlbmVyYXRlVVJJXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_json.js":
/*!************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/rest_json.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar Rest = __webpack_require__(/*! ./rest */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js\");\nvar Json = __webpack_require__(/*! ./json */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/json.js\");\nvar JsonBuilder = __webpack_require__(/*! ../json/builder */ \"(rsc)/../../node_modules/aws-sdk/lib/json/builder.js\");\nvar JsonParser = __webpack_require__(/*! ../json/parser */ \"(rsc)/../../node_modules/aws-sdk/lib/json/parser.js\");\n\nvar METHODS_WITHOUT_BODY = ['GET', 'HEAD', 'DELETE'];\n\nfunction unsetContentLength(req) {\n  var payloadMember = util.getRequestPayloadShape(req);\n  if (\n    payloadMember === undefined &&\n    METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) >= 0\n  ) {\n    delete req.httpRequest.headers['Content-Length'];\n  }\n}\n\nfunction populateBody(req) {\n  var builder = new JsonBuilder();\n  var input = req.service.api.operations[req.operation].input;\n\n  if (input.payload) {\n    var params = {};\n    var payloadShape = input.members[input.payload];\n    params = req.params[input.payload];\n\n    if (payloadShape.type === 'structure') {\n      req.httpRequest.body = builder.build(params || {}, payloadShape);\n      applyContentTypeHeader(req);\n    } else if (params !== undefined) {\n      // non-JSON payload\n      req.httpRequest.body = params;\n      if (payloadShape.type === 'binary' || payloadShape.isStreaming) {\n        applyContentTypeHeader(req, true);\n      }\n    }\n  } else {\n    req.httpRequest.body = builder.build(req.params, input);\n    applyContentTypeHeader(req);\n  }\n}\n\nfunction applyContentTypeHeader(req, isBinary) {\n  if (!req.httpRequest.headers['Content-Type']) {\n    var type = isBinary ? 'binary/octet-stream' : 'application/json';\n    req.httpRequest.headers['Content-Type'] = type;\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD/DELETE\n  if (METHODS_WITHOUT_BODY.indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Json.extractError(resp);\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var req = resp.request;\n  var operation = req.service.api.operations[req.operation];\n  var rules = req.service.api.operations[req.operation].output || {};\n  var parser;\n  var hasEventOutput = operation.hasEventOutput;\n\n  if (rules.payload) {\n    var payloadMember = rules.members[rules.payload];\n    var body = resp.httpResponse.body;\n    if (payloadMember.isEventStream) {\n      parser = new JsonParser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure' || payloadMember.type === 'list') {\n      var parser = new JsonParser();\n      resp.data[rules.payload] = parser.parse(body, payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[rules.payload] = body;\n    } else {\n      resp.data[rules.payload] = payloadMember.toType(body);\n    }\n  } else {\n    var data = resp.data;\n    Json.extractData(resp);\n    resp.data = util.merge(data, resp.data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  unsetContentLength: unsetContentLength\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3Jlc3RfanNvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsNkRBQVM7QUFDNUIsV0FBVyxtQkFBTyxDQUFDLHFFQUFRO0FBQzNCLFdBQVcsbUJBQU8sQ0FBQyxxRUFBUTtBQUMzQixrQkFBa0IsbUJBQU8sQ0FBQyw2RUFBaUI7QUFDM0MsaUJBQWlCLG1CQUFPLENBQUMsMkVBQWdCOztBQUV6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3Jlc3RfanNvbi5qcz84YjdlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIFJlc3QgPSByZXF1aXJlKCcuL3Jlc3QnKTtcbnZhciBKc29uID0gcmVxdWlyZSgnLi9qc29uJyk7XG52YXIgSnNvbkJ1aWxkZXIgPSByZXF1aXJlKCcuLi9qc29uL2J1aWxkZXInKTtcbnZhciBKc29uUGFyc2VyID0gcmVxdWlyZSgnLi4vanNvbi9wYXJzZXInKTtcblxudmFyIE1FVEhPRFNfV0lUSE9VVF9CT0RZID0gWydHRVQnLCAnSEVBRCcsICdERUxFVEUnXTtcblxuZnVuY3Rpb24gdW5zZXRDb250ZW50TGVuZ3RoKHJlcSkge1xuICB2YXIgcGF5bG9hZE1lbWJlciA9IHV0aWwuZ2V0UmVxdWVzdFBheWxvYWRTaGFwZShyZXEpO1xuICBpZiAoXG4gICAgcGF5bG9hZE1lbWJlciA9PT0gdW5kZWZpbmVkICYmXG4gICAgTUVUSE9EU19XSVRIT1VUX0JPRFkuaW5kZXhPZihyZXEuaHR0cFJlcXVlc3QubWV0aG9kKSA+PSAwXG4gICkge1xuICAgIGRlbGV0ZSByZXEuaHR0cFJlcXVlc3QuaGVhZGVyc1snQ29udGVudC1MZW5ndGgnXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwb3B1bGF0ZUJvZHkocmVxKSB7XG4gIHZhciBidWlsZGVyID0gbmV3IEpzb25CdWlsZGVyKCk7XG4gIHZhciBpbnB1dCA9IHJlcS5zZXJ2aWNlLmFwaS5vcGVyYXRpb25zW3JlcS5vcGVyYXRpb25dLmlucHV0O1xuXG4gIGlmIChpbnB1dC5wYXlsb2FkKSB7XG4gICAgdmFyIHBhcmFtcyA9IHt9O1xuICAgIHZhciBwYXlsb2FkU2hhcGUgPSBpbnB1dC5tZW1iZXJzW2lucHV0LnBheWxvYWRdO1xuICAgIHBhcmFtcyA9IHJlcS5wYXJhbXNbaW5wdXQucGF5bG9hZF07XG5cbiAgICBpZiAocGF5bG9hZFNoYXBlLnR5cGUgPT09ICdzdHJ1Y3R1cmUnKSB7XG4gICAgICByZXEuaHR0cFJlcXVlc3QuYm9keSA9IGJ1aWxkZXIuYnVpbGQocGFyYW1zIHx8IHt9LCBwYXlsb2FkU2hhcGUpO1xuICAgICAgYXBwbHlDb250ZW50VHlwZUhlYWRlcihyZXEpO1xuICAgIH0gZWxzZSBpZiAocGFyYW1zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIG5vbi1KU09OIHBheWxvYWRcbiAgICAgIHJlcS5odHRwUmVxdWVzdC5ib2R5ID0gcGFyYW1zO1xuICAgICAgaWYgKHBheWxvYWRTaGFwZS50eXBlID09PSAnYmluYXJ5JyB8fCBwYXlsb2FkU2hhcGUuaXNTdHJlYW1pbmcpIHtcbiAgICAgICAgYXBwbHlDb250ZW50VHlwZUhlYWRlcihyZXEsIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXEuaHR0cFJlcXVlc3QuYm9keSA9IGJ1aWxkZXIuYnVpbGQocmVxLnBhcmFtcywgaW5wdXQpO1xuICAgIGFwcGx5Q29udGVudFR5cGVIZWFkZXIocmVxKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseUNvbnRlbnRUeXBlSGVhZGVyKHJlcSwgaXNCaW5hcnkpIHtcbiAgaWYgKCFyZXEuaHR0cFJlcXVlc3QuaGVhZGVyc1snQ29udGVudC1UeXBlJ10pIHtcbiAgICB2YXIgdHlwZSA9IGlzQmluYXJ5ID8gJ2JpbmFyeS9vY3RldC1zdHJlYW0nIDogJ2FwcGxpY2F0aW9uL2pzb24nO1xuICAgIHJlcS5odHRwUmVxdWVzdC5oZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHR5cGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gYnVpbGRSZXF1ZXN0KHJlcSkge1xuICBSZXN0LmJ1aWxkUmVxdWVzdChyZXEpO1xuXG4gIC8vIG5ldmVyIHNlbmQgYm9keSBwYXlsb2FkIG9uIEdFVC9IRUFEL0RFTEVURVxuICBpZiAoTUVUSE9EU19XSVRIT1VUX0JPRFkuaW5kZXhPZihyZXEuaHR0cFJlcXVlc3QubWV0aG9kKSA8IDApIHtcbiAgICBwb3B1bGF0ZUJvZHkocmVxKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBleHRyYWN0RXJyb3IocmVzcCkge1xuICBKc29uLmV4dHJhY3RFcnJvcihyZXNwKTtcbn1cblxuZnVuY3Rpb24gZXh0cmFjdERhdGEocmVzcCkge1xuICBSZXN0LmV4dHJhY3REYXRhKHJlc3ApO1xuXG4gIHZhciByZXEgPSByZXNwLnJlcXVlc3Q7XG4gIHZhciBvcGVyYXRpb24gPSByZXEuc2VydmljZS5hcGkub3BlcmF0aW9uc1tyZXEub3BlcmF0aW9uXTtcbiAgdmFyIHJ1bGVzID0gcmVxLnNlcnZpY2UuYXBpLm9wZXJhdGlvbnNbcmVxLm9wZXJhdGlvbl0ub3V0cHV0IHx8IHt9O1xuICB2YXIgcGFyc2VyO1xuICB2YXIgaGFzRXZlbnRPdXRwdXQgPSBvcGVyYXRpb24uaGFzRXZlbnRPdXRwdXQ7XG5cbiAgaWYgKHJ1bGVzLnBheWxvYWQpIHtcbiAgICB2YXIgcGF5bG9hZE1lbWJlciA9IHJ1bGVzLm1lbWJlcnNbcnVsZXMucGF5bG9hZF07XG4gICAgdmFyIGJvZHkgPSByZXNwLmh0dHBSZXNwb25zZS5ib2R5O1xuICAgIGlmIChwYXlsb2FkTWVtYmVyLmlzRXZlbnRTdHJlYW0pIHtcbiAgICAgIHBhcnNlciA9IG5ldyBKc29uUGFyc2VyKCk7XG4gICAgICByZXNwLmRhdGFbcGF5bG9hZF0gPSB1dGlsLmNyZWF0ZUV2ZW50U3RyZWFtKFxuICAgICAgICBBV1MuSHR0cENsaWVudC5zdHJlYW1zQXBpVmVyc2lvbiA9PT0gMiA/IHJlc3AuaHR0cFJlc3BvbnNlLnN0cmVhbSA6IGJvZHksXG4gICAgICAgIHBhcnNlcixcbiAgICAgICAgcGF5bG9hZE1lbWJlclxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHBheWxvYWRNZW1iZXIudHlwZSA9PT0gJ3N0cnVjdHVyZScgfHwgcGF5bG9hZE1lbWJlci50eXBlID09PSAnbGlzdCcpIHtcbiAgICAgIHZhciBwYXJzZXIgPSBuZXcgSnNvblBhcnNlcigpO1xuICAgICAgcmVzcC5kYXRhW3J1bGVzLnBheWxvYWRdID0gcGFyc2VyLnBhcnNlKGJvZHksIHBheWxvYWRNZW1iZXIpO1xuICAgIH0gZWxzZSBpZiAocGF5bG9hZE1lbWJlci50eXBlID09PSAnYmluYXJ5JyB8fCBwYXlsb2FkTWVtYmVyLmlzU3RyZWFtaW5nKSB7XG4gICAgICByZXNwLmRhdGFbcnVsZXMucGF5bG9hZF0gPSBib2R5O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNwLmRhdGFbcnVsZXMucGF5bG9hZF0gPSBwYXlsb2FkTWVtYmVyLnRvVHlwZShib2R5KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRhdGEgPSByZXNwLmRhdGE7XG4gICAgSnNvbi5leHRyYWN0RGF0YShyZXNwKTtcbiAgICByZXNwLmRhdGEgPSB1dGlsLm1lcmdlKGRhdGEsIHJlc3AuZGF0YSk7XG4gIH1cbn1cblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGJ1aWxkUmVxdWVzdDogYnVpbGRSZXF1ZXN0LFxuICBleHRyYWN0RXJyb3I6IGV4dHJhY3RFcnJvcixcbiAgZXh0cmFjdERhdGE6IGV4dHJhY3REYXRhLFxuICB1bnNldENvbnRlbnRMZW5ndGg6IHVuc2V0Q29udGVudExlbmd0aFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_json.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_xml.js":
/*!***********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/protocol/rest_xml.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar Rest = __webpack_require__(/*! ./rest */ \"(rsc)/../../node_modules/aws-sdk/lib/protocol/rest.js\");\n\nfunction populateBody(req) {\n  var input = req.service.api.operations[req.operation].input;\n  var builder = new AWS.XML.Builder();\n  var params = req.params;\n\n  var payload = input.payload;\n  if (payload) {\n    var payloadMember = input.members[payload];\n    params = params[payload];\n    if (params === undefined) return;\n\n    if (payloadMember.type === 'structure') {\n      var rootElement = payloadMember.name;\n      req.httpRequest.body = builder.toXML(params, payloadMember, rootElement, true);\n    } else { // non-xml payload\n      req.httpRequest.body = params;\n    }\n  } else {\n    req.httpRequest.body = builder.toXML(params, input, input.name ||\n      input.shape || util.string.upperFirst(req.operation) + 'Request');\n  }\n}\n\nfunction buildRequest(req) {\n  Rest.buildRequest(req);\n\n  // never send body payload on GET/HEAD\n  if (['GET', 'HEAD'].indexOf(req.httpRequest.method) < 0) {\n    populateBody(req);\n  }\n}\n\nfunction extractError(resp) {\n  Rest.extractError(resp);\n\n  var data;\n  try {\n    data = new AWS.XML.Parser().parse(resp.httpResponse.body.toString());\n  } catch (e) {\n    data = {\n      Code: resp.httpResponse.statusCode,\n      Message: resp.httpResponse.statusMessage\n    };\n  }\n\n  if (data.Errors) data = data.Errors;\n  if (data.Error) data = data.Error;\n  if (data.Code) {\n    resp.error = util.error(new Error(), {\n      code: data.Code,\n      message: data.Message\n    });\n  } else {\n    resp.error = util.error(new Error(), {\n      code: resp.httpResponse.statusCode,\n      message: null\n    });\n  }\n}\n\nfunction extractData(resp) {\n  Rest.extractData(resp);\n\n  var parser;\n  var req = resp.request;\n  var body = resp.httpResponse.body;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  var hasEventOutput = operation.hasEventOutput;\n\n  var payload = output.payload;\n  if (payload) {\n    var payloadMember = output.members[payload];\n    if (payloadMember.isEventStream) {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = util.createEventStream(\n        AWS.HttpClient.streamsApiVersion === 2 ? resp.httpResponse.stream : resp.httpResponse.body,\n        parser,\n        payloadMember\n      );\n    } else if (payloadMember.type === 'structure') {\n      parser = new AWS.XML.Parser();\n      resp.data[payload] = parser.parse(body.toString(), payloadMember);\n    } else if (payloadMember.type === 'binary' || payloadMember.isStreaming) {\n      resp.data[payload] = body;\n    } else {\n      resp.data[payload] = payloadMember.toType(body);\n    }\n  } else if (body.length > 0) {\n    parser = new AWS.XML.Parser();\n    var data = parser.parse(body.toString(), output);\n    util.update(resp.data, data);\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Byb3RvY29sL3Jlc3RfeG1sLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUztBQUMzQixXQUFXLG1CQUFPLENBQUMsNkRBQVM7QUFDNUIsV0FBVyxtQkFBTyxDQUFDLHFFQUFROztBQUUzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sT0FBTztBQUNiO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9wcm90b2NvbC9yZXN0X3htbC5qcz83MTI3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG52YXIgdXRpbCA9IHJlcXVpcmUoJy4uL3V0aWwnKTtcbnZhciBSZXN0ID0gcmVxdWlyZSgnLi9yZXN0Jyk7XG5cbmZ1bmN0aW9uIHBvcHVsYXRlQm9keShyZXEpIHtcbiAgdmFyIGlucHV0ID0gcmVxLnNlcnZpY2UuYXBpLm9wZXJhdGlvbnNbcmVxLm9wZXJhdGlvbl0uaW5wdXQ7XG4gIHZhciBidWlsZGVyID0gbmV3IEFXUy5YTUwuQnVpbGRlcigpO1xuICB2YXIgcGFyYW1zID0gcmVxLnBhcmFtcztcblxuICB2YXIgcGF5bG9hZCA9IGlucHV0LnBheWxvYWQ7XG4gIGlmIChwYXlsb2FkKSB7XG4gICAgdmFyIHBheWxvYWRNZW1iZXIgPSBpbnB1dC5tZW1iZXJzW3BheWxvYWRdO1xuICAgIHBhcmFtcyA9IHBhcmFtc1twYXlsb2FkXTtcbiAgICBpZiAocGFyYW1zID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIGlmIChwYXlsb2FkTWVtYmVyLnR5cGUgPT09ICdzdHJ1Y3R1cmUnKSB7XG4gICAgICB2YXIgcm9vdEVsZW1lbnQgPSBwYXlsb2FkTWVtYmVyLm5hbWU7XG4gICAgICByZXEuaHR0cFJlcXVlc3QuYm9keSA9IGJ1aWxkZXIudG9YTUwocGFyYW1zLCBwYXlsb2FkTWVtYmVyLCByb290RWxlbWVudCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHsgLy8gbm9uLXhtbCBwYXlsb2FkXG4gICAgICByZXEuaHR0cFJlcXVlc3QuYm9keSA9IHBhcmFtcztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmVxLmh0dHBSZXF1ZXN0LmJvZHkgPSBidWlsZGVyLnRvWE1MKHBhcmFtcywgaW5wdXQsIGlucHV0Lm5hbWUgfHxcbiAgICAgIGlucHV0LnNoYXBlIHx8IHV0aWwuc3RyaW5nLnVwcGVyRmlyc3QocmVxLm9wZXJhdGlvbikgKyAnUmVxdWVzdCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGJ1aWxkUmVxdWVzdChyZXEpIHtcbiAgUmVzdC5idWlsZFJlcXVlc3QocmVxKTtcblxuICAvLyBuZXZlciBzZW5kIGJvZHkgcGF5bG9hZCBvbiBHRVQvSEVBRFxuICBpZiAoWydHRVQnLCAnSEVBRCddLmluZGV4T2YocmVxLmh0dHBSZXF1ZXN0Lm1ldGhvZCkgPCAwKSB7XG4gICAgcG9wdWxhdGVCb2R5KHJlcSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZXh0cmFjdEVycm9yKHJlc3ApIHtcbiAgUmVzdC5leHRyYWN0RXJyb3IocmVzcCk7XG5cbiAgdmFyIGRhdGE7XG4gIHRyeSB7XG4gICAgZGF0YSA9IG5ldyBBV1MuWE1MLlBhcnNlcigpLnBhcnNlKHJlc3AuaHR0cFJlc3BvbnNlLmJvZHkudG9TdHJpbmcoKSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBkYXRhID0ge1xuICAgICAgQ29kZTogcmVzcC5odHRwUmVzcG9uc2Uuc3RhdHVzQ29kZSxcbiAgICAgIE1lc3NhZ2U6IHJlc3AuaHR0cFJlc3BvbnNlLnN0YXR1c01lc3NhZ2VcbiAgICB9O1xuICB9XG5cbiAgaWYgKGRhdGEuRXJyb3JzKSBkYXRhID0gZGF0YS5FcnJvcnM7XG4gIGlmIChkYXRhLkVycm9yKSBkYXRhID0gZGF0YS5FcnJvcjtcbiAgaWYgKGRhdGEuQ29kZSkge1xuICAgIHJlc3AuZXJyb3IgPSB1dGlsLmVycm9yKG5ldyBFcnJvcigpLCB7XG4gICAgICBjb2RlOiBkYXRhLkNvZGUsXG4gICAgICBtZXNzYWdlOiBkYXRhLk1lc3NhZ2VcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXNwLmVycm9yID0gdXRpbC5lcnJvcihuZXcgRXJyb3IoKSwge1xuICAgICAgY29kZTogcmVzcC5odHRwUmVzcG9uc2Uuc3RhdHVzQ29kZSxcbiAgICAgIG1lc3NhZ2U6IG51bGxcbiAgICB9KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBleHRyYWN0RGF0YShyZXNwKSB7XG4gIFJlc3QuZXh0cmFjdERhdGEocmVzcCk7XG5cbiAgdmFyIHBhcnNlcjtcbiAgdmFyIHJlcSA9IHJlc3AucmVxdWVzdDtcbiAgdmFyIGJvZHkgPSByZXNwLmh0dHBSZXNwb25zZS5ib2R5O1xuICB2YXIgb3BlcmF0aW9uID0gcmVxLnNlcnZpY2UuYXBpLm9wZXJhdGlvbnNbcmVxLm9wZXJhdGlvbl07XG4gIHZhciBvdXRwdXQgPSBvcGVyYXRpb24ub3V0cHV0O1xuXG4gIHZhciBoYXNFdmVudE91dHB1dCA9IG9wZXJhdGlvbi5oYXNFdmVudE91dHB1dDtcblxuICB2YXIgcGF5bG9hZCA9IG91dHB1dC5wYXlsb2FkO1xuICBpZiAocGF5bG9hZCkge1xuICAgIHZhciBwYXlsb2FkTWVtYmVyID0gb3V0cHV0Lm1lbWJlcnNbcGF5bG9hZF07XG4gICAgaWYgKHBheWxvYWRNZW1iZXIuaXNFdmVudFN0cmVhbSkge1xuICAgICAgcGFyc2VyID0gbmV3IEFXUy5YTUwuUGFyc2VyKCk7XG4gICAgICByZXNwLmRhdGFbcGF5bG9hZF0gPSB1dGlsLmNyZWF0ZUV2ZW50U3RyZWFtKFxuICAgICAgICBBV1MuSHR0cENsaWVudC5zdHJlYW1zQXBpVmVyc2lvbiA9PT0gMiA/IHJlc3AuaHR0cFJlc3BvbnNlLnN0cmVhbSA6IHJlc3AuaHR0cFJlc3BvbnNlLmJvZHksXG4gICAgICAgIHBhcnNlcixcbiAgICAgICAgcGF5bG9hZE1lbWJlclxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHBheWxvYWRNZW1iZXIudHlwZSA9PT0gJ3N0cnVjdHVyZScpIHtcbiAgICAgIHBhcnNlciA9IG5ldyBBV1MuWE1MLlBhcnNlcigpO1xuICAgICAgcmVzcC5kYXRhW3BheWxvYWRdID0gcGFyc2VyLnBhcnNlKGJvZHkudG9TdHJpbmcoKSwgcGF5bG9hZE1lbWJlcik7XG4gICAgfSBlbHNlIGlmIChwYXlsb2FkTWVtYmVyLnR5cGUgPT09ICdiaW5hcnknIHx8IHBheWxvYWRNZW1iZXIuaXNTdHJlYW1pbmcpIHtcbiAgICAgIHJlc3AuZGF0YVtwYXlsb2FkXSA9IGJvZHk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3AuZGF0YVtwYXlsb2FkXSA9IHBheWxvYWRNZW1iZXIudG9UeXBlKGJvZHkpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChib2R5Lmxlbmd0aCA+IDApIHtcbiAgICBwYXJzZXIgPSBuZXcgQVdTLlhNTC5QYXJzZXIoKTtcbiAgICB2YXIgZGF0YSA9IHBhcnNlci5wYXJzZShib2R5LnRvU3RyaW5nKCksIG91dHB1dCk7XG4gICAgdXRpbC51cGRhdGUocmVzcC5kYXRhLCBkYXRhKTtcbiAgfVxufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYnVpbGRSZXF1ZXN0OiBidWlsZFJlcXVlc3QsXG4gIGV4dHJhY3RFcnJvcjogZXh0cmFjdEVycm9yLFxuICBleHRyYWN0RGF0YTogZXh0cmFjdERhdGFcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/protocol/rest_xml.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/publisher/configuration.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/publisher/configuration.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Resolve client-side monitoring configuration from either environmental variables\n * or shared config file. Configurations from environmental variables have higher priority\n * than those from shared config file. The resolver will try to read the shared config file\n * no matter whether the AWS_SDK_LOAD_CONFIG variable is set.\n * @api private\n */\nfunction resolveMonitoringConfig() {\n  var config = {\n    port: undefined,\n    clientId: undefined,\n    enabled: undefined,\n    host: undefined\n  };\n  if (fromEnvironment(config) || fromConfigFile(config)) return toJSType(config);\n  return toJSType(config);\n}\n\n/**\n * Resolve configurations from environmental variables.\n * @param {object} client side monitoring config object needs to be resolved\n * @returns {boolean} whether resolving configurations is done\n * @api private\n */\nfunction fromEnvironment(config) {\n  config.port = config.port || process.env.AWS_CSM_PORT;\n  config.enabled = config.enabled || process.env.AWS_CSM_ENABLED;\n  config.clientId = config.clientId || process.env.AWS_CSM_CLIENT_ID;\n  config.host = config.host || process.env.AWS_CSM_HOST;\n  return config.port && config.enabled && config.clientId && config.host ||\n    ['false', '0'].indexOf(config.enabled) >= 0; //no need to read shared config file if explicitely disabled\n}\n\n/**\n * Resolve cofigurations from shared config file with specified role name\n * @param {object} client side monitoring config object needs to be resolved\n * @returns {boolean} whether resolving configurations is done\n * @api private\n */\nfunction fromConfigFile(config) {\n  var sharedFileConfig;\n  try {\n    var configFile = AWS.util.iniLoader.loadFrom({\n      isConfig: true,\n      filename: process.env[AWS.util.sharedConfigFileEnv]\n    });\n    var sharedFileConfig = configFile[\n      process.env.AWS_PROFILE || AWS.util.defaultProfile\n    ];\n  } catch (err) {\n    return false;\n  }\n  if (!sharedFileConfig) return config;\n  config.port = config.port || sharedFileConfig.csm_port;\n  config.enabled = config.enabled || sharedFileConfig.csm_enabled;\n  config.clientId = config.clientId || sharedFileConfig.csm_client_id;\n  config.host = config.host || sharedFileConfig.csm_host;\n  return config.port && config.enabled && config.clientId && config.host;\n}\n\n/**\n * Transfer the resolved configuration value to proper types: port as number, enabled\n * as boolean and clientId as string. The 'enabled' flag is valued to false when set\n * to 'false' or '0'.\n * @param {object} resolved client side monitoring config\n * @api private\n */\nfunction toJSType(config) {\n    //config.XXX is either undefined or string\n  var falsyNotations = ['false', '0', undefined];\n  if (!config.enabled || falsyNotations.indexOf(config.enabled.toLowerCase()) >= 0) {\n    config.enabled = false;\n  } else {\n    config.enabled = true;\n  }\n  config.port = config.port ? parseInt(config.port, 10) : undefined;\n  return config;\n}\n\nmodule.exports = resolveMonitoringConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3B1Ymxpc2hlci9jb25maWd1cmF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3B1Ymxpc2hlci9jb25maWd1cmF0aW9uLmpzPzBiMDIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxuLyoqXG4gKiBSZXNvbHZlIGNsaWVudC1zaWRlIG1vbml0b3JpbmcgY29uZmlndXJhdGlvbiBmcm9tIGVpdGhlciBlbnZpcm9ubWVudGFsIHZhcmlhYmxlc1xuICogb3Igc2hhcmVkIGNvbmZpZyBmaWxlLiBDb25maWd1cmF0aW9ucyBmcm9tIGVudmlyb25tZW50YWwgdmFyaWFibGVzIGhhdmUgaGlnaGVyIHByaW9yaXR5XG4gKiB0aGFuIHRob3NlIGZyb20gc2hhcmVkIGNvbmZpZyBmaWxlLiBUaGUgcmVzb2x2ZXIgd2lsbCB0cnkgdG8gcmVhZCB0aGUgc2hhcmVkIGNvbmZpZyBmaWxlXG4gKiBubyBtYXR0ZXIgd2hldGhlciB0aGUgQVdTX1NES19MT0FEX0NPTkZJRyB2YXJpYWJsZSBpcyBzZXQuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZU1vbml0b3JpbmdDb25maWcoKSB7XG4gIHZhciBjb25maWcgPSB7XG4gICAgcG9ydDogdW5kZWZpbmVkLFxuICAgIGNsaWVudElkOiB1bmRlZmluZWQsXG4gICAgZW5hYmxlZDogdW5kZWZpbmVkLFxuICAgIGhvc3Q6IHVuZGVmaW5lZFxuICB9O1xuICBpZiAoZnJvbUVudmlyb25tZW50KGNvbmZpZykgfHwgZnJvbUNvbmZpZ0ZpbGUoY29uZmlnKSkgcmV0dXJuIHRvSlNUeXBlKGNvbmZpZyk7XG4gIHJldHVybiB0b0pTVHlwZShjb25maWcpO1xufVxuXG4vKipcbiAqIFJlc29sdmUgY29uZmlndXJhdGlvbnMgZnJvbSBlbnZpcm9ubWVudGFsIHZhcmlhYmxlcy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBjbGllbnQgc2lkZSBtb25pdG9yaW5nIGNvbmZpZyBvYmplY3QgbmVlZHMgdG8gYmUgcmVzb2x2ZWRcbiAqIEByZXR1cm5zIHtib29sZWFufSB3aGV0aGVyIHJlc29sdmluZyBjb25maWd1cmF0aW9ucyBpcyBkb25lXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZnJvbUVudmlyb25tZW50KGNvbmZpZykge1xuICBjb25maWcucG9ydCA9IGNvbmZpZy5wb3J0IHx8IHByb2Nlc3MuZW52LkFXU19DU01fUE9SVDtcbiAgY29uZmlnLmVuYWJsZWQgPSBjb25maWcuZW5hYmxlZCB8fCBwcm9jZXNzLmVudi5BV1NfQ1NNX0VOQUJMRUQ7XG4gIGNvbmZpZy5jbGllbnRJZCA9IGNvbmZpZy5jbGllbnRJZCB8fCBwcm9jZXNzLmVudi5BV1NfQ1NNX0NMSUVOVF9JRDtcbiAgY29uZmlnLmhvc3QgPSBjb25maWcuaG9zdCB8fCBwcm9jZXNzLmVudi5BV1NfQ1NNX0hPU1Q7XG4gIHJldHVybiBjb25maWcucG9ydCAmJiBjb25maWcuZW5hYmxlZCAmJiBjb25maWcuY2xpZW50SWQgJiYgY29uZmlnLmhvc3QgfHxcbiAgICBbJ2ZhbHNlJywgJzAnXS5pbmRleE9mKGNvbmZpZy5lbmFibGVkKSA+PSAwOyAvL25vIG5lZWQgdG8gcmVhZCBzaGFyZWQgY29uZmlnIGZpbGUgaWYgZXhwbGljaXRlbHkgZGlzYWJsZWRcbn1cblxuLyoqXG4gKiBSZXNvbHZlIGNvZmlndXJhdGlvbnMgZnJvbSBzaGFyZWQgY29uZmlnIGZpbGUgd2l0aCBzcGVjaWZpZWQgcm9sZSBuYW1lXG4gKiBAcGFyYW0ge29iamVjdH0gY2xpZW50IHNpZGUgbW9uaXRvcmluZyBjb25maWcgb2JqZWN0IG5lZWRzIHRvIGJlIHJlc29sdmVkXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gd2hldGhlciByZXNvbHZpbmcgY29uZmlndXJhdGlvbnMgaXMgZG9uZVxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGZyb21Db25maWdGaWxlKGNvbmZpZykge1xuICB2YXIgc2hhcmVkRmlsZUNvbmZpZztcbiAgdHJ5IHtcbiAgICB2YXIgY29uZmlnRmlsZSA9IEFXUy51dGlsLmluaUxvYWRlci5sb2FkRnJvbSh7XG4gICAgICBpc0NvbmZpZzogdHJ1ZSxcbiAgICAgIGZpbGVuYW1lOiBwcm9jZXNzLmVudltBV1MudXRpbC5zaGFyZWRDb25maWdGaWxlRW52XVxuICAgIH0pO1xuICAgIHZhciBzaGFyZWRGaWxlQ29uZmlnID0gY29uZmlnRmlsZVtcbiAgICAgIHByb2Nlc3MuZW52LkFXU19QUk9GSUxFIHx8IEFXUy51dGlsLmRlZmF1bHRQcm9maWxlXG4gICAgXTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICghc2hhcmVkRmlsZUNvbmZpZykgcmV0dXJuIGNvbmZpZztcbiAgY29uZmlnLnBvcnQgPSBjb25maWcucG9ydCB8fCBzaGFyZWRGaWxlQ29uZmlnLmNzbV9wb3J0O1xuICBjb25maWcuZW5hYmxlZCA9IGNvbmZpZy5lbmFibGVkIHx8IHNoYXJlZEZpbGVDb25maWcuY3NtX2VuYWJsZWQ7XG4gIGNvbmZpZy5jbGllbnRJZCA9IGNvbmZpZy5jbGllbnRJZCB8fCBzaGFyZWRGaWxlQ29uZmlnLmNzbV9jbGllbnRfaWQ7XG4gIGNvbmZpZy5ob3N0ID0gY29uZmlnLmhvc3QgfHwgc2hhcmVkRmlsZUNvbmZpZy5jc21faG9zdDtcbiAgcmV0dXJuIGNvbmZpZy5wb3J0ICYmIGNvbmZpZy5lbmFibGVkICYmIGNvbmZpZy5jbGllbnRJZCAmJiBjb25maWcuaG9zdDtcbn1cblxuLyoqXG4gKiBUcmFuc2ZlciB0aGUgcmVzb2x2ZWQgY29uZmlndXJhdGlvbiB2YWx1ZSB0byBwcm9wZXIgdHlwZXM6IHBvcnQgYXMgbnVtYmVyLCBlbmFibGVkXG4gKiBhcyBib29sZWFuIGFuZCBjbGllbnRJZCBhcyBzdHJpbmcuIFRoZSAnZW5hYmxlZCcgZmxhZyBpcyB2YWx1ZWQgdG8gZmFsc2Ugd2hlbiBzZXRcbiAqIHRvICdmYWxzZScgb3IgJzAnLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc29sdmVkIGNsaWVudCBzaWRlIG1vbml0b3JpbmcgY29uZmlnXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gdG9KU1R5cGUoY29uZmlnKSB7XG4gICAgLy9jb25maWcuWFhYIGlzIGVpdGhlciB1bmRlZmluZWQgb3Igc3RyaW5nXG4gIHZhciBmYWxzeU5vdGF0aW9ucyA9IFsnZmFsc2UnLCAnMCcsIHVuZGVmaW5lZF07XG4gIGlmICghY29uZmlnLmVuYWJsZWQgfHwgZmFsc3lOb3RhdGlvbnMuaW5kZXhPZihjb25maWcuZW5hYmxlZC50b0xvd2VyQ2FzZSgpKSA+PSAwKSB7XG4gICAgY29uZmlnLmVuYWJsZWQgPSBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcuZW5hYmxlZCA9IHRydWU7XG4gIH1cbiAgY29uZmlnLnBvcnQgPSBjb25maWcucG9ydCA/IHBhcnNlSW50KGNvbmZpZy5wb3J0LCAxMCkgOiB1bmRlZmluZWQ7XG4gIHJldHVybiBjb25maWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVzb2x2ZU1vbml0b3JpbmdDb25maWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/publisher/configuration.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/publisher/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/publisher/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = (__webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\").util);\nvar dgram = __webpack_require__(/*! dgram */ \"dgram\");\nvar stringToBuffer = util.buffer.toBuffer;\n\nvar MAX_MESSAGE_SIZE = 1024 * 8; // 8 KB\n\n/**\n * Publishes metrics via udp.\n * @param {object} options Paramters for Publisher constructor\n * @param {number} [options.port = 31000] Port number\n * @param {string} [options.clientId = ''] Client Identifier\n * @param {boolean} [options.enabled = false] enable sending metrics datagram\n * @api private\n */\nfunction Publisher(options) {\n    // handle configuration\n    options = options || {};\n    this.enabled = options.enabled || false;\n    this.port = options.port || 31000;\n    this.clientId = options.clientId || '';\n    this.address = options.host || '127.0.0.1';\n    if (this.clientId.length > 255) {\n        // ClientId has a max length of 255\n        this.clientId = this.clientId.substr(0, 255);\n    }\n    this.messagesInFlight = 0;\n}\n\nPublisher.prototype.fieldsToTrim = {\n    UserAgent: 256,\n    SdkException: 128,\n    SdkExceptionMessage: 512,\n    AwsException: 128,\n    AwsExceptionMessage: 512,\n    FinalSdkException: 128,\n    FinalSdkExceptionMessage: 512,\n    FinalAwsException: 128,\n    FinalAwsExceptionMessage: 512\n\n};\n\n/**\n * Trims fields that have a specified max length.\n * @param {object} event ApiCall or ApiCallAttempt event.\n * @returns {object}\n * @api private\n */\nPublisher.prototype.trimFields = function(event) {\n    var trimmableFields = Object.keys(this.fieldsToTrim);\n    for (var i = 0, iLen = trimmableFields.length; i < iLen; i++) {\n        var field = trimmableFields[i];\n        if (event.hasOwnProperty(field)) {\n            var maxLength = this.fieldsToTrim[field];\n            var value = event[field];\n            if (value && value.length > maxLength) {\n                event[field] = value.substr(0, maxLength);\n            }\n        }\n    }\n    return event;\n};\n\n/**\n * Handles ApiCall and ApiCallAttempt events.\n * @param {Object} event apiCall or apiCallAttempt event.\n * @api private\n */\nPublisher.prototype.eventHandler = function(event) {\n    // set the clientId\n    event.ClientId = this.clientId;\n\n    this.trimFields(event);\n\n    var message = stringToBuffer(JSON.stringify(event));\n    if (!this.enabled || message.length > MAX_MESSAGE_SIZE) {\n        // drop the message if publisher not enabled or it is too large\n        return;\n    }\n\n    this.publishDatagram(message);\n};\n\n/**\n * Publishes message to an agent.\n * @param {Buffer} message JSON message to send to agent.\n * @api private\n */\nPublisher.prototype.publishDatagram = function(message) {\n    var self = this;\n    var client = this.getClient();\n\n    this.messagesInFlight++;\n    this.client.send(message, 0, message.length, this.port, this.address, function(err, bytes) {\n        if (--self.messagesInFlight <= 0) {\n            // destroy existing client so the event loop isn't kept open\n            self.destroyClient();\n        }\n    });\n};\n\n/**\n * Returns an existing udp socket, or creates one if it doesn't already exist.\n * @api private\n */\nPublisher.prototype.getClient = function() {\n    if (!this.client) {\n        this.client = dgram.createSocket('udp4');\n    }\n    return this.client;\n};\n\n/**\n * Destroys the udp socket.\n * @api private\n */\nPublisher.prototype.destroyClient = function() {\n    if (this.client) {\n        this.client.close();\n        this.client = void 0;\n    }\n};\n\nmodule.exports = {\n    Publisher: Publisher\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3B1Ymxpc2hlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLHlGQUF1QjtBQUNsQyxZQUFZLG1CQUFPLENBQUMsb0JBQU87QUFDM0I7O0FBRUEsaUNBQWlDOztBQUVqQztBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxVQUFVO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9wdWJsaXNoZXIvaW5kZXguanM/YjIwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXRpbCA9IHJlcXVpcmUoJy4uL2NvcmUnKS51dGlsO1xudmFyIGRncmFtID0gcmVxdWlyZSgnZGdyYW0nKTtcbnZhciBzdHJpbmdUb0J1ZmZlciA9IHV0aWwuYnVmZmVyLnRvQnVmZmVyO1xuXG52YXIgTUFYX01FU1NBR0VfU0laRSA9IDEwMjQgKiA4OyAvLyA4IEtCXG5cbi8qKlxuICogUHVibGlzaGVzIG1ldHJpY3MgdmlhIHVkcC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIFBhcmFtdGVycyBmb3IgUHVibGlzaGVyIGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMucG9ydCA9IDMxMDAwXSBQb3J0IG51bWJlclxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmNsaWVudElkID0gJyddIENsaWVudCBJZGVudGlmaWVyXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmVuYWJsZWQgPSBmYWxzZV0gZW5hYmxlIHNlbmRpbmcgbWV0cmljcyBkYXRhZ3JhbVxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFB1Ymxpc2hlcihvcHRpb25zKSB7XG4gICAgLy8gaGFuZGxlIGNvbmZpZ3VyYXRpb25cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB0aGlzLmVuYWJsZWQgPSBvcHRpb25zLmVuYWJsZWQgfHwgZmFsc2U7XG4gICAgdGhpcy5wb3J0ID0gb3B0aW9ucy5wb3J0IHx8IDMxMDAwO1xuICAgIHRoaXMuY2xpZW50SWQgPSBvcHRpb25zLmNsaWVudElkIHx8ICcnO1xuICAgIHRoaXMuYWRkcmVzcyA9IG9wdGlvbnMuaG9zdCB8fCAnMTI3LjAuMC4xJztcbiAgICBpZiAodGhpcy5jbGllbnRJZC5sZW5ndGggPiAyNTUpIHtcbiAgICAgICAgLy8gQ2xpZW50SWQgaGFzIGEgbWF4IGxlbmd0aCBvZiAyNTVcbiAgICAgICAgdGhpcy5jbGllbnRJZCA9IHRoaXMuY2xpZW50SWQuc3Vic3RyKDAsIDI1NSk7XG4gICAgfVxuICAgIHRoaXMubWVzc2FnZXNJbkZsaWdodCA9IDA7XG59XG5cblB1Ymxpc2hlci5wcm90b3R5cGUuZmllbGRzVG9UcmltID0ge1xuICAgIFVzZXJBZ2VudDogMjU2LFxuICAgIFNka0V4Y2VwdGlvbjogMTI4LFxuICAgIFNka0V4Y2VwdGlvbk1lc3NhZ2U6IDUxMixcbiAgICBBd3NFeGNlcHRpb246IDEyOCxcbiAgICBBd3NFeGNlcHRpb25NZXNzYWdlOiA1MTIsXG4gICAgRmluYWxTZGtFeGNlcHRpb246IDEyOCxcbiAgICBGaW5hbFNka0V4Y2VwdGlvbk1lc3NhZ2U6IDUxMixcbiAgICBGaW5hbEF3c0V4Y2VwdGlvbjogMTI4LFxuICAgIEZpbmFsQXdzRXhjZXB0aW9uTWVzc2FnZTogNTEyXG5cbn07XG5cbi8qKlxuICogVHJpbXMgZmllbGRzIHRoYXQgaGF2ZSBhIHNwZWNpZmllZCBtYXggbGVuZ3RoLlxuICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IEFwaUNhbGwgb3IgQXBpQ2FsbEF0dGVtcHQgZXZlbnQuXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblB1Ymxpc2hlci5wcm90b3R5cGUudHJpbUZpZWxkcyA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgdmFyIHRyaW1tYWJsZUZpZWxkcyA9IE9iamVjdC5rZXlzKHRoaXMuZmllbGRzVG9UcmltKTtcbiAgICBmb3IgKHZhciBpID0gMCwgaUxlbiA9IHRyaW1tYWJsZUZpZWxkcy5sZW5ndGg7IGkgPCBpTGVuOyBpKyspIHtcbiAgICAgICAgdmFyIGZpZWxkID0gdHJpbW1hYmxlRmllbGRzW2ldO1xuICAgICAgICBpZiAoZXZlbnQuaGFzT3duUHJvcGVydHkoZmllbGQpKSB7XG4gICAgICAgICAgICB2YXIgbWF4TGVuZ3RoID0gdGhpcy5maWVsZHNUb1RyaW1bZmllbGRdO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gZXZlbnRbZmllbGRdO1xuICAgICAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlLmxlbmd0aCA+IG1heExlbmd0aCkge1xuICAgICAgICAgICAgICAgIGV2ZW50W2ZpZWxkXSA9IHZhbHVlLnN1YnN0cigwLCBtYXhMZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBldmVudDtcbn07XG5cbi8qKlxuICogSGFuZGxlcyBBcGlDYWxsIGFuZCBBcGlDYWxsQXR0ZW1wdCBldmVudHMuXG4gKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgYXBpQ2FsbCBvciBhcGlDYWxsQXR0ZW1wdCBldmVudC5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5QdWJsaXNoZXIucHJvdG90eXBlLmV2ZW50SGFuZGxlciA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgLy8gc2V0IHRoZSBjbGllbnRJZFxuICAgIGV2ZW50LkNsaWVudElkID0gdGhpcy5jbGllbnRJZDtcblxuICAgIHRoaXMudHJpbUZpZWxkcyhldmVudCk7XG5cbiAgICB2YXIgbWVzc2FnZSA9IHN0cmluZ1RvQnVmZmVyKEpTT04uc3RyaW5naWZ5KGV2ZW50KSk7XG4gICAgaWYgKCF0aGlzLmVuYWJsZWQgfHwgbWVzc2FnZS5sZW5ndGggPiBNQVhfTUVTU0FHRV9TSVpFKSB7XG4gICAgICAgIC8vIGRyb3AgdGhlIG1lc3NhZ2UgaWYgcHVibGlzaGVyIG5vdCBlbmFibGVkIG9yIGl0IGlzIHRvbyBsYXJnZVxuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5wdWJsaXNoRGF0YWdyYW0obWVzc2FnZSk7XG59O1xuXG4vKipcbiAqIFB1Ymxpc2hlcyBtZXNzYWdlIHRvIGFuIGFnZW50LlxuICogQHBhcmFtIHtCdWZmZXJ9IG1lc3NhZ2UgSlNPTiBtZXNzYWdlIHRvIHNlbmQgdG8gYWdlbnQuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUHVibGlzaGVyLnByb3RvdHlwZS5wdWJsaXNoRGF0YWdyYW0gPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBjbGllbnQgPSB0aGlzLmdldENsaWVudCgpO1xuXG4gICAgdGhpcy5tZXNzYWdlc0luRmxpZ2h0Kys7XG4gICAgdGhpcy5jbGllbnQuc2VuZChtZXNzYWdlLCAwLCBtZXNzYWdlLmxlbmd0aCwgdGhpcy5wb3J0LCB0aGlzLmFkZHJlc3MsIGZ1bmN0aW9uKGVyciwgYnl0ZXMpIHtcbiAgICAgICAgaWYgKC0tc2VsZi5tZXNzYWdlc0luRmxpZ2h0IDw9IDApIHtcbiAgICAgICAgICAgIC8vIGRlc3Ryb3kgZXhpc3RpbmcgY2xpZW50IHNvIHRoZSBldmVudCBsb29wIGlzbid0IGtlcHQgb3BlblxuICAgICAgICAgICAgc2VsZi5kZXN0cm95Q2xpZW50KCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBleGlzdGluZyB1ZHAgc29ja2V0LCBvciBjcmVhdGVzIG9uZSBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3QuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUHVibGlzaGVyLnByb3RvdHlwZS5nZXRDbGllbnQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuY2xpZW50KSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gZGdyYW0uY3JlYXRlU29ja2V0KCd1ZHA0Jyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNsaWVudDtcbn07XG5cbi8qKlxuICogRGVzdHJveXMgdGhlIHVkcCBzb2NrZXQuXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUHVibGlzaGVyLnByb3RvdHlwZS5kZXN0cm95Q2xpZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuY2xpZW50KSB7XG4gICAgICAgIHRoaXMuY2xpZW50LmNsb3NlKCk7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gdm9pZCAwO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFB1Ymxpc2hlcjogUHVibGlzaGVyXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/publisher/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/query/query_param_serializer.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/query/query_param_serializer.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\n\nfunction QueryParamSerializer() {\n}\n\nQueryParamSerializer.prototype.serialize = function(params, shape, fn) {\n  serializeStructure('', params, shape, fn);\n};\n\nfunction ucfirst(shape) {\n  if (shape.isQueryName || shape.api.protocol !== 'ec2') {\n    return shape.name;\n  } else {\n    return shape.name[0].toUpperCase() + shape.name.substr(1);\n  }\n}\n\nfunction serializeStructure(prefix, struct, rules, fn) {\n  util.each(rules.members, function(name, member) {\n    var value = struct[name];\n    if (value === null || value === undefined) return;\n\n    var memberName = ucfirst(member);\n    memberName = prefix ? prefix + '.' + memberName : memberName;\n    serializeMember(memberName, value, member, fn);\n  });\n}\n\nfunction serializeMap(name, map, rules, fn) {\n  var i = 1;\n  util.each(map, function (key, value) {\n    var prefix = rules.flattened ? '.' : '.entry.';\n    var position = prefix + (i++) + '.';\n    var keyName = position + (rules.key.name || 'key');\n    var valueName = position + (rules.value.name || 'value');\n    serializeMember(name + keyName, key, rules.key, fn);\n    serializeMember(name + valueName, value, rules.value, fn);\n  });\n}\n\nfunction serializeList(name, list, rules, fn) {\n  var memberRules = rules.member || {};\n\n  if (list.length === 0) {\n    fn.call(this, name, null);\n    return;\n  }\n\n  util.arrayEach(list, function (v, n) {\n    var suffix = '.' + (n + 1);\n    if (rules.api.protocol === 'ec2') {\n      // Do nothing for EC2\n      suffix = suffix + ''; // make linter happy\n    } else if (rules.flattened) {\n      if (memberRules.name) {\n        var parts = name.split('.');\n        parts.pop();\n        parts.push(ucfirst(memberRules));\n        name = parts.join('.');\n      }\n    } else {\n      suffix = '.' + (memberRules.name ? memberRules.name : 'member') + suffix;\n    }\n    serializeMember(name + suffix, v, memberRules, fn);\n  });\n}\n\nfunction serializeMember(name, value, rules, fn) {\n  if (value === null || value === undefined) return;\n  if (rules.type === 'structure') {\n    serializeStructure(name, value, rules, fn);\n  } else if (rules.type === 'list') {\n    serializeList(name, value, rules, fn);\n  } else if (rules.type === 'map') {\n    serializeMap(name, value, rules, fn);\n  } else {\n    fn(name, rules.toWireFormat(value).toString());\n  }\n}\n\n/**\n * @api private\n */\nmodule.exports = QueryParamSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3F1ZXJ5L3F1ZXJ5X3BhcmFtX3NlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLDZEQUFTOztBQUU1QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvcXVlcnkvcXVlcnlfcGFyYW1fc2VyaWFsaXplci5qcz81YzQwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xuXG5mdW5jdGlvbiBRdWVyeVBhcmFtU2VyaWFsaXplcigpIHtcbn1cblxuUXVlcnlQYXJhbVNlcmlhbGl6ZXIucHJvdG90eXBlLnNlcmlhbGl6ZSA9IGZ1bmN0aW9uKHBhcmFtcywgc2hhcGUsIGZuKSB7XG4gIHNlcmlhbGl6ZVN0cnVjdHVyZSgnJywgcGFyYW1zLCBzaGFwZSwgZm4pO1xufTtcblxuZnVuY3Rpb24gdWNmaXJzdChzaGFwZSkge1xuICBpZiAoc2hhcGUuaXNRdWVyeU5hbWUgfHwgc2hhcGUuYXBpLnByb3RvY29sICE9PSAnZWMyJykge1xuICAgIHJldHVybiBzaGFwZS5uYW1lO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzaGFwZS5uYW1lWzBdLnRvVXBwZXJDYXNlKCkgKyBzaGFwZS5uYW1lLnN1YnN0cigxKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVTdHJ1Y3R1cmUocHJlZml4LCBzdHJ1Y3QsIHJ1bGVzLCBmbikge1xuICB1dGlsLmVhY2gocnVsZXMubWVtYmVycywgZnVuY3Rpb24obmFtZSwgbWVtYmVyKSB7XG4gICAgdmFyIHZhbHVlID0gc3RydWN0W25hbWVdO1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSByZXR1cm47XG5cbiAgICB2YXIgbWVtYmVyTmFtZSA9IHVjZmlyc3QobWVtYmVyKTtcbiAgICBtZW1iZXJOYW1lID0gcHJlZml4ID8gcHJlZml4ICsgJy4nICsgbWVtYmVyTmFtZSA6IG1lbWJlck5hbWU7XG4gICAgc2VyaWFsaXplTWVtYmVyKG1lbWJlck5hbWUsIHZhbHVlLCBtZW1iZXIsIGZuKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZU1hcChuYW1lLCBtYXAsIHJ1bGVzLCBmbikge1xuICB2YXIgaSA9IDE7XG4gIHV0aWwuZWFjaChtYXAsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIHByZWZpeCA9IHJ1bGVzLmZsYXR0ZW5lZCA/ICcuJyA6ICcuZW50cnkuJztcbiAgICB2YXIgcG9zaXRpb24gPSBwcmVmaXggKyAoaSsrKSArICcuJztcbiAgICB2YXIga2V5TmFtZSA9IHBvc2l0aW9uICsgKHJ1bGVzLmtleS5uYW1lIHx8ICdrZXknKTtcbiAgICB2YXIgdmFsdWVOYW1lID0gcG9zaXRpb24gKyAocnVsZXMudmFsdWUubmFtZSB8fCAndmFsdWUnKTtcbiAgICBzZXJpYWxpemVNZW1iZXIobmFtZSArIGtleU5hbWUsIGtleSwgcnVsZXMua2V5LCBmbik7XG4gICAgc2VyaWFsaXplTWVtYmVyKG5hbWUgKyB2YWx1ZU5hbWUsIHZhbHVlLCBydWxlcy52YWx1ZSwgZm4pO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gc2VyaWFsaXplTGlzdChuYW1lLCBsaXN0LCBydWxlcywgZm4pIHtcbiAgdmFyIG1lbWJlclJ1bGVzID0gcnVsZXMubWVtYmVyIHx8IHt9O1xuXG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIGZuLmNhbGwodGhpcywgbmFtZSwgbnVsbCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdXRpbC5hcnJheUVhY2gobGlzdCwgZnVuY3Rpb24gKHYsIG4pIHtcbiAgICB2YXIgc3VmZml4ID0gJy4nICsgKG4gKyAxKTtcbiAgICBpZiAocnVsZXMuYXBpLnByb3RvY29sID09PSAnZWMyJykge1xuICAgICAgLy8gRG8gbm90aGluZyBmb3IgRUMyXG4gICAgICBzdWZmaXggPSBzdWZmaXggKyAnJzsgLy8gbWFrZSBsaW50ZXIgaGFwcHlcbiAgICB9IGVsc2UgaWYgKHJ1bGVzLmZsYXR0ZW5lZCkge1xuICAgICAgaWYgKG1lbWJlclJ1bGVzLm5hbWUpIHtcbiAgICAgICAgdmFyIHBhcnRzID0gbmFtZS5zcGxpdCgnLicpO1xuICAgICAgICBwYXJ0cy5wb3AoKTtcbiAgICAgICAgcGFydHMucHVzaCh1Y2ZpcnN0KG1lbWJlclJ1bGVzKSk7XG4gICAgICAgIG5hbWUgPSBwYXJ0cy5qb2luKCcuJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN1ZmZpeCA9ICcuJyArIChtZW1iZXJSdWxlcy5uYW1lID8gbWVtYmVyUnVsZXMubmFtZSA6ICdtZW1iZXInKSArIHN1ZmZpeDtcbiAgICB9XG4gICAgc2VyaWFsaXplTWVtYmVyKG5hbWUgKyBzdWZmaXgsIHYsIG1lbWJlclJ1bGVzLCBmbik7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVNZW1iZXIobmFtZSwgdmFsdWUsIHJ1bGVzLCBmbikge1xuICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuICBpZiAocnVsZXMudHlwZSA9PT0gJ3N0cnVjdHVyZScpIHtcbiAgICBzZXJpYWxpemVTdHJ1Y3R1cmUobmFtZSwgdmFsdWUsIHJ1bGVzLCBmbik7XG4gIH0gZWxzZSBpZiAocnVsZXMudHlwZSA9PT0gJ2xpc3QnKSB7XG4gICAgc2VyaWFsaXplTGlzdChuYW1lLCB2YWx1ZSwgcnVsZXMsIGZuKTtcbiAgfSBlbHNlIGlmIChydWxlcy50eXBlID09PSAnbWFwJykge1xuICAgIHNlcmlhbGl6ZU1hcChuYW1lLCB2YWx1ZSwgcnVsZXMsIGZuKTtcbiAgfSBlbHNlIHtcbiAgICBmbihuYW1lLCBydWxlcy50b1dpcmVGb3JtYXQodmFsdWUpLnRvU3RyaW5nKCkpO1xuICB9XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gUXVlcnlQYXJhbVNlcmlhbGl6ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/query/query_param_serializer.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/realclock/nodeClock.js":
/*!*************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/realclock/nodeClock.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("module.exports = {\n  //provide realtime clock for performance measurement\n  now: function now() {\n    var second = process.hrtime();\n    return second[0] * 1000 + (second[1] / 1000000);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3JlYWxjbG9jay9ub2RlQ2xvY2suanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvcmVhbGNsb2NrL25vZGVDbG9jay5qcz82ZDhjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICAvL3Byb3ZpZGUgcmVhbHRpbWUgY2xvY2sgZm9yIHBlcmZvcm1hbmNlIG1lYXN1cmVtZW50XG4gIG5vdzogZnVuY3Rpb24gbm93KCkge1xuICAgIHZhciBzZWNvbmQgPSBwcm9jZXNzLmhydGltZSgpO1xuICAgIHJldHVybiBzZWNvbmRbMF0gKiAxMDAwICsgKHNlY29uZFsxXSAvIDEwMDAwMDApO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/realclock/nodeClock.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/region/utils.js":
/*!******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/region/utils.js ***!
  \******************************************************/
/***/ ((module) => {

eval("function isFipsRegion(region) {\n  return typeof region === 'string' && (region.startsWith('fips-') || region.endsWith('-fips'));\n}\n\nfunction isGlobalRegion(region) {\n  return typeof region === 'string' && ['aws-global', 'aws-us-gov-global'].includes(region);\n}\n\nfunction getRealRegion(region) {\n  return ['fips-aws-global', 'aws-fips', 'aws-global'].includes(region)\n      ? 'us-east-1'\n      : ['fips-aws-us-gov-global', 'aws-us-gov-global'].includes(region)\n      ? 'us-gov-west-1'\n      : region.replace(/fips-(dkr-|prod-)?|-fips/, '');\n}\n\nmodule.exports = {\n  isFipsRegion: isFipsRegion,\n  isGlobalRegion: isGlobalRegion,\n  getRealRegion: getRealRegion\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3JlZ2lvbi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvcmVnaW9uL3V0aWxzLmpzPzU3MGYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXNGaXBzUmVnaW9uKHJlZ2lvbikge1xuICByZXR1cm4gdHlwZW9mIHJlZ2lvbiA9PT0gJ3N0cmluZycgJiYgKHJlZ2lvbi5zdGFydHNXaXRoKCdmaXBzLScpIHx8IHJlZ2lvbi5lbmRzV2l0aCgnLWZpcHMnKSk7XG59XG5cbmZ1bmN0aW9uIGlzR2xvYmFsUmVnaW9uKHJlZ2lvbikge1xuICByZXR1cm4gdHlwZW9mIHJlZ2lvbiA9PT0gJ3N0cmluZycgJiYgWydhd3MtZ2xvYmFsJywgJ2F3cy11cy1nb3YtZ2xvYmFsJ10uaW5jbHVkZXMocmVnaW9uKTtcbn1cblxuZnVuY3Rpb24gZ2V0UmVhbFJlZ2lvbihyZWdpb24pIHtcbiAgcmV0dXJuIFsnZmlwcy1hd3MtZ2xvYmFsJywgJ2F3cy1maXBzJywgJ2F3cy1nbG9iYWwnXS5pbmNsdWRlcyhyZWdpb24pXG4gICAgICA/ICd1cy1lYXN0LTEnXG4gICAgICA6IFsnZmlwcy1hd3MtdXMtZ292LWdsb2JhbCcsICdhd3MtdXMtZ292LWdsb2JhbCddLmluY2x1ZGVzKHJlZ2lvbilcbiAgICAgID8gJ3VzLWdvdi13ZXN0LTEnXG4gICAgICA6IHJlZ2lvbi5yZXBsYWNlKC9maXBzLShka3ItfHByb2QtKT98LWZpcHMvLCAnJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0ZpcHNSZWdpb246IGlzRmlwc1JlZ2lvbixcbiAgaXNHbG9iYWxSZWdpb246IGlzR2xvYmFsUmVnaW9uLFxuICBnZXRSZWFsUmVnaW9uOiBnZXRSZWFsUmVnaW9uXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/region/utils.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/region_config.js":
/*!*******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/region_config.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ./util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar regionConfig = __webpack_require__(/*! ./region_config_data.json */ \"(rsc)/../../node_modules/aws-sdk/lib/region_config_data.json\");\n\nfunction generateRegionPrefix(region) {\n  if (!region) return null;\n  var parts = region.split('-');\n  if (parts.length < 3) return null;\n  return parts.slice(0, parts.length - 2).join('-') + '-*';\n}\n\nfunction derivedKeys(service) {\n  var region = service.config.region;\n  var regionPrefix = generateRegionPrefix(region);\n  var endpointPrefix = service.api.endpointPrefix;\n\n  return [\n    [region, endpointPrefix],\n    [regionPrefix, endpointPrefix],\n    [region, '*'],\n    [regionPrefix, '*'],\n    ['*', endpointPrefix],\n    [region, 'internal-*'],\n    ['*', '*']\n  ].map(function(item) {\n    return item[0] && item[1] ? item.join('/') : null;\n  });\n}\n\nfunction applyConfig(service, config) {\n  util.each(config, function(key, value) {\n    if (key === 'globalEndpoint') return;\n    if (service.config[key] === undefined || service.config[key] === null) {\n      service.config[key] = value;\n    }\n  });\n}\n\nfunction configureEndpoint(service) {\n  var keys = derivedKeys(service);\n  var useFipsEndpoint = service.config.useFipsEndpoint;\n  var useDualstackEndpoint = service.config.useDualstackEndpoint;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!key) continue;\n\n    var rules = useFipsEndpoint\n      ? useDualstackEndpoint\n        ? regionConfig.dualstackFipsRules\n        : regionConfig.fipsRules\n      : useDualstackEndpoint\n      ? regionConfig.dualstackRules\n      : regionConfig.rules;\n\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      var config = rules[key];\n      if (typeof config === 'string') {\n        config = regionConfig.patterns[config];\n      }\n\n      // set global endpoint\n      service.isGlobalEndpoint = !!config.globalEndpoint;\n      if (config.signingRegion) {\n        service.signingRegion = config.signingRegion;\n      }\n\n      // signature version\n      if (!config.signatureVersion) {\n        // Note: config is a global object and should not be mutated here.\n        // However, we are retaining this line for backwards compatibility.\n        // The non-v4 signatureVersion will be set in a copied object below.\n        config.signatureVersion = 'v4';\n      }\n\n      var useBearer = (service.api && service.api.signatureVersion) === 'bearer';\n\n      // merge config\n      applyConfig(service, Object.assign(\n        {},\n        config,\n        { signatureVersion: useBearer ? 'bearer' : config.signatureVersion }\n      ));\n      return;\n    }\n  }\n}\n\nfunction getEndpointSuffix(region) {\n  var regionRegexes = {\n    '^(us|eu|ap|sa|ca|me)\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^cn\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com.cn',\n    '^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$': 'amazonaws.com',\n    '^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$': 'c2s.ic.gov',\n    '^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$': 'sc2s.sgov.gov'\n  };\n  var defaultSuffix = 'amazonaws.com';\n  var regexes = Object.keys(regionRegexes);\n  for (var i = 0; i < regexes.length; i++) {\n    var regionPattern = RegExp(regexes[i]);\n    var dnsSuffix = regionRegexes[regexes[i]];\n    if (regionPattern.test(region)) return dnsSuffix;\n  }\n  return defaultSuffix;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  configureEndpoint: configureEndpoint,\n  getEndpointSuffix: getEndpointSuffix,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3JlZ2lvbl9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLDREQUFRO0FBQzNCLG1CQUFtQixtQkFBTyxDQUFDLCtGQUEyQjs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvcmVnaW9uX2NvbmZpZy5qcz9mYzMzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi91dGlsJyk7XG52YXIgcmVnaW9uQ29uZmlnID0gcmVxdWlyZSgnLi9yZWdpb25fY29uZmlnX2RhdGEuanNvbicpO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVJlZ2lvblByZWZpeChyZWdpb24pIHtcbiAgaWYgKCFyZWdpb24pIHJldHVybiBudWxsO1xuICB2YXIgcGFydHMgPSByZWdpb24uc3BsaXQoJy0nKTtcbiAgaWYgKHBhcnRzLmxlbmd0aCA8IDMpIHJldHVybiBudWxsO1xuICByZXR1cm4gcGFydHMuc2xpY2UoMCwgcGFydHMubGVuZ3RoIC0gMikuam9pbignLScpICsgJy0qJztcbn1cblxuZnVuY3Rpb24gZGVyaXZlZEtleXMoc2VydmljZSkge1xuICB2YXIgcmVnaW9uID0gc2VydmljZS5jb25maWcucmVnaW9uO1xuICB2YXIgcmVnaW9uUHJlZml4ID0gZ2VuZXJhdGVSZWdpb25QcmVmaXgocmVnaW9uKTtcbiAgdmFyIGVuZHBvaW50UHJlZml4ID0gc2VydmljZS5hcGkuZW5kcG9pbnRQcmVmaXg7XG5cbiAgcmV0dXJuIFtcbiAgICBbcmVnaW9uLCBlbmRwb2ludFByZWZpeF0sXG4gICAgW3JlZ2lvblByZWZpeCwgZW5kcG9pbnRQcmVmaXhdLFxuICAgIFtyZWdpb24sICcqJ10sXG4gICAgW3JlZ2lvblByZWZpeCwgJyonXSxcbiAgICBbJyonLCBlbmRwb2ludFByZWZpeF0sXG4gICAgW3JlZ2lvbiwgJ2ludGVybmFsLSonXSxcbiAgICBbJyonLCAnKiddXG4gIF0ubWFwKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbVswXSAmJiBpdGVtWzFdID8gaXRlbS5qb2luKCcvJykgOiBudWxsO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gYXBwbHlDb25maWcoc2VydmljZSwgY29uZmlnKSB7XG4gIHV0aWwuZWFjaChjb25maWcsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnZ2xvYmFsRW5kcG9pbnQnKSByZXR1cm47XG4gICAgaWYgKHNlcnZpY2UuY29uZmlnW2tleV0gPT09IHVuZGVmaW5lZCB8fCBzZXJ2aWNlLmNvbmZpZ1trZXldID09PSBudWxsKSB7XG4gICAgICBzZXJ2aWNlLmNvbmZpZ1trZXldID0gdmFsdWU7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY29uZmlndXJlRW5kcG9pbnQoc2VydmljZSkge1xuICB2YXIga2V5cyA9IGRlcml2ZWRLZXlzKHNlcnZpY2UpO1xuICB2YXIgdXNlRmlwc0VuZHBvaW50ID0gc2VydmljZS5jb25maWcudXNlRmlwc0VuZHBvaW50O1xuICB2YXIgdXNlRHVhbHN0YWNrRW5kcG9pbnQgPSBzZXJ2aWNlLmNvbmZpZy51c2VEdWFsc3RhY2tFbmRwb2ludDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgaWYgKCFrZXkpIGNvbnRpbnVlO1xuXG4gICAgdmFyIHJ1bGVzID0gdXNlRmlwc0VuZHBvaW50XG4gICAgICA/IHVzZUR1YWxzdGFja0VuZHBvaW50XG4gICAgICAgID8gcmVnaW9uQ29uZmlnLmR1YWxzdGFja0ZpcHNSdWxlc1xuICAgICAgICA6IHJlZ2lvbkNvbmZpZy5maXBzUnVsZXNcbiAgICAgIDogdXNlRHVhbHN0YWNrRW5kcG9pbnRcbiAgICAgID8gcmVnaW9uQ29uZmlnLmR1YWxzdGFja1J1bGVzXG4gICAgICA6IHJlZ2lvbkNvbmZpZy5ydWxlcztcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocnVsZXMsIGtleSkpIHtcbiAgICAgIHZhciBjb25maWcgPSBydWxlc1trZXldO1xuICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbmZpZyA9IHJlZ2lvbkNvbmZpZy5wYXR0ZXJuc1tjb25maWddO1xuICAgICAgfVxuXG4gICAgICAvLyBzZXQgZ2xvYmFsIGVuZHBvaW50XG4gICAgICBzZXJ2aWNlLmlzR2xvYmFsRW5kcG9pbnQgPSAhIWNvbmZpZy5nbG9iYWxFbmRwb2ludDtcbiAgICAgIGlmIChjb25maWcuc2lnbmluZ1JlZ2lvbikge1xuICAgICAgICBzZXJ2aWNlLnNpZ25pbmdSZWdpb24gPSBjb25maWcuc2lnbmluZ1JlZ2lvbjtcbiAgICAgIH1cblxuICAgICAgLy8gc2lnbmF0dXJlIHZlcnNpb25cbiAgICAgIGlmICghY29uZmlnLnNpZ25hdHVyZVZlcnNpb24pIHtcbiAgICAgICAgLy8gTm90ZTogY29uZmlnIGlzIGEgZ2xvYmFsIG9iamVjdCBhbmQgc2hvdWxkIG5vdCBiZSBtdXRhdGVkIGhlcmUuXG4gICAgICAgIC8vIEhvd2V2ZXIsIHdlIGFyZSByZXRhaW5pbmcgdGhpcyBsaW5lIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS5cbiAgICAgICAgLy8gVGhlIG5vbi12NCBzaWduYXR1cmVWZXJzaW9uIHdpbGwgYmUgc2V0IGluIGEgY29waWVkIG9iamVjdCBiZWxvdy5cbiAgICAgICAgY29uZmlnLnNpZ25hdHVyZVZlcnNpb24gPSAndjQnO1xuICAgICAgfVxuXG4gICAgICB2YXIgdXNlQmVhcmVyID0gKHNlcnZpY2UuYXBpICYmIHNlcnZpY2UuYXBpLnNpZ25hdHVyZVZlcnNpb24pID09PSAnYmVhcmVyJztcblxuICAgICAgLy8gbWVyZ2UgY29uZmlnXG4gICAgICBhcHBseUNvbmZpZyhzZXJ2aWNlLCBPYmplY3QuYXNzaWduKFxuICAgICAgICB7fSxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICB7IHNpZ25hdHVyZVZlcnNpb246IHVzZUJlYXJlciA/ICdiZWFyZXInIDogY29uZmlnLnNpZ25hdHVyZVZlcnNpb24gfVxuICAgICAgKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGdldEVuZHBvaW50U3VmZml4KHJlZ2lvbikge1xuICB2YXIgcmVnaW9uUmVnZXhlcyA9IHtcbiAgICAnXih1c3xldXxhcHxzYXxjYXxtZSlcXFxcLVxcXFx3K1xcXFwtXFxcXGQrJCc6ICdhbWF6b25hd3MuY29tJyxcbiAgICAnXmNuXFxcXC1cXFxcdytcXFxcLVxcXFxkKyQnOiAnYW1hem9uYXdzLmNvbS5jbicsXG4gICAgJ151c1xcXFwtZ292XFxcXC1cXFxcdytcXFxcLVxcXFxkKyQnOiAnYW1hem9uYXdzLmNvbScsXG4gICAgJ151c1xcXFwtaXNvXFxcXC1cXFxcdytcXFxcLVxcXFxkKyQnOiAnYzJzLmljLmdvdicsXG4gICAgJ151c1xcXFwtaXNvYlxcXFwtXFxcXHcrXFxcXC1cXFxcZCskJzogJ3NjMnMuc2dvdi5nb3YnXG4gIH07XG4gIHZhciBkZWZhdWx0U3VmZml4ID0gJ2FtYXpvbmF3cy5jb20nO1xuICB2YXIgcmVnZXhlcyA9IE9iamVjdC5rZXlzKHJlZ2lvblJlZ2V4ZXMpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZ2V4ZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgcmVnaW9uUGF0dGVybiA9IFJlZ0V4cChyZWdleGVzW2ldKTtcbiAgICB2YXIgZG5zU3VmZml4ID0gcmVnaW9uUmVnZXhlc1tyZWdleGVzW2ldXTtcbiAgICBpZiAocmVnaW9uUGF0dGVybi50ZXN0KHJlZ2lvbikpIHJldHVybiBkbnNTdWZmaXg7XG4gIH1cbiAgcmV0dXJuIGRlZmF1bHRTdWZmaXg7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjb25maWd1cmVFbmRwb2ludDogY29uZmlndXJlRW5kcG9pbnQsXG4gIGdldEVuZHBvaW50U3VmZml4OiBnZXRFbmRwb2ludFN1ZmZpeCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/region_config.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/request.js":
/*!*************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/request.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar AcceptorStateMachine = __webpack_require__(/*! ./state_machine */ \"(rsc)/../../node_modules/aws-sdk/lib/state_machine.js\");\nvar inherit = AWS.util.inherit;\nvar domain = AWS.util.domain;\nvar jmespath = __webpack_require__(/*! jmespath */ \"(rsc)/../../node_modules/jmespath/jmespath.js\");\n\n/**\n * @api private\n */\nvar hardErrorStates = {success: 1, error: 1, complete: 1};\n\nfunction isTerminalState(machine) {\n  return Object.prototype.hasOwnProperty.call(hardErrorStates, machine._asm.currentState);\n}\n\nvar fsm = new AcceptorStateMachine();\nfsm.setupStates = function() {\n  var transition = function(_, done) {\n    var self = this;\n    self._haltHandlersOnError = false;\n\n    self.emit(self._asm.currentState, function(err) {\n      if (err) {\n        if (isTerminalState(self)) {\n          if (domain && self.domain instanceof domain.Domain) {\n            err.domainEmitter = self;\n            err.domain = self.domain;\n            err.domainThrown = false;\n            self.domain.emit('error', err);\n          } else {\n            throw err;\n          }\n        } else {\n          self.response.error = err;\n          done(err);\n        }\n      } else {\n        done(self.response.error);\n      }\n    });\n\n  };\n\n  this.addState('validate', 'build', 'error', transition);\n  this.addState('build', 'afterBuild', 'restart', transition);\n  this.addState('afterBuild', 'sign', 'restart', transition);\n  this.addState('sign', 'send', 'retry', transition);\n  this.addState('retry', 'afterRetry', 'afterRetry', transition);\n  this.addState('afterRetry', 'sign', 'error', transition);\n  this.addState('send', 'validateResponse', 'retry', transition);\n  this.addState('validateResponse', 'extractData', 'extractError', transition);\n  this.addState('extractError', 'extractData', 'retry', transition);\n  this.addState('extractData', 'success', 'retry', transition);\n  this.addState('restart', 'build', 'error', transition);\n  this.addState('success', 'complete', 'complete', transition);\n  this.addState('error', 'complete', 'complete', transition);\n  this.addState('complete', null, null, transition);\n};\nfsm.setupStates();\n\n/**\n * ## Asynchronous Requests\n *\n * All requests made through the SDK are asynchronous and use a\n * callback interface. Each service method that kicks off a request\n * returns an `AWS.Request` object that you can use to register\n * callbacks.\n *\n * For example, the following service method returns the request\n * object as \"request\", which can be used to register callbacks:\n *\n * ```javascript\n * // request is an AWS.Request object\n * var request = ec2.describeInstances();\n *\n * // register callbacks on request to retrieve response data\n * request.on('success', function(response) {\n *   console.log(response.data);\n * });\n * ```\n *\n * When a request is ready to be sent, the {send} method should\n * be called:\n *\n * ```javascript\n * request.send();\n * ```\n *\n * Since registered callbacks may or may not be idempotent, requests should only\n * be sent once. To perform the same operation multiple times, you will need to\n * create multiple request objects, each with its own registered callbacks.\n *\n * ## Removing Default Listeners for Events\n *\n * Request objects are built with default listeners for the various events,\n * depending on the service type. In some cases, you may want to remove\n * some built-in listeners to customize behaviour. Doing this requires\n * access to the built-in listener functions, which are exposed through\n * the {AWS.EventListeners.Core} namespace. For instance, you may\n * want to customize the HTTP handler used when sending a request. In this\n * case, you can remove the built-in listener associated with the 'send'\n * event, the {AWS.EventListeners.Core.SEND} listener and add your own.\n *\n * ## Multiple Callbacks and Chaining\n *\n * You can register multiple callbacks on any request object. The\n * callbacks can be registered for different events, or all for the\n * same event. In addition, you can chain callback registration, for\n * example:\n *\n * ```javascript\n * request.\n *   on('success', function(response) {\n *     console.log(\"Success!\");\n *   }).\n *   on('error', function(error, response) {\n *     console.log(\"Error!\");\n *   }).\n *   on('complete', function(response) {\n *     console.log(\"Always!\");\n *   }).\n *   send();\n * ```\n *\n * The above example will print either \"Success! Always!\", or \"Error! Always!\",\n * depending on whether the request succeeded or not.\n *\n * @!attribute httpRequest\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpRequest] the raw HTTP request object\n *     containing request headers and body information\n *     sent by the service.\n *\n * @!attribute startTime\n *   @readonly\n *   @!group Operation Properties\n *   @return [Date] the time that the request started\n *\n * @!group Request Building Events\n *\n * @!event validate(request)\n *   Triggered when a request is being validated. Listeners\n *   should throw an error if the request should not be sent.\n *   @param request [Request] the request object being sent\n *   @see AWS.EventListeners.Core.VALIDATE_CREDENTIALS\n *   @see AWS.EventListeners.Core.VALIDATE_REGION\n *   @example Ensuring that a certain parameter is set before sending a request\n *     var req = s3.putObject(params);\n *     req.on('validate', function() {\n *       if (!req.params.Body.match(/^Hello\\s/)) {\n *         throw new Error('Body must start with \"Hello \"');\n *       }\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event build(request)\n *   Triggered when the request payload is being built. Listeners\n *   should fill the necessary information to send the request\n *   over HTTP.\n *   @param (see AWS.Request~validate)\n *   @example Add a custom HTTP header to a request\n *     var req = s3.putObject(params);\n *     req.on('build', function() {\n *       req.httpRequest.headers['Custom-Header'] = 'value';\n *     });\n *     req.send(function(err, data) { ... });\n *\n * @!event sign(request)\n *   Triggered when the request is being signed. Listeners should\n *   add the correct authentication headers and/or adjust the body,\n *   depending on the authentication mechanism being used.\n *   @param (see AWS.Request~validate)\n *\n * @!group Request Sending Events\n *\n * @!event send(response)\n *   Triggered when the request is ready to be sent. Listeners\n *   should call the underlying transport layer to initiate\n *   the sending of the request.\n *   @param response [Response] the response object\n *   @context [Request] the request object that was sent\n *   @see AWS.EventListeners.Core.SEND\n *\n * @!event retry(response)\n *   Triggered when a request failed and might need to be retried or redirected.\n *   If the response is retryable, the listener should set the\n *   `response.error.retryable` property to `true`, and optionally set\n *   `response.error.retryDelay` to the millisecond delay for the next attempt.\n *   In the case of a redirect, `response.error.redirect` should be set to\n *   `true` with `retryDelay` set to an optional delay on the next request.\n *\n *   If a listener decides that a request should not be retried,\n *   it should set both `retryable` and `redirect` to false.\n *\n *   Note that a retryable error will be retried at most\n *   {AWS.Config.maxRetries} times (based on the service object's config).\n *   Similarly, a request that is redirected will only redirect at most\n *   {AWS.Config.maxRedirects} times.\n *\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @example Adding a custom retry for a 404 response\n *     request.on('retry', function(response) {\n *       // this resource is not yet available, wait 10 seconds to get it again\n *       if (response.httpResponse.statusCode === 404 && response.error) {\n *         response.error.retryable = true;   // retry this error\n *         response.error.retryDelay = 10000; // wait 10 seconds\n *       }\n *     });\n *\n * @!group Data Parsing Events\n *\n * @!event extractError(response)\n *   Triggered on all non-2xx requests so that listeners can extract\n *   error details from the response body. Listeners to this event\n *   should set the `response.error` property.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event extractData(response)\n *   Triggered in successful requests to allow listeners to\n *   de-serialize the response body into `response.data`.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group Completion Events\n *\n * @!event success(response)\n *   Triggered when the request completed successfully.\n *   `response.data` will contain the response data and\n *   `response.error` will be null.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event error(error, response)\n *   Triggered when an error occurs at any point during the\n *   request. `response.error` will contain details about the error\n *   that occurred. `response.data` will be null.\n *   @param error [Error] the error object containing details about\n *     the error that occurred.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event complete(response)\n *   Triggered whenever a request cycle completes. `response.error`\n *   should be checked, since the request may have failed.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!group HTTP Events\n *\n * @!event httpHeaders(statusCode, headers, response, statusMessage)\n *   Triggered when headers are sent by the remote server\n *   @param statusCode [Integer] the HTTP response code\n *   @param headers [map<String,String>] the response headers\n *   @param (see AWS.Request~send)\n *   @param statusMessage [String] A status message corresponding to the HTTP\n *                                 response code\n *   @context (see AWS.Request~send)\n *\n * @!event httpData(chunk, response)\n *   Triggered when data is sent by the remote server\n *   @param chunk [Buffer] the buffer data containing the next data chunk\n *     from the server\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @see AWS.EventListeners.Core.HTTP_DATA\n *\n * @!event httpUploadProgress(progress, response)\n *   Triggered when the HTTP request has uploaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpDownloadProgress(progress, response)\n *   Triggered when the HTTP request has downloaded more data\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request.\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *   @note This event will not be emitted in Node.js 0.8.x.\n *\n * @!event httpError(error, response)\n *   Triggered when the HTTP request failed\n *   @param error [Error] the error object that was thrown\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @!event httpDone(response)\n *   Triggered when the server is finished sending data\n *   @param (see AWS.Request~send)\n *   @context (see AWS.Request~send)\n *\n * @see AWS.Response\n */\nAWS.Request = inherit({\n\n  /**\n   * Creates a request for an operation on a given service with\n   * a set of input parameters.\n   *\n   * @param service [AWS.Service] the service to perform the operation on\n   * @param operation [String] the operation to perform on the service\n   * @param params [Object] parameters to send to the operation.\n   *   See the operation's documentation for the format of the\n   *   parameters.\n   */\n  constructor: function Request(service, operation, params) {\n    var endpoint = service.endpoint;\n    var region = service.config.region;\n    var customUserAgent = service.config.customUserAgent;\n\n    if (service.signingRegion) {\n      region = service.signingRegion;\n    } else if (service.isGlobalEndpoint) {\n      region = 'us-east-1';\n    }\n\n    this.domain = domain && domain.active;\n    this.service = service;\n    this.operation = operation;\n    this.params = params || {};\n    this.httpRequest = new AWS.HttpRequest(endpoint, region);\n    this.httpRequest.appendToUserAgent(customUserAgent);\n    this.startTime = service.getSkewCorrectedDate();\n\n    this.response = new AWS.Response(this);\n    this._asm = new AcceptorStateMachine(fsm.states, 'validate');\n    this._haltHandlersOnError = false;\n\n    AWS.SequentialExecutor.call(this);\n    this.emit = this.emitEvent;\n  },\n\n  /**\n   * @!group Sending a Request\n   */\n\n  /**\n   * @overload send(callback = null)\n   *   Sends the request object.\n   *\n   *   @callback callback function(err, data)\n   *     If a callback is supplied, it is called when a response is returned\n   *     from the service.\n   *     @context [AWS.Request] the request object being sent.\n   *     @param err [Error] the error object returned from the request.\n   *       Set to `null` if the request is successful.\n   *     @param data [Object] the de-serialized data returned from\n   *       the request. Set to `null` if a request error occurs.\n   *   @example Sending a request with a callback\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.send(function(err, data) { console.log(err, data); });\n   *   @example Sending a request with no callback (using event handlers)\n   *     request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     request.on('complete', function(response) { ... }); // register a callback\n   *     request.send();\n   */\n  send: function send(callback) {\n    if (callback) {\n      // append to user agent\n      this.httpRequest.appendToUserAgent('callback');\n      this.on('complete', function (resp) {\n        callback.call(resp, resp.error, resp.data);\n      });\n    }\n    this.runTo();\n\n    return this.response;\n  },\n\n  /**\n   * @!method  promise()\n   *   Sends the request and returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [Object] the de-serialized data returned from the request.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param error [Error] the error object returned from the request.\n   *   @return [Promise] A promise that represents the state of the request.\n   *   @example Sending a request using promises.\n   *     var request = s3.putObject({Bucket: 'bucket', Key: 'key'});\n   *     var result = request.promise();\n   *     result.then(function(data) { ... }, function(error) { ... });\n   */\n\n  /**\n   * @api private\n   */\n  build: function build(callback) {\n    return this.runTo('send', callback);\n  },\n\n  /**\n   * @api private\n   */\n  runTo: function runTo(state, done) {\n    this._asm.runTo(state, done, this);\n    return this;\n  },\n\n  /**\n   * Aborts a request, emitting the error and complete events.\n   *\n   * @!macro nobrowser\n   * @example Aborting a request after sending\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 5) // 5MB payload\n   *   };\n   *   var request = s3.putObject(params);\n   *   request.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(request.abort.bind(request), 1000);\n   *\n   *   // prints \"Error: RequestAbortedError Request aborted by user\"\n   * @return [AWS.Request] the same request object, for chaining.\n   * @since v1.4.0\n   */\n  abort: function abort() {\n    this.removeAllListeners('validateResponse');\n    this.removeAllListeners('extractError');\n    this.on('validateResponse', function addAbortedError(resp) {\n      resp.error = AWS.util.error(new Error('Request aborted by user'), {\n         code: 'RequestAbortedError', retryable: false\n      });\n    });\n\n    if (this.httpRequest.stream && !this.httpRequest.stream.didCallback) { // abort HTTP stream\n      this.httpRequest.stream.abort();\n      if (this.httpRequest._abortCallback) {\n         this.httpRequest._abortCallback();\n      } else {\n        this.removeAllListeners('send'); // haven't sent yet, so let's not\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Iterates over each page of results given a pageable request, calling\n   * the provided callback with each page of data. After all pages have been\n   * retrieved, the callback is called with `null` data.\n   *\n   * @note This operation can generate multiple requests to a service.\n   * @example Iterating over multiple pages of objects in an S3 bucket\n   *   var pages = 1;\n   *   s3.listObjects().eachPage(function(err, data) {\n   *     if (err) return;\n   *     console.log(\"Page\", pages++);\n   *     console.log(data);\n   *   });\n   * @example Iterating over multiple pages with an asynchronous callback\n   *   s3.listObjects(params).eachPage(function(err, data, done) {\n   *     doSomethingAsyncAndOrExpensive(function() {\n   *       // The next page of results isn't fetched until done is called\n   *       done();\n   *     });\n   *   });\n   * @callback callback function(err, data, [doneCallback])\n   *   Called with each page of resulting data from the request. If the\n   *   optional `doneCallback` is provided in the function, it must be called\n   *   when the callback is complete.\n   *\n   *   @param err [Error] an error object, if an error occurred.\n   *   @param data [Object] a single page of response data. If there is no\n   *     more data, this object will be `null`.\n   *   @param doneCallback [Function] an optional done callback. If this\n   *     argument is defined in the function declaration, it should be called\n   *     when the next page is ready to be retrieved. This is useful for\n   *     controlling serial pagination across asynchronous operations.\n   *   @return [Boolean] if the callback returns `false`, pagination will\n   *     stop.\n   *\n   * @see AWS.Request.eachItem\n   * @see AWS.Response.nextPage\n   * @since v1.4.0\n   */\n  eachPage: function eachPage(callback) {\n    // Make all callbacks async-ish\n    callback = AWS.util.fn.makeAsync(callback, 3);\n\n    function wrappedCallback(response) {\n      callback.call(response, response.error, response.data, function (result) {\n        if (result === false) return;\n\n        if (response.hasNextPage()) {\n          response.nextPage().on('complete', wrappedCallback).send();\n        } else {\n          callback.call(response, null, null, AWS.util.fn.noop);\n        }\n      });\n    }\n\n    this.on('complete', wrappedCallback).send();\n  },\n\n  /**\n   * Enumerates over individual items of a request, paging the responses if\n   * necessary.\n   *\n   * @api experimental\n   * @since v1.4.0\n   */\n  eachItem: function eachItem(callback) {\n    var self = this;\n    function wrappedCallback(err, data) {\n      if (err) return callback(err, null);\n      if (data === null) return callback(null, null);\n\n      var config = self.service.paginationConfig(self.operation);\n      var resultKey = config.resultKey;\n      if (Array.isArray(resultKey)) resultKey = resultKey[0];\n      var items = jmespath.search(data, resultKey);\n      var continueIteration = true;\n      AWS.util.arrayEach(items, function(item) {\n        continueIteration = callback(null, item);\n        if (continueIteration === false) {\n          return AWS.util.abort;\n        }\n      });\n      return continueIteration;\n    }\n\n    this.eachPage(wrappedCallback);\n  },\n\n  /**\n   * @return [Boolean] whether the operation can return multiple pages of\n   *   response data.\n   * @see AWS.Response.eachPage\n   * @since v1.4.0\n   */\n  isPageable: function isPageable() {\n    return this.service.paginationConfig(this.operation) ? true : false;\n  },\n\n  /**\n   * Sends the request and converts the request object into a readable stream\n   * that can be read from or piped into a writable stream.\n   *\n   * @note The data read from a readable stream contains only\n   *   the raw HTTP body contents.\n   * @example Manually reading from a stream\n   *   request.createReadStream().on('data', function(data) {\n   *     console.log(\"Got data:\", data.toString());\n   *   });\n   * @example Piping a request body into a file\n   *   var out = fs.createWriteStream('/path/to/outfile.jpg');\n   *   s3.service.getObject(params).createReadStream().pipe(out);\n   * @return [Stream] the readable stream object that can be piped\n   *   or read from (by registering 'data' event listeners).\n   * @!macro nobrowser\n   */\n  createReadStream: function createReadStream() {\n    var streams = AWS.util.stream;\n    var req = this;\n    var stream = null;\n\n    if (AWS.HttpClient.streamsApiVersion === 2) {\n      stream = new streams.PassThrough();\n      process.nextTick(function() { req.send(); });\n    } else {\n      stream = new streams.Stream();\n      stream.readable = true;\n\n      stream.sent = false;\n      stream.on('newListener', function(event) {\n        if (!stream.sent && event === 'data') {\n          stream.sent = true;\n          process.nextTick(function() { req.send(); });\n        }\n      });\n    }\n\n    this.on('error', function(err) {\n      stream.emit('error', err);\n    });\n\n    this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {\n      if (statusCode < 300) {\n        req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);\n        req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);\n        req.on('httpError', function streamHttpError(error) {\n          resp.error = error;\n          resp.error.retryable = false;\n        });\n\n        var shouldCheckContentLength = false;\n        var expectedLen;\n        if (req.httpRequest.method !== 'HEAD') {\n          expectedLen = parseInt(headers['content-length'], 10);\n        }\n        if (expectedLen !== undefined && !isNaN(expectedLen) && expectedLen >= 0) {\n          shouldCheckContentLength = true;\n          var receivedLen = 0;\n        }\n\n        var checkContentLengthAndEmit = function checkContentLengthAndEmit() {\n          if (shouldCheckContentLength && receivedLen !== expectedLen) {\n            stream.emit('error', AWS.util.error(\n              new Error('Stream content length mismatch. Received ' +\n                receivedLen + ' of ' + expectedLen + ' bytes.'),\n              { code: 'StreamContentLengthMismatch' }\n            ));\n          } else if (AWS.HttpClient.streamsApiVersion === 2) {\n            stream.end();\n          } else {\n            stream.emit('end');\n          }\n        };\n\n        var httpStream = resp.httpResponse.createUnbufferedStream();\n\n        if (AWS.HttpClient.streamsApiVersion === 2) {\n          if (shouldCheckContentLength) {\n            var lengthAccumulator = new streams.PassThrough();\n            lengthAccumulator._write = function(chunk) {\n              if (chunk && chunk.length) {\n                receivedLen += chunk.length;\n              }\n              return streams.PassThrough.prototype._write.apply(this, arguments);\n            };\n\n            lengthAccumulator.on('end', checkContentLengthAndEmit);\n            stream.on('error', function(err) {\n              shouldCheckContentLength = false;\n              httpStream.unpipe(lengthAccumulator);\n              lengthAccumulator.emit('end');\n              lengthAccumulator.end();\n            });\n            httpStream.pipe(lengthAccumulator).pipe(stream, { end: false });\n          } else {\n            httpStream.pipe(stream);\n          }\n        } else {\n\n          if (shouldCheckContentLength) {\n            httpStream.on('data', function(arg) {\n              if (arg && arg.length) {\n                receivedLen += arg.length;\n              }\n            });\n          }\n\n          httpStream.on('data', function(arg) {\n            stream.emit('data', arg);\n          });\n          httpStream.on('end', checkContentLengthAndEmit);\n        }\n\n        httpStream.on('error', function(err) {\n          shouldCheckContentLength = false;\n          stream.emit('error', err);\n        });\n      }\n    });\n\n    return stream;\n  },\n\n  /**\n   * @param [Array,Response] args This should be the response object,\n   *   or an array of args to send to the event.\n   * @api private\n   */\n  emitEvent: function emit(eventName, args, done) {\n    if (typeof args === 'function') { done = args; args = null; }\n    if (!done) done = function() { };\n    if (!args) args = this.eventParameters(eventName, this.response);\n\n    var origEmit = AWS.SequentialExecutor.prototype.emit;\n    origEmit.call(this, eventName, args, function (err) {\n      if (err) this.response.error = err;\n      done.call(this, err);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  eventParameters: function eventParameters(eventName) {\n    switch (eventName) {\n      case 'restart':\n      case 'validate':\n      case 'sign':\n      case 'build':\n      case 'afterValidate':\n      case 'afterBuild':\n        return [this];\n      case 'error':\n        return [this.response.error, this.response];\n      default:\n        return [this.response];\n    }\n  },\n\n  /**\n   * @api private\n   */\n  presign: function presign(expires, callback) {\n    if (!callback && typeof expires === 'function') {\n      callback = expires;\n      expires = null;\n    }\n    return new AWS.Signers.Presign().sign(this.toGet(), expires, callback);\n  },\n\n  /**\n   * @api private\n   */\n  isPresigned: function isPresigned() {\n    return Object.prototype.hasOwnProperty.call(this.httpRequest.headers, 'presigned-expires');\n  },\n\n  /**\n   * @api private\n   */\n  toUnauthenticated: function toUnauthenticated() {\n    this._unAuthenticated = true;\n    this.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);\n    this.removeListener('sign', AWS.EventListeners.Core.SIGN);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  toGet: function toGet() {\n    if (this.service.api.protocol === 'query' ||\n        this.service.api.protocol === 'ec2') {\n      this.removeListener('build', this.buildAsGet);\n      this.addListener('build', this.buildAsGet);\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  buildAsGet: function buildAsGet(request) {\n    request.httpRequest.method = 'GET';\n    request.httpRequest.path = request.service.endpoint.path +\n                               '?' + request.httpRequest.body;\n    request.httpRequest.body = '';\n\n    // don't need these headers on a GET request\n    delete request.httpRequest.headers['Content-Length'];\n    delete request.httpRequest.headers['Content-Type'];\n  },\n\n  /**\n   * @api private\n   */\n  haltHandlersOnError: function haltHandlersOnError() {\n    this._haltHandlersOnError = true;\n  }\n});\n\n/**\n * @api private\n */\nAWS.Request.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = function promise() {\n    var self = this;\n    // append to user agent\n    this.httpRequest.appendToUserAgent('promise');\n    return new PromiseDependency(function(resolve, reject) {\n      self.on('complete', function(resp) {\n        if (resp.error) {\n          reject(resp.error);\n        } else {\n          // define $response property so that it is not enumerable\n          // this prevents circular reference errors when stringifying the JSON object\n          resolve(Object.defineProperty(\n            resp.data || {},\n            '$response',\n            {value: resp}\n          ));\n        }\n      });\n      self.runTo();\n    });\n  };\n};\n\n/**\n * @api private\n */\nAWS.Request.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.Request);\n\nAWS.util.mixin(AWS.Request, AWS.SequentialExecutor);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/request.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/resource_waiter.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/resource_waiter.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You\n * may not use this file except in compliance with the License. A copy of\n * the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n */\n\nvar AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\nvar jmespath = __webpack_require__(/*! jmespath */ \"(rsc)/../../node_modules/jmespath/jmespath.js\");\n\n/**\n * @api private\n */\nfunction CHECK_ACCEPTORS(resp) {\n  var waiter = resp.request._waiter;\n  var acceptors = waiter.config.acceptors;\n  var acceptorMatched = false;\n  var state = 'retry';\n\n  acceptors.forEach(function(acceptor) {\n    if (!acceptorMatched) {\n      var matcher = waiter.matchers[acceptor.matcher];\n      if (matcher && matcher(resp, acceptor.expected, acceptor.argument)) {\n        acceptorMatched = true;\n        state = acceptor.state;\n      }\n    }\n  });\n\n  if (!acceptorMatched && resp.error) state = 'failure';\n\n  if (state === 'success') {\n    waiter.setSuccess(resp);\n  } else {\n    waiter.setError(resp, state === 'retry');\n  }\n}\n\n/**\n * @api private\n */\nAWS.ResourceWaiter = inherit({\n  /**\n   * Waits for a given state on a service object\n   * @param service [Service] the service object to wait on\n   * @param state [String] the state (defined in waiter configuration) to wait\n   *   for.\n   * @example Create a waiter for running EC2 instances\n   *   var ec2 = new AWS.EC2;\n   *   var waiter = new AWS.ResourceWaiter(ec2, 'instanceRunning');\n   */\n  constructor: function constructor(service, state) {\n    this.service = service;\n    this.state = state;\n    this.loadWaiterConfig(this.state);\n  },\n\n  service: null,\n\n  state: null,\n\n  config: null,\n\n  matchers: {\n    path: function(resp, expected, argument) {\n      try {\n        var result = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      return jmespath.strictDeepEqual(result,expected);\n    },\n\n    pathAll: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      if (!numResults) return false;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (!jmespath.strictDeepEqual(results[ind], expected)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    pathAny: function(resp, expected, argument) {\n      try {\n        var results = jmespath.search(resp.data, argument);\n      } catch (err) {\n        return false;\n      }\n\n      if (!Array.isArray(results)) results = [results];\n      var numResults = results.length;\n      for (var ind = 0 ; ind < numResults; ind++) {\n        if (jmespath.strictDeepEqual(results[ind], expected)) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    status: function(resp, expected) {\n      var statusCode = resp.httpResponse.statusCode;\n      return (typeof statusCode === 'number') && (statusCode === expected);\n    },\n\n    error: function(resp, expected) {\n      if (typeof expected === 'string' && resp.error) {\n        return expected === resp.error.code;\n      }\n      // if expected is not string, can be boolean indicating presence of error\n      return expected === !!resp.error;\n    }\n  },\n\n  listeners: new AWS.SequentialExecutor().addNamedListeners(function(add) {\n    add('RETRY_CHECK', 'retry', function(resp) {\n      var waiter = resp.request._waiter;\n      if (resp.error && resp.error.code === 'ResourceNotReady') {\n        resp.error.retryDelay = (waiter.config.delay || 0) * 1000;\n      }\n    });\n\n    add('CHECK_OUTPUT', 'extractData', CHECK_ACCEPTORS);\n\n    add('CHECK_ERROR', 'extractError', CHECK_ACCEPTORS);\n  }),\n\n  /**\n   * @return [AWS.Request]\n   */\n  wait: function wait(params, callback) {\n    if (typeof params === 'function') {\n      callback = params; params = undefined;\n    }\n\n    if (params && params.$waiter) {\n      params = AWS.util.copy(params);\n      if (typeof params.$waiter.delay === 'number') {\n        this.config.delay = params.$waiter.delay;\n      }\n      if (typeof params.$waiter.maxAttempts === 'number') {\n        this.config.maxAttempts = params.$waiter.maxAttempts;\n      }\n      delete params.$waiter;\n    }\n\n    var request = this.service.makeRequest(this.config.operation, params);\n    request._waiter = this;\n    request.response.maxRetries = this.config.maxAttempts;\n    request.addListeners(this.listeners);\n\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  setSuccess: function setSuccess(resp) {\n    resp.error = null;\n    resp.data = resp.data || {};\n    resp.request.removeAllListeners('extractData');\n  },\n\n  setError: function setError(resp, retryable) {\n    resp.data = null;\n    resp.error = AWS.util.error(resp.error || new Error(), {\n      code: 'ResourceNotReady',\n      message: 'Resource is not in the state ' + this.state,\n      retryable: retryable\n    });\n  },\n\n  /**\n   * Loads waiter configuration from API configuration\n   *\n   * @api private\n   */\n  loadWaiterConfig: function loadWaiterConfig(state) {\n    if (!this.service.api.waiters[state]) {\n      throw new AWS.util.error(new Error(), {\n        code: 'StateNotFoundError',\n        message: 'State ' + state + ' not found.'\n      });\n    }\n\n    this.config = AWS.util.copy(this.service.api.waiters[state]);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/resource_waiter.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/response.js":
/*!**************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/response.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\nvar jmespath = __webpack_require__(/*! jmespath */ \"(rsc)/../../node_modules/jmespath/jmespath.js\");\n\n/**\n * This class encapsulates the response information\n * from a service request operation sent through {AWS.Request}.\n * The response object has two main properties for getting information\n * back from a request:\n *\n * ## The `data` property\n *\n * The `response.data` property contains the serialized object data\n * retrieved from the service request. For instance, for an\n * Amazon DynamoDB `listTables` method call, the response data might\n * look like:\n *\n * ```\n * > resp.data\n * { TableNames:\n *    [ 'table1', 'table2', ... ] }\n * ```\n *\n * The `data` property can be null if an error occurs (see below).\n *\n * ## The `error` property\n *\n * In the event of a service error (or transfer error), the\n * `response.error` property will be filled with the given\n * error data in the form:\n *\n * ```\n * { code: 'SHORT_UNIQUE_ERROR_CODE',\n *   message: 'Some human readable error message' }\n * ```\n *\n * In the case of an error, the `data` property will be `null`.\n * Note that if you handle events that can be in a failure state,\n * you should always check whether `response.error` is set\n * before attempting to access the `response.data` property.\n *\n * @!attribute data\n *   @readonly\n *   @!group Data Properties\n *   @note Inside of a {AWS.Request~httpData} event, this\n *     property contains a single raw packet instead of the\n *     full de-serialized service response.\n *   @return [Object] the de-serialized response data\n *     from the service.\n *\n * @!attribute error\n *   An structure containing information about a service\n *   or networking error.\n *   @readonly\n *   @!group Data Properties\n *   @note This attribute is only filled if a service or\n *     networking error occurs.\n *   @return [Error]\n *     * code [String] a unique short code representing the\n *       error that was emitted.\n *     * message [String] a longer human readable error message\n *     * retryable [Boolean] whether the error message is\n *       retryable.\n *     * statusCode [Numeric] in the case of a request that reached the service,\n *       this value contains the response status code.\n *     * time [Date] the date time object when the error occurred.\n *     * hostname [String] set when a networking error occurs to easily\n *       identify the endpoint of the request.\n *     * region [String] set when a networking error occurs to easily\n *       identify the region of the request.\n *\n * @!attribute requestId\n *   @readonly\n *   @!group Data Properties\n *   @return [String] the unique request ID associated with the response.\n *     Log this value when debugging requests for AWS support.\n *\n * @!attribute retryCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of retries that were\n *     attempted before the request was completed.\n *\n * @!attribute redirectCount\n *   @readonly\n *   @!group Operation Properties\n *   @return [Integer] the number of redirects that were\n *     followed before the request was completed.\n *\n * @!attribute httpResponse\n *   @readonly\n *   @!group HTTP Properties\n *   @return [AWS.HttpResponse] the raw HTTP response object\n *     containing the response headers and body information\n *     from the server.\n *\n * @see AWS.Request\n */\nAWS.Response = inherit({\n\n  /**\n   * @api private\n   */\n  constructor: function Response(request) {\n    this.request = request;\n    this.data = null;\n    this.error = null;\n    this.retryCount = 0;\n    this.redirectCount = 0;\n    this.httpResponse = new AWS.HttpResponse();\n    if (request) {\n      this.maxRetries = request.service.numRetries();\n      this.maxRedirects = request.service.config.maxRedirects;\n    }\n  },\n\n  /**\n   * Creates a new request for the next page of response data, calling the\n   * callback with the page data if a callback is provided.\n   *\n   * @callback callback function(err, data)\n   *   Called when a page of data is returned from the next request.\n   *\n   *   @param err [Error] an error object, if an error occurred in the request\n   *   @param data [Object] the next page of data, or null, if there are no\n   *     more pages left.\n   * @return [AWS.Request] the request object for the next page of data\n   * @return [null] if no callback is provided and there are no pages left\n   *   to retrieve.\n   * @since v1.4.0\n   */\n  nextPage: function nextPage(callback) {\n    var config;\n    var service = this.request.service;\n    var operation = this.request.operation;\n    try {\n      config = service.paginationConfig(operation, true);\n    } catch (e) { this.error = e; }\n\n    if (!this.hasNextPage()) {\n      if (callback) callback(this.error, null);\n      else if (this.error) throw this.error;\n      return null;\n    }\n\n    var params = AWS.util.copy(this.request.params);\n    if (!this.nextPageTokens) {\n      return callback ? callback(null, null) : null;\n    } else {\n      var inputTokens = config.inputToken;\n      if (typeof inputTokens === 'string') inputTokens = [inputTokens];\n      for (var i = 0; i < inputTokens.length; i++) {\n        params[inputTokens[i]] = this.nextPageTokens[i];\n      }\n      return service.makeRequest(this.request.operation, params, callback);\n    }\n  },\n\n  /**\n   * @return [Boolean] whether more pages of data can be returned by further\n   *   requests\n   * @since v1.4.0\n   */\n  hasNextPage: function hasNextPage() {\n    this.cacheNextPageTokens();\n    if (this.nextPageTokens) return true;\n    if (this.nextPageTokens === undefined) return undefined;\n    else return false;\n  },\n\n  /**\n   * @api private\n   */\n  cacheNextPageTokens: function cacheNextPageTokens() {\n    if (Object.prototype.hasOwnProperty.call(this, 'nextPageTokens')) return this.nextPageTokens;\n    this.nextPageTokens = undefined;\n\n    var config = this.request.service.paginationConfig(this.request.operation);\n    if (!config) return this.nextPageTokens;\n\n    this.nextPageTokens = null;\n    if (config.moreResults) {\n      if (!jmespath.search(this.data, config.moreResults)) {\n        return this.nextPageTokens;\n      }\n    }\n\n    var exprs = config.outputToken;\n    if (typeof exprs === 'string') exprs = [exprs];\n    AWS.util.arrayEach.call(this, exprs, function (expr) {\n      var output = jmespath.search(this.data, expr);\n      if (output) {\n        this.nextPageTokens = this.nextPageTokens || [];\n        this.nextPageTokens.push(output);\n      }\n    });\n\n    return this.nextPageTokens;\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw0REFBUTtBQUMxQjtBQUNBLGVBQWUsbUJBQU8sQ0FBQywrREFBVTs7QUFFakM7QUFDQTtBQUNBLGtEQUFrRCxZQUFZO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sWUFBWTs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLHNCQUFzQix3QkFBd0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Jlc3BvbnNlLmpzPzhmMmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4vY29yZScpO1xudmFyIGluaGVyaXQgPSBBV1MudXRpbC5pbmhlcml0O1xudmFyIGptZXNwYXRoID0gcmVxdWlyZSgnam1lc3BhdGgnKTtcblxuLyoqXG4gKiBUaGlzIGNsYXNzIGVuY2Fwc3VsYXRlcyB0aGUgcmVzcG9uc2UgaW5mb3JtYXRpb25cbiAqIGZyb20gYSBzZXJ2aWNlIHJlcXVlc3Qgb3BlcmF0aW9uIHNlbnQgdGhyb3VnaCB7QVdTLlJlcXVlc3R9LlxuICogVGhlIHJlc3BvbnNlIG9iamVjdCBoYXMgdHdvIG1haW4gcHJvcGVydGllcyBmb3IgZ2V0dGluZyBpbmZvcm1hdGlvblxuICogYmFjayBmcm9tIGEgcmVxdWVzdDpcbiAqXG4gKiAjIyBUaGUgYGRhdGFgIHByb3BlcnR5XG4gKlxuICogVGhlIGByZXNwb25zZS5kYXRhYCBwcm9wZXJ0eSBjb250YWlucyB0aGUgc2VyaWFsaXplZCBvYmplY3QgZGF0YVxuICogcmV0cmlldmVkIGZyb20gdGhlIHNlcnZpY2UgcmVxdWVzdC4gRm9yIGluc3RhbmNlLCBmb3IgYW5cbiAqIEFtYXpvbiBEeW5hbW9EQiBgbGlzdFRhYmxlc2AgbWV0aG9kIGNhbGwsIHRoZSByZXNwb25zZSBkYXRhIG1pZ2h0XG4gKiBsb29rIGxpa2U6XG4gKlxuICogYGBgXG4gKiA+IHJlc3AuZGF0YVxuICogeyBUYWJsZU5hbWVzOlxuICogICAgWyAndGFibGUxJywgJ3RhYmxlMicsIC4uLiBdIH1cbiAqIGBgYFxuICpcbiAqIFRoZSBgZGF0YWAgcHJvcGVydHkgY2FuIGJlIG51bGwgaWYgYW4gZXJyb3Igb2NjdXJzIChzZWUgYmVsb3cpLlxuICpcbiAqICMjIFRoZSBgZXJyb3JgIHByb3BlcnR5XG4gKlxuICogSW4gdGhlIGV2ZW50IG9mIGEgc2VydmljZSBlcnJvciAob3IgdHJhbnNmZXIgZXJyb3IpLCB0aGVcbiAqIGByZXNwb25zZS5lcnJvcmAgcHJvcGVydHkgd2lsbCBiZSBmaWxsZWQgd2l0aCB0aGUgZ2l2ZW5cbiAqIGVycm9yIGRhdGEgaW4gdGhlIGZvcm06XG4gKlxuICogYGBgXG4gKiB7IGNvZGU6ICdTSE9SVF9VTklRVUVfRVJST1JfQ09ERScsXG4gKiAgIG1lc3NhZ2U6ICdTb21lIGh1bWFuIHJlYWRhYmxlIGVycm9yIG1lc3NhZ2UnIH1cbiAqIGBgYFxuICpcbiAqIEluIHRoZSBjYXNlIG9mIGFuIGVycm9yLCB0aGUgYGRhdGFgIHByb3BlcnR5IHdpbGwgYmUgYG51bGxgLlxuICogTm90ZSB0aGF0IGlmIHlvdSBoYW5kbGUgZXZlbnRzIHRoYXQgY2FuIGJlIGluIGEgZmFpbHVyZSBzdGF0ZSxcbiAqIHlvdSBzaG91bGQgYWx3YXlzIGNoZWNrIHdoZXRoZXIgYHJlc3BvbnNlLmVycm9yYCBpcyBzZXRcbiAqIGJlZm9yZSBhdHRlbXB0aW5nIHRvIGFjY2VzcyB0aGUgYHJlc3BvbnNlLmRhdGFgIHByb3BlcnR5LlxuICpcbiAqIEAhYXR0cmlidXRlIGRhdGFcbiAqICAgQHJlYWRvbmx5XG4gKiAgIEAhZ3JvdXAgRGF0YSBQcm9wZXJ0aWVzXG4gKiAgIEBub3RlIEluc2lkZSBvZiBhIHtBV1MuUmVxdWVzdH5odHRwRGF0YX0gZXZlbnQsIHRoaXNcbiAqICAgICBwcm9wZXJ0eSBjb250YWlucyBhIHNpbmdsZSByYXcgcGFja2V0IGluc3RlYWQgb2YgdGhlXG4gKiAgICAgZnVsbCBkZS1zZXJpYWxpemVkIHNlcnZpY2UgcmVzcG9uc2UuXG4gKiAgIEByZXR1cm4gW09iamVjdF0gdGhlIGRlLXNlcmlhbGl6ZWQgcmVzcG9uc2UgZGF0YVxuICogICAgIGZyb20gdGhlIHNlcnZpY2UuXG4gKlxuICogQCFhdHRyaWJ1dGUgZXJyb3JcbiAqICAgQW4gc3RydWN0dXJlIGNvbnRhaW5pbmcgaW5mb3JtYXRpb24gYWJvdXQgYSBzZXJ2aWNlXG4gKiAgIG9yIG5ldHdvcmtpbmcgZXJyb3IuXG4gKiAgIEByZWFkb25seVxuICogICBAIWdyb3VwIERhdGEgUHJvcGVydGllc1xuICogICBAbm90ZSBUaGlzIGF0dHJpYnV0ZSBpcyBvbmx5IGZpbGxlZCBpZiBhIHNlcnZpY2Ugb3JcbiAqICAgICBuZXR3b3JraW5nIGVycm9yIG9jY3Vycy5cbiAqICAgQHJldHVybiBbRXJyb3JdXG4gKiAgICAgKiBjb2RlIFtTdHJpbmddIGEgdW5pcXVlIHNob3J0IGNvZGUgcmVwcmVzZW50aW5nIHRoZVxuICogICAgICAgZXJyb3IgdGhhdCB3YXMgZW1pdHRlZC5cbiAqICAgICAqIG1lc3NhZ2UgW1N0cmluZ10gYSBsb25nZXIgaHVtYW4gcmVhZGFibGUgZXJyb3IgbWVzc2FnZVxuICogICAgICogcmV0cnlhYmxlIFtCb29sZWFuXSB3aGV0aGVyIHRoZSBlcnJvciBtZXNzYWdlIGlzXG4gKiAgICAgICByZXRyeWFibGUuXG4gKiAgICAgKiBzdGF0dXNDb2RlIFtOdW1lcmljXSBpbiB0aGUgY2FzZSBvZiBhIHJlcXVlc3QgdGhhdCByZWFjaGVkIHRoZSBzZXJ2aWNlLFxuICogICAgICAgdGhpcyB2YWx1ZSBjb250YWlucyB0aGUgcmVzcG9uc2Ugc3RhdHVzIGNvZGUuXG4gKiAgICAgKiB0aW1lIFtEYXRlXSB0aGUgZGF0ZSB0aW1lIG9iamVjdCB3aGVuIHRoZSBlcnJvciBvY2N1cnJlZC5cbiAqICAgICAqIGhvc3RuYW1lIFtTdHJpbmddIHNldCB3aGVuIGEgbmV0d29ya2luZyBlcnJvciBvY2N1cnMgdG8gZWFzaWx5XG4gKiAgICAgICBpZGVudGlmeSB0aGUgZW5kcG9pbnQgb2YgdGhlIHJlcXVlc3QuXG4gKiAgICAgKiByZWdpb24gW1N0cmluZ10gc2V0IHdoZW4gYSBuZXR3b3JraW5nIGVycm9yIG9jY3VycyB0byBlYXNpbHlcbiAqICAgICAgIGlkZW50aWZ5IHRoZSByZWdpb24gb2YgdGhlIHJlcXVlc3QuXG4gKlxuICogQCFhdHRyaWJ1dGUgcmVxdWVzdElkXG4gKiAgIEByZWFkb25seVxuICogICBAIWdyb3VwIERhdGEgUHJvcGVydGllc1xuICogICBAcmV0dXJuIFtTdHJpbmddIHRoZSB1bmlxdWUgcmVxdWVzdCBJRCBhc3NvY2lhdGVkIHdpdGggdGhlIHJlc3BvbnNlLlxuICogICAgIExvZyB0aGlzIHZhbHVlIHdoZW4gZGVidWdnaW5nIHJlcXVlc3RzIGZvciBBV1Mgc3VwcG9ydC5cbiAqXG4gKiBAIWF0dHJpYnV0ZSByZXRyeUNvdW50XG4gKiAgIEByZWFkb25seVxuICogICBAIWdyb3VwIE9wZXJhdGlvbiBQcm9wZXJ0aWVzXG4gKiAgIEByZXR1cm4gW0ludGVnZXJdIHRoZSBudW1iZXIgb2YgcmV0cmllcyB0aGF0IHdlcmVcbiAqICAgICBhdHRlbXB0ZWQgYmVmb3JlIHRoZSByZXF1ZXN0IHdhcyBjb21wbGV0ZWQuXG4gKlxuICogQCFhdHRyaWJ1dGUgcmVkaXJlY3RDb3VudFxuICogICBAcmVhZG9ubHlcbiAqICAgQCFncm91cCBPcGVyYXRpb24gUHJvcGVydGllc1xuICogICBAcmV0dXJuIFtJbnRlZ2VyXSB0aGUgbnVtYmVyIG9mIHJlZGlyZWN0cyB0aGF0IHdlcmVcbiAqICAgICBmb2xsb3dlZCBiZWZvcmUgdGhlIHJlcXVlc3Qgd2FzIGNvbXBsZXRlZC5cbiAqXG4gKiBAIWF0dHJpYnV0ZSBodHRwUmVzcG9uc2VcbiAqICAgQHJlYWRvbmx5XG4gKiAgIEAhZ3JvdXAgSFRUUCBQcm9wZXJ0aWVzXG4gKiAgIEByZXR1cm4gW0FXUy5IdHRwUmVzcG9uc2VdIHRoZSByYXcgSFRUUCByZXNwb25zZSBvYmplY3RcbiAqICAgICBjb250YWluaW5nIHRoZSByZXNwb25zZSBoZWFkZXJzIGFuZCBib2R5IGluZm9ybWF0aW9uXG4gKiAgICAgZnJvbSB0aGUgc2VydmVyLlxuICpcbiAqIEBzZWUgQVdTLlJlcXVlc3RcbiAqL1xuQVdTLlJlc3BvbnNlID0gaW5oZXJpdCh7XG5cbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgY29uc3RydWN0b3I6IGZ1bmN0aW9uIFJlc3BvbnNlKHJlcXVlc3QpIHtcbiAgICB0aGlzLnJlcXVlc3QgPSByZXF1ZXN0O1xuICAgIHRoaXMuZGF0YSA9IG51bGw7XG4gICAgdGhpcy5lcnJvciA9IG51bGw7XG4gICAgdGhpcy5yZXRyeUNvdW50ID0gMDtcbiAgICB0aGlzLnJlZGlyZWN0Q291bnQgPSAwO1xuICAgIHRoaXMuaHR0cFJlc3BvbnNlID0gbmV3IEFXUy5IdHRwUmVzcG9uc2UoKTtcbiAgICBpZiAocmVxdWVzdCkge1xuICAgICAgdGhpcy5tYXhSZXRyaWVzID0gcmVxdWVzdC5zZXJ2aWNlLm51bVJldHJpZXMoKTtcbiAgICAgIHRoaXMubWF4UmVkaXJlY3RzID0gcmVxdWVzdC5zZXJ2aWNlLmNvbmZpZy5tYXhSZWRpcmVjdHM7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IHJlcXVlc3QgZm9yIHRoZSBuZXh0IHBhZ2Ugb2YgcmVzcG9uc2UgZGF0YSwgY2FsbGluZyB0aGVcbiAgICogY2FsbGJhY2sgd2l0aCB0aGUgcGFnZSBkYXRhIGlmIGEgY2FsbGJhY2sgaXMgcHJvdmlkZWQuXG4gICAqXG4gICAqIEBjYWxsYmFjayBjYWxsYmFjayBmdW5jdGlvbihlcnIsIGRhdGEpXG4gICAqICAgQ2FsbGVkIHdoZW4gYSBwYWdlIG9mIGRhdGEgaXMgcmV0dXJuZWQgZnJvbSB0aGUgbmV4dCByZXF1ZXN0LlxuICAgKlxuICAgKiAgIEBwYXJhbSBlcnIgW0Vycm9yXSBhbiBlcnJvciBvYmplY3QsIGlmIGFuIGVycm9yIG9jY3VycmVkIGluIHRoZSByZXF1ZXN0XG4gICAqICAgQHBhcmFtIGRhdGEgW09iamVjdF0gdGhlIG5leHQgcGFnZSBvZiBkYXRhLCBvciBudWxsLCBpZiB0aGVyZSBhcmUgbm9cbiAgICogICAgIG1vcmUgcGFnZXMgbGVmdC5cbiAgICogQHJldHVybiBbQVdTLlJlcXVlc3RdIHRoZSByZXF1ZXN0IG9iamVjdCBmb3IgdGhlIG5leHQgcGFnZSBvZiBkYXRhXG4gICAqIEByZXR1cm4gW251bGxdIGlmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkIGFuZCB0aGVyZSBhcmUgbm8gcGFnZXMgbGVmdFxuICAgKiAgIHRvIHJldHJpZXZlLlxuICAgKiBAc2luY2UgdjEuNC4wXG4gICAqL1xuICBuZXh0UGFnZTogZnVuY3Rpb24gbmV4dFBhZ2UoY2FsbGJhY2spIHtcbiAgICB2YXIgY29uZmlnO1xuICAgIHZhciBzZXJ2aWNlID0gdGhpcy5yZXF1ZXN0LnNlcnZpY2U7XG4gICAgdmFyIG9wZXJhdGlvbiA9IHRoaXMucmVxdWVzdC5vcGVyYXRpb247XG4gICAgdHJ5IHtcbiAgICAgIGNvbmZpZyA9IHNlcnZpY2UucGFnaW5hdGlvbkNvbmZpZyhvcGVyYXRpb24sIHRydWUpO1xuICAgIH0gY2F0Y2ggKGUpIHsgdGhpcy5lcnJvciA9IGU7IH1cblxuICAgIGlmICghdGhpcy5oYXNOZXh0UGFnZSgpKSB7XG4gICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKHRoaXMuZXJyb3IsIG51bGwpO1xuICAgICAgZWxzZSBpZiAodGhpcy5lcnJvcikgdGhyb3cgdGhpcy5lcnJvcjtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBwYXJhbXMgPSBBV1MudXRpbC5jb3B5KHRoaXMucmVxdWVzdC5wYXJhbXMpO1xuICAgIGlmICghdGhpcy5uZXh0UGFnZVRva2Vucykge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrID8gY2FsbGJhY2sobnVsbCwgbnVsbCkgOiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgaW5wdXRUb2tlbnMgPSBjb25maWcuaW5wdXRUb2tlbjtcbiAgICAgIGlmICh0eXBlb2YgaW5wdXRUb2tlbnMgPT09ICdzdHJpbmcnKSBpbnB1dFRva2VucyA9IFtpbnB1dFRva2Vuc107XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlucHV0VG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHBhcmFtc1tpbnB1dFRva2Vuc1tpXV0gPSB0aGlzLm5leHRQYWdlVG9rZW5zW2ldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNlcnZpY2UubWFrZVJlcXVlc3QodGhpcy5yZXF1ZXN0Lm9wZXJhdGlvbiwgcGFyYW1zLCBjYWxsYmFjayk7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIFtCb29sZWFuXSB3aGV0aGVyIG1vcmUgcGFnZXMgb2YgZGF0YSBjYW4gYmUgcmV0dXJuZWQgYnkgZnVydGhlclxuICAgKiAgIHJlcXVlc3RzXG4gICAqIEBzaW5jZSB2MS40LjBcbiAgICovXG4gIGhhc05leHRQYWdlOiBmdW5jdGlvbiBoYXNOZXh0UGFnZSgpIHtcbiAgICB0aGlzLmNhY2hlTmV4dFBhZ2VUb2tlbnMoKTtcbiAgICBpZiAodGhpcy5uZXh0UGFnZVRva2VucykgcmV0dXJuIHRydWU7XG4gICAgaWYgKHRoaXMubmV4dFBhZ2VUb2tlbnMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICBlbHNlIHJldHVybiBmYWxzZTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBjYWNoZU5leHRQYWdlVG9rZW5zOiBmdW5jdGlvbiBjYWNoZU5leHRQYWdlVG9rZW5zKCkge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcywgJ25leHRQYWdlVG9rZW5zJykpIHJldHVybiB0aGlzLm5leHRQYWdlVG9rZW5zO1xuICAgIHRoaXMubmV4dFBhZ2VUb2tlbnMgPSB1bmRlZmluZWQ7XG5cbiAgICB2YXIgY29uZmlnID0gdGhpcy5yZXF1ZXN0LnNlcnZpY2UucGFnaW5hdGlvbkNvbmZpZyh0aGlzLnJlcXVlc3Qub3BlcmF0aW9uKTtcbiAgICBpZiAoIWNvbmZpZykgcmV0dXJuIHRoaXMubmV4dFBhZ2VUb2tlbnM7XG5cbiAgICB0aGlzLm5leHRQYWdlVG9rZW5zID0gbnVsbDtcbiAgICBpZiAoY29uZmlnLm1vcmVSZXN1bHRzKSB7XG4gICAgICBpZiAoIWptZXNwYXRoLnNlYXJjaCh0aGlzLmRhdGEsIGNvbmZpZy5tb3JlUmVzdWx0cykpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmV4dFBhZ2VUb2tlbnM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGV4cHJzID0gY29uZmlnLm91dHB1dFRva2VuO1xuICAgIGlmICh0eXBlb2YgZXhwcnMgPT09ICdzdHJpbmcnKSBleHBycyA9IFtleHByc107XG4gICAgQVdTLnV0aWwuYXJyYXlFYWNoLmNhbGwodGhpcywgZXhwcnMsIGZ1bmN0aW9uIChleHByKSB7XG4gICAgICB2YXIgb3V0cHV0ID0gam1lc3BhdGguc2VhcmNoKHRoaXMuZGF0YSwgZXhwcik7XG4gICAgICBpZiAob3V0cHV0KSB7XG4gICAgICAgIHRoaXMubmV4dFBhZ2VUb2tlbnMgPSB0aGlzLm5leHRQYWdlVG9rZW5zIHx8IFtdO1xuICAgICAgICB0aGlzLm5leHRQYWdlVG9rZW5zLnB1c2gob3V0cHV0KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLm5leHRQYWdlVG9rZW5zO1xuICB9XG5cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/response.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/s3/managed_upload.js":
/*!***********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/s3/managed_upload.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar byteLength = AWS.util.string.byteLength;\nvar Buffer = AWS.util.Buffer;\n\n/**\n * The managed uploader allows for easy and efficient uploading of buffers,\n * blobs, or streams, using a configurable amount of concurrency to perform\n * multipart uploads where possible. This abstraction also enables uploading\n * streams of unknown size due to the use of multipart uploads.\n *\n * To construct a managed upload object, see the {constructor} function.\n *\n * ## Tracking upload progress\n *\n * The managed upload object can also track progress by attaching an\n * 'httpUploadProgress' listener to the upload manager. This event is similar\n * to {AWS.Request~httpUploadProgress} but groups all concurrent upload progress\n * into a single event. See {AWS.S3.ManagedUpload~httpUploadProgress} for more\n * information.\n *\n * ## Handling Multipart Cleanup\n *\n * By default, this class will automatically clean up any multipart uploads\n * when an individual part upload fails. This behavior can be disabled in order\n * to manually handle failures by setting the `leavePartsOnError` configuration\n * option to `true` when initializing the upload object.\n *\n * @!event httpUploadProgress(progress)\n *   Triggered when the uploader has uploaded more data.\n *   @note The `total` property may not be set if the stream being uploaded has\n *     not yet finished chunking. In this case the `total` will be undefined\n *     until the total stream size is known.\n *   @note This event will not be emitted in Node.js 0.8.x.\n *   @param progress [map] An object containing the `loaded` and `total` bytes\n *     of the request and the `key` of the S3 object. Note that `total` may be undefined until the payload\n *     size is known.\n *   @context (see AWS.Request~send)\n */\nAWS.S3.ManagedUpload = AWS.util.inherit({\n  /**\n   * Creates a managed upload object with a set of configuration options.\n   *\n   * @note A \"Body\" parameter is required to be set prior to calling {send}.\n   * @note In Node.js, sending \"Body\" as {https://nodejs.org/dist/latest/docs/api/stream.html#stream_object_mode object-mode stream}\n   *   may result in upload hangs. Using buffer stream is preferable.\n   * @option options params [map] a map of parameters to pass to the upload\n   *   requests. The \"Body\" parameter is required to be specified either on\n   *   the service or in the params option.\n   * @note ContentMD5 should not be provided when using the managed upload object.\n   *   Instead, setting \"computeChecksums\" to true will enable automatic ContentMD5 generation\n   *   by the managed upload object.\n   * @option options queueSize [Number] (4) the size of the concurrent queue\n   *   manager to upload parts in parallel. Set to 1 for synchronous uploading\n   *   of parts. Note that the uploader will buffer at most queueSize * partSize\n   *   bytes into memory at any given time.\n   * @option options partSize [Number] (5mb) the size in bytes for each\n   *   individual part to be uploaded. Adjust the part size to ensure the number\n   *   of parts does not exceed {maxTotalParts}. See {minPartSize} for the\n   *   minimum allowed part size.\n   * @option options leavePartsOnError [Boolean] (false) whether to abort the\n   *   multipart upload if an error occurs. Set to true if you want to handle\n   *   failures manually.\n   * @option options service [AWS.S3] an optional S3 service object to use for\n   *   requests. This object might have bound parameters used by the uploader.\n   * @option options tags [Array<map>] The tags to apply to the uploaded object.\n   *   Each tag should have a `Key` and `Value` keys.\n   * @example Creating a default uploader for a stream object\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with concurrency of 1 and partSize of 10mb\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     partSize: 10 * 1024 * 1024, queueSize: 1,\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream}\n   *   });\n   * @example Creating an uploader with tags\n   *   var upload = new AWS.S3.ManagedUpload({\n   *     params: {Bucket: 'bucket', Key: 'key', Body: stream},\n   *     tags: [{Key: 'tag1', Value: 'value1'}, {Key: 'tag2', Value: 'value2'}]\n   *   });\n   * @see send\n   */\n  constructor: function ManagedUpload(options) {\n    var self = this;\n    AWS.SequentialExecutor.call(self);\n    self.body = null;\n    self.sliceFn = null;\n    self.callback = null;\n    self.parts = {};\n    self.completeInfo = [];\n    self.fillQueue = function() {\n      self.callback(new Error('Unsupported body payload ' + typeof self.body));\n    };\n\n    self.configure(options);\n  },\n\n  /**\n   * @api private\n   */\n  configure: function configure(options) {\n    options = options || {};\n    this.partSize = this.minPartSize;\n\n    if (options.queueSize) this.queueSize = options.queueSize;\n    if (options.partSize) this.partSize = options.partSize;\n    if (options.leavePartsOnError) this.leavePartsOnError = true;\n    if (options.tags) {\n      if (!Array.isArray(options.tags)) {\n        throw new Error('Tags must be specified as an array; ' +\n          typeof options.tags + ' provided.');\n      }\n      this.tags = options.tags;\n    }\n\n    if (this.partSize < this.minPartSize) {\n      throw new Error('partSize must be greater than ' +\n                      this.minPartSize);\n    }\n\n    this.service = options.service;\n    this.bindServiceObject(options.params);\n    this.validateBody();\n    this.adjustTotalBytes();\n  },\n\n  /**\n   * @api private\n   */\n  leavePartsOnError: false,\n\n  /**\n   * @api private\n   */\n  queueSize: 4,\n\n  /**\n   * @api private\n   */\n  partSize: null,\n\n  /**\n   * @readonly\n   * @return [Number] the minimum number of bytes for an individual part\n   *   upload.\n   */\n  minPartSize: 1024 * 1024 * 5,\n\n  /**\n   * @readonly\n   * @return [Number] the maximum allowed number of parts in a multipart upload.\n   */\n  maxTotalParts: 10000,\n\n  /**\n   * Initiates the managed upload for the payload.\n   *\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *     * `Location` (String) the URL of the uploaded object\n   *     * `ETag` (String) the ETag of the uploaded object\n   *     * `Bucket` (String) the bucket to which the object was uploaded\n   *     * `Key` (String) the key to which the object was uploaded\n   * @example Sending a managed upload object\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *   var upload = new AWS.S3.ManagedUpload({params: params});\n   *   upload.send(function(err, data) {\n   *     console.log(err, data);\n   *   });\n   */\n  send: function(callback) {\n    var self = this;\n    self.failed = false;\n    self.callback = callback || function(err) { if (err) throw err; };\n\n    var runFill = true;\n    if (self.sliceFn) {\n      self.fillQueue = self.fillBuffer;\n    } else if (AWS.util.isNode()) {\n      var Stream = AWS.util.stream.Stream;\n      if (self.body instanceof Stream) {\n        runFill = false;\n        self.fillQueue = self.fillStream;\n        self.partBuffers = [];\n        self.body.\n          on('error', function(err) { self.cleanup(err); }).\n          on('readable', function() { self.fillQueue(); }).\n          on('end', function() {\n            self.isDoneChunking = true;\n            self.numParts = self.totalPartNumbers;\n            self.fillQueue.call(self);\n\n            if (self.isDoneChunking && self.totalPartNumbers >= 1 && self.doneParts === self.numParts) {\n              self.finishMultiPart();\n            }\n          });\n      }\n    }\n\n    if (runFill) self.fillQueue.call(self);\n  },\n\n  /**\n   * @!method  promise()\n   *   Returns a 'thenable' promise.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(data)\n   *     Called if the promise is fulfilled.\n   *     @param data [map] The response data from the successful upload:\n   *       `Location` (String) the URL of the uploaded object\n   *       `ETag` (String) the ETag of the uploaded object\n   *       `Bucket` (String) the bucket to which the object was uploaded\n   *       `Key` (String) the key to which the object was uploaded\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] an error or null if no error occurred.\n   *   @return [Promise] A promise that represents the state of the upload request.\n   *   @example Sending an upload request using promises.\n   *     var upload = s3.upload({Bucket: 'bucket', Key: 'key', Body: stream});\n   *     var promise = upload.promise();\n   *     promise.then(function(data) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Aborts a managed upload, including all concurrent upload requests.\n   * @note By default, calling this function will cleanup a multipart upload\n   *   if one was created. To leave the multipart upload around after aborting\n   *   a request, configure `leavePartsOnError` to `true` in the {constructor}.\n   * @note Calling {abort} in the browser environment will not abort any requests\n   *   that are already in flight. If a multipart upload was created, any parts\n   *   not yet uploaded will not be sent, and the multipart upload will be cleaned up.\n   * @example Aborting an upload\n   *   var params = {\n   *     Bucket: 'bucket', Key: 'key',\n   *     Body: Buffer.alloc(1024 * 1024 * 25) // 25MB payload\n   *   };\n   *   var upload = s3.upload(params);\n   *   upload.send(function (err, data) {\n   *     if (err) console.log(\"Error:\", err.code, err.message);\n   *     else console.log(data);\n   *   });\n   *\n   *   // abort request in 1 second\n   *   setTimeout(upload.abort.bind(upload), 1000);\n   */\n  abort: function() {\n    var self = this;\n    //abort putObject request\n    if (self.isDoneChunking === true && self.totalPartNumbers === 1 && self.singlePart) {\n      self.singlePart.abort();\n    } else {\n      self.cleanup(AWS.util.error(new Error('Request aborted by user'), {\n        code: 'RequestAbortedError', retryable: false\n      }));\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBody: function validateBody() {\n    var self = this;\n    self.body = self.service.config.params.Body;\n    if (typeof self.body === 'string') {\n      self.body = AWS.util.buffer.toBuffer(self.body);\n    } else if (!self.body) {\n      throw new Error('params.Body is required');\n    }\n    self.sliceFn = AWS.util.arraySliceFn(self.body);\n  },\n\n  /**\n   * @api private\n   */\n  bindServiceObject: function bindServiceObject(params) {\n    params = params || {};\n    var self = this;\n    // bind parameters to new service object\n    if (!self.service) {\n      self.service = new AWS.S3({params: params});\n    } else {\n      // Create a new S3 client from the supplied client's constructor.\n      var service = self.service;\n      var config = AWS.util.copy(service.config);\n      config.signatureVersion = service.getSignatureVersion();\n      self.service = new service.constructor.__super__(config);\n      self.service.config.params =\n        AWS.util.merge(self.service.config.params || {}, params);\n      Object.defineProperty(self.service, '_originalConfig', {\n        get: function() { return service._originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  adjustTotalBytes: function adjustTotalBytes() {\n    var self = this;\n    try { // try to get totalBytes\n      self.totalBytes = byteLength(self.body);\n    } catch (e) { }\n\n    // try to adjust partSize if we know payload length\n    if (self.totalBytes) {\n      var newPartSize = Math.ceil(self.totalBytes / self.maxTotalParts);\n      if (newPartSize > self.partSize) self.partSize = newPartSize;\n    } else {\n      self.totalBytes = undefined;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isDoneChunking: false,\n\n  /**\n   * @api private\n   */\n  partPos: 0,\n\n  /**\n   * @api private\n   */\n  totalChunkedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalUploadedBytes: 0,\n\n  /**\n   * @api private\n   */\n  totalBytes: undefined,\n\n  /**\n   * @api private\n   */\n  numParts: 0,\n\n  /**\n   * @api private\n   */\n  totalPartNumbers: 0,\n\n  /**\n   * @api private\n   */\n  activeParts: 0,\n\n  /**\n   * @api private\n   */\n  doneParts: 0,\n\n  /**\n   * @api private\n   */\n  parts: null,\n\n  /**\n   * @api private\n   */\n  completeInfo: null,\n\n  /**\n   * @api private\n   */\n  failed: false,\n\n  /**\n   * @api private\n   */\n  multipartReq: null,\n\n  /**\n   * @api private\n   */\n  partBuffers: null,\n\n  /**\n   * @api private\n   */\n  partBufferLength: 0,\n\n  /**\n   * @api private\n   */\n  fillBuffer: function fillBuffer() {\n    var self = this;\n    var bodyLen = byteLength(self.body);\n\n    if (bodyLen === 0) {\n      self.isDoneChunking = true;\n      self.numParts = 1;\n      self.nextChunk(self.body);\n      return;\n    }\n\n    while (self.activeParts < self.queueSize && self.partPos < bodyLen) {\n      var endPos = Math.min(self.partPos + self.partSize, bodyLen);\n      var buf = self.sliceFn.call(self.body, self.partPos, endPos);\n      self.partPos += self.partSize;\n\n      if (byteLength(buf) < self.partSize || self.partPos === bodyLen) {\n        self.isDoneChunking = true;\n        self.numParts = self.totalPartNumbers + 1;\n      }\n      self.nextChunk(buf);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  fillStream: function fillStream() {\n    var self = this;\n    if (self.activeParts >= self.queueSize) return;\n\n    var buf = self.body.read(self.partSize - self.partBufferLength) ||\n              self.body.read();\n    if (buf) {\n      self.partBuffers.push(buf);\n      self.partBufferLength += buf.length;\n      self.totalChunkedBytes += buf.length;\n    }\n\n    if (self.partBufferLength >= self.partSize) {\n      // if we have single buffer we avoid copyfull concat\n      var pbuf = self.partBuffers.length === 1 ?\n        self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n\n      // if we have more than partSize, push the rest back on the queue\n      if (pbuf.length > self.partSize) {\n        var rest = pbuf.slice(self.partSize);\n        self.partBuffers.push(rest);\n        self.partBufferLength += rest.length;\n        pbuf = pbuf.slice(0, self.partSize);\n      }\n\n      self.nextChunk(pbuf);\n    }\n\n    if (self.isDoneChunking && !self.isDoneSending) {\n      // if we have single buffer we avoid copyfull concat\n      pbuf = self.partBuffers.length === 1 ?\n          self.partBuffers[0] : Buffer.concat(self.partBuffers);\n      self.partBuffers = [];\n      self.partBufferLength = 0;\n      self.totalBytes = self.totalChunkedBytes;\n      self.isDoneSending = true;\n\n      if (self.numParts === 0 || pbuf.length > 0) {\n        self.numParts++;\n        self.nextChunk(pbuf);\n      }\n    }\n\n    self.body.read(0);\n  },\n\n  /**\n   * @api private\n   */\n  nextChunk: function nextChunk(chunk) {\n    var self = this;\n    if (self.failed) return null;\n\n    var partNumber = ++self.totalPartNumbers;\n    if (self.isDoneChunking && partNumber === 1) {\n      var params = {Body: chunk};\n      if (this.tags) {\n        params.Tagging = this.getTaggingHeader();\n      }\n      var req = self.service.putObject(params);\n      req._managedUpload = self;\n      req.on('httpUploadProgress', self.progress).send(self.finishSinglePart);\n      self.singlePart = req; //save the single part request\n      return null;\n    } else if (self.service.config.params.ContentMD5) {\n      var err = AWS.util.error(new Error('The Content-MD5 you specified is invalid for multi-part uploads.'), {\n        code: 'InvalidDigest', retryable: false\n      });\n\n      self.cleanup(err);\n      return null;\n    }\n\n    if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) {\n      return null; // Already uploaded this part.\n    }\n\n    self.activeParts++;\n    if (!self.service.config.params.UploadId) {\n\n      if (!self.multipartReq) { // create multipart\n        self.multipartReq = self.service.createMultipartUpload();\n        self.multipartReq.on('success', function(resp) {\n          self.service.config.params.UploadId = resp.data.UploadId;\n          self.multipartReq = null;\n        });\n        self.queueChunks(chunk, partNumber);\n        self.multipartReq.on('error', function(err) {\n          self.cleanup(err);\n        });\n        self.multipartReq.send();\n      } else {\n        self.queueChunks(chunk, partNumber);\n      }\n    } else { // multipart is created, just send\n      self.uploadPart(chunk, partNumber);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getTaggingHeader: function getTaggingHeader() {\n    var kvPairStrings = [];\n    for (var i = 0; i < this.tags.length; i++) {\n      kvPairStrings.push(AWS.util.uriEscape(this.tags[i].Key) + '=' +\n        AWS.util.uriEscape(this.tags[i].Value));\n    }\n\n    return kvPairStrings.join('&');\n  },\n\n  /**\n   * @api private\n   */\n  uploadPart: function uploadPart(chunk, partNumber) {\n    var self = this;\n\n    var partParams = {\n      Body: chunk,\n      ContentLength: AWS.util.string.byteLength(chunk),\n      PartNumber: partNumber\n    };\n\n    var partInfo = {ETag: null, PartNumber: partNumber};\n    self.completeInfo[partNumber] = partInfo;\n\n    var req = self.service.uploadPart(partParams);\n    self.parts[partNumber] = req;\n    req._lastUploadedBytes = 0;\n    req._managedUpload = self;\n    req.on('httpUploadProgress', self.progress);\n    req.send(function(err, data) {\n      delete self.parts[partParams.PartNumber];\n      self.activeParts--;\n\n      if (!err && (!data || !data.ETag)) {\n        var message = 'No access to ETag property on response.';\n        if (AWS.util.isBrowser()) {\n          message += ' Check CORS configuration to expose ETag header.';\n        }\n\n        err = AWS.util.error(new Error(message), {\n          code: 'ETagMissing', retryable: false\n        });\n      }\n      if (err) return self.cleanup(err);\n      //prevent sending part being returned twice (https://github.com/aws/aws-sdk-js/issues/2304)\n      if (self.completeInfo[partNumber] && self.completeInfo[partNumber].ETag !== null) return null;\n      partInfo.ETag = data.ETag;\n      self.doneParts++;\n      if (self.isDoneChunking && self.doneParts === self.totalPartNumbers) {\n        self.finishMultiPart();\n      } else {\n        self.fillQueue.call(self);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  queueChunks: function queueChunks(chunk, partNumber) {\n    var self = this;\n    self.multipartReq.on('success', function() {\n      self.uploadPart(chunk, partNumber);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  cleanup: function cleanup(err) {\n    var self = this;\n    if (self.failed) return;\n\n    // clean up stream\n    if (typeof self.body.removeAllListeners === 'function' &&\n        typeof self.body.resume === 'function') {\n      self.body.removeAllListeners('readable');\n      self.body.removeAllListeners('end');\n      self.body.resume();\n    }\n\n    // cleanup multipartReq listeners\n    if (self.multipartReq) {\n      self.multipartReq.removeAllListeners('success');\n      self.multipartReq.removeAllListeners('error');\n      self.multipartReq.removeAllListeners('complete');\n      delete self.multipartReq;\n    }\n\n    if (self.service.config.params.UploadId && !self.leavePartsOnError) {\n      self.service.abortMultipartUpload().send();\n    } else if (self.leavePartsOnError) {\n      self.isDoneChunking = false;\n    }\n\n    AWS.util.each(self.parts, function(partNumber, part) {\n      part.removeAllListeners('complete');\n      part.abort();\n    });\n\n    self.activeParts = 0;\n    self.partPos = 0;\n    self.numParts = 0;\n    self.totalPartNumbers = 0;\n    self.parts = {};\n    self.failed = true;\n    self.callback(err);\n  },\n\n  /**\n   * @api private\n   */\n  finishMultiPart: function finishMultiPart() {\n    var self = this;\n    var completeParams = { MultipartUpload: { Parts: self.completeInfo.slice(1) } };\n    self.service.completeMultipartUpload(completeParams, function(err, data) {\n      if (err) {\n        return self.cleanup(err);\n      }\n\n      if (data && typeof data.Location === 'string') {\n        data.Location = data.Location.replace(/%2F/g, '/');\n      }\n\n      if (Array.isArray(self.tags)) {\n        for (var i = 0; i < self.tags.length; i++) {\n          self.tags[i].Value = String(self.tags[i].Value);\n        }\n        self.service.putObjectTagging(\n          {Tagging: {TagSet: self.tags}},\n          function(e, d) {\n            if (e) {\n              self.callback(e);\n            } else {\n              self.callback(e, data);\n            }\n          }\n        );\n      } else {\n        self.callback(err, data);\n      }\n    });\n  },\n\n  /**\n   * @api private\n   */\n  finishSinglePart: function finishSinglePart(err, data) {\n    var upload = this.request._managedUpload;\n    var httpReq = this.request.httpRequest;\n    var endpoint = httpReq.endpoint;\n    if (err) return upload.callback(err);\n    data.Location =\n      [endpoint.protocol, '//', endpoint.host, httpReq.path].join('');\n    data.key = this.request.params.Key; // will stay undocumented\n    data.Key = this.request.params.Key;\n    data.Bucket = this.request.params.Bucket;\n    upload.callback(err, data);\n  },\n\n  /**\n   * @api private\n   */\n  progress: function progress(info) {\n    var upload = this._managedUpload;\n    if (this.operation === 'putObject') {\n      info.part = 1;\n      info.key = this.params.Key;\n    } else {\n      upload.totalUploadedBytes += info.loaded - this._lastUploadedBytes;\n      this._lastUploadedBytes = info.loaded;\n      info = {\n        loaded: upload.totalUploadedBytes,\n        total: upload.totalBytes,\n        part: this.params.PartNumber,\n        key: this.params.Key\n      };\n    }\n    upload.emit('httpUploadProgress', [info]);\n  }\n});\n\nAWS.util.mixin(AWS.S3.ManagedUpload, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.promise = AWS.util.promisifyMethod('send', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.ManagedUpload.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.promise;\n};\n\nAWS.util.addPromises(AWS.S3.ManagedUpload);\n\n/**\n * @api private\n */\nmodule.exports = AWS.S3.ManagedUpload;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/s3/managed_upload.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/sequential_executor.js":
/*!*************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/sequential_executor.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * @api private\n * @!method on(eventName, callback)\n *   Registers an event listener callback for the event given by `eventName`.\n *   Parameters passed to the callback function depend on the individual event\n *   being triggered. See the event documentation for those parameters.\n *\n *   @param eventName [String] the event name to register the listener for\n *   @param callback [Function] the listener callback function\n *   @param toHead [Boolean] attach the listener callback to the head of callback array if set to true.\n *     Default to be false.\n *   @return [AWS.SequentialExecutor] the same object for chaining\n */\nAWS.SequentialExecutor = AWS.util.inherit({\n\n  constructor: function SequentialExecutor() {\n    this._events = {};\n  },\n\n  /**\n   * @api private\n   */\n  listeners: function listeners(eventName) {\n    return this._events[eventName] ? this._events[eventName].slice(0) : [];\n  },\n\n  on: function on(eventName, listener, toHead) {\n    if (this._events[eventName]) {\n      toHead ?\n        this._events[eventName].unshift(listener) :\n        this._events[eventName].push(listener);\n    } else {\n      this._events[eventName] = [listener];\n    }\n    return this;\n  },\n\n  onAsync: function onAsync(eventName, listener, toHead) {\n    listener._isAsync = true;\n    return this.on(eventName, listener, toHead);\n  },\n\n  removeListener: function removeListener(eventName, listener) {\n    var listeners = this._events[eventName];\n    if (listeners) {\n      var length = listeners.length;\n      var position = -1;\n      for (var i = 0; i < length; ++i) {\n        if (listeners[i] === listener) {\n          position = i;\n        }\n      }\n      if (position > -1) {\n        listeners.splice(position, 1);\n      }\n    }\n    return this;\n  },\n\n  removeAllListeners: function removeAllListeners(eventName) {\n    if (eventName) {\n      delete this._events[eventName];\n    } else {\n      this._events = {};\n    }\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  emit: function emit(eventName, eventArgs, doneCallback) {\n    if (!doneCallback) doneCallback = function() { };\n    var listeners = this.listeners(eventName);\n    var count = listeners.length;\n    this.callListeners(listeners, eventArgs, doneCallback);\n    return count > 0;\n  },\n\n  /**\n   * @api private\n   */\n  callListeners: function callListeners(listeners, args, doneCallback, prevError) {\n    var self = this;\n    var error = prevError || null;\n\n    function callNextListener(err) {\n      if (err) {\n        error = AWS.util.error(error || new Error(), err);\n        if (self._haltHandlersOnError) {\n          return doneCallback.call(self, error);\n        }\n      }\n      self.callListeners(listeners, args, doneCallback, error);\n    }\n\n    while (listeners.length > 0) {\n      var listener = listeners.shift();\n      if (listener._isAsync) { // asynchronous listener\n        listener.apply(self, args.concat([callNextListener]));\n        return; // stop here, callNextListener will continue\n      } else { // synchronous listener\n        try {\n          listener.apply(self, args);\n        } catch (err) {\n          error = AWS.util.error(error || new Error(), err);\n        }\n        if (error && self._haltHandlersOnError) {\n          doneCallback.call(self, error);\n          return;\n        }\n      }\n    }\n    doneCallback.call(self, error);\n  },\n\n  /**\n   * Adds or copies a set of listeners from another list of\n   * listeners or SequentialExecutor object.\n   *\n   * @param listeners [map<String,Array<Function>>, AWS.SequentialExecutor]\n   *   a list of events and callbacks, or an event emitter object\n   *   containing listeners to add to this emitter object.\n   * @return [AWS.SequentialExecutor] the emitter object, for chaining.\n   * @example Adding listeners from a map of listeners\n   *   emitter.addListeners({\n   *     event1: [function() { ... }, function() { ... }],\n   *     event2: [function() { ... }]\n   *   });\n   *   emitter.emit('event1'); // emitter has event1\n   *   emitter.emit('event2'); // emitter has event2\n   * @example Adding listeners from another emitter object\n   *   var emitter1 = new AWS.SequentialExecutor();\n   *   emitter1.on('event1', function() { ... });\n   *   emitter1.on('event2', function() { ... });\n   *   var emitter2 = new AWS.SequentialExecutor();\n   *   emitter2.addListeners(emitter1);\n   *   emitter2.emit('event1'); // emitter2 has event1\n   *   emitter2.emit('event2'); // emitter2 has event2\n   */\n  addListeners: function addListeners(listeners) {\n    var self = this;\n\n    // extract listeners if parameter is an SequentialExecutor object\n    if (listeners._events) listeners = listeners._events;\n\n    AWS.util.each(listeners, function(event, callbacks) {\n      if (typeof callbacks === 'function') callbacks = [callbacks];\n      AWS.util.arrayEach(callbacks, function(callback) {\n        self.on(event, callback);\n      });\n    });\n\n    return self;\n  },\n\n  /**\n   * Registers an event with {on} and saves the callback handle function\n   * as a property on the emitter object using a given `name`.\n   *\n   * @param name [String] the property name to set on this object containing\n   *   the callback function handle so that the listener can be removed in\n   *   the future.\n   * @param (see on)\n   * @return (see on)\n   * @example Adding a named listener DATA_CALLBACK\n   *   var listener = function() { doSomething(); };\n   *   emitter.addNamedListener('DATA_CALLBACK', 'data', listener);\n   *\n   *   // the following prints: true\n   *   console.log(emitter.DATA_CALLBACK == listener);\n   */\n  addNamedListener: function addNamedListener(name, eventName, callback, toHead) {\n    this[name] = callback;\n    this.addListener(eventName, callback, toHead);\n    return this;\n  },\n\n  /**\n   * @api private\n   */\n  addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback, toHead) {\n    callback._isAsync = true;\n    return this.addNamedListener(name, eventName, callback, toHead);\n  },\n\n  /**\n   * Helper method to add a set of named listeners using\n   * {addNamedListener}. The callback contains a parameter\n   * with a handle to the `addNamedListener` method.\n   *\n   * @callback callback function(add)\n   *   The callback function is called immediately in order to provide\n   *   the `add` function to the block. This simplifies the addition of\n   *   a large group of named listeners.\n   *   @param add [Function] the {addNamedListener} function to call\n   *     when registering listeners.\n   * @example Adding a set of named listeners\n   *   emitter.addNamedListeners(function(add) {\n   *     add('DATA_CALLBACK', 'data', function() { ... });\n   *     add('OTHER', 'otherEvent', function() { ... });\n   *     add('LAST', 'lastEvent', function() { ... });\n   *   });\n   *\n   *   // these properties are now set:\n   *   emitter.DATA_CALLBACK;\n   *   emitter.OTHER;\n   *   emitter.LAST;\n   */\n  addNamedListeners: function addNamedListeners(callback) {\n    var self = this;\n    callback(\n      function() {\n        self.addNamedListener.apply(self, arguments);\n      },\n      function() {\n        self.addNamedAsyncListener.apply(self, arguments);\n      }\n    );\n    return this;\n  }\n});\n\n/**\n * {on} is the prefered method.\n * @api private\n */\nAWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;\n\n/**\n * @api private\n */\nmodule.exports = AWS.SequentialExecutor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/sequential_executor.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/service.js":
/*!*************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/service.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar Api = __webpack_require__(/*! ./model/api */ \"(rsc)/../../node_modules/aws-sdk/lib/model/api.js\");\nvar regionConfig = __webpack_require__(/*! ./region_config */ \"(rsc)/../../node_modules/aws-sdk/lib/region_config.js\");\n\nvar inherit = AWS.util.inherit;\nvar clientCount = 0;\nvar region_utils = __webpack_require__(/*! ./region/utils */ \"(rsc)/../../node_modules/aws-sdk/lib/region/utils.js\");\n\n/**\n * The service class representing an AWS service.\n *\n * @class_abstract This class is an abstract class.\n *\n * @!attribute apiVersions\n *   @return [Array<String>] the list of API versions supported by this service.\n *   @readonly\n */\nAWS.Service = inherit({\n  /**\n   * Create a new service object with a configuration object\n   *\n   * @param config [map] a map of configuration options\n   */\n  constructor: function Service(config) {\n    if (!this.loadServiceClass) {\n      throw AWS.util.error(new Error(),\n        'Service must be constructed with `new\\' operator');\n    }\n\n    if (config) {\n      if (config.region) {\n        var region = config.region;\n        if (region_utils.isFipsRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n          config.useFipsEndpoint = true;\n        }\n        if (region_utils.isGlobalRegion(region)) {\n          config.region = region_utils.getRealRegion(region);\n        }\n      }\n      if (typeof config.useDualstack === 'boolean'\n        && typeof config.useDualstackEndpoint !== 'boolean') {\n        config.useDualstackEndpoint = config.useDualstack;\n      }\n    }\n\n    var ServiceClass = this.loadServiceClass(config || {});\n    if (ServiceClass) {\n      var originalConfig = AWS.util.copy(config);\n      var svc = new ServiceClass(config);\n      Object.defineProperty(svc, '_originalConfig', {\n        get: function() { return originalConfig; },\n        enumerable: false,\n        configurable: true\n      });\n      svc._clientId = ++clientCount;\n      return svc;\n    }\n    this.initialize(config);\n  },\n\n  /**\n   * @api private\n   */\n  initialize: function initialize(config) {\n    var svcConfig = AWS.config[this.serviceIdentifier];\n    this.config = new AWS.Config(AWS.config);\n    if (svcConfig) this.config.update(svcConfig, true);\n    if (config) this.config.update(config, true);\n\n    this.validateService();\n    if (!this.config.endpoint) regionConfig.configureEndpoint(this);\n\n    this.config.endpoint = this.endpointFromTemplate(this.config.endpoint);\n    this.setEndpoint(this.config.endpoint);\n    //enable attaching listeners to service client\n    AWS.SequentialExecutor.call(this);\n    AWS.Service.addDefaultMonitoringListeners(this);\n    if ((this.config.clientSideMonitoring || AWS.Service._clientSideMonitoring) && this.publisher) {\n      var publisher = this.publisher;\n      this.addNamedListener('PUBLISH_API_CALL', 'apiCall', function PUBLISH_API_CALL(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n      this.addNamedListener('PUBLISH_API_ATTEMPT', 'apiCallAttempt', function PUBLISH_API_ATTEMPT(event) {\n        process.nextTick(function() {publisher.eventHandler(event);});\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n  },\n\n  /**\n   * @api private\n   */\n  loadServiceClass: function loadServiceClass(serviceConfig) {\n    var config = serviceConfig;\n    if (!AWS.util.isEmpty(this.api)) {\n      return null;\n    } else if (config.apiConfig) {\n      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);\n    } else if (!this.constructor.services) {\n      return null;\n    } else {\n      config = new AWS.Config(AWS.config);\n      config.update(serviceConfig, true);\n      var version = config.apiVersions[this.constructor.serviceIdentifier];\n      version = version || config.apiVersion;\n      return this.getLatestServiceClass(version);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceClass: function getLatestServiceClass(version) {\n    version = this.getLatestServiceVersion(version);\n    if (this.constructor.services[version] === null) {\n      AWS.Service.defineServiceApi(this.constructor, version);\n    }\n\n    return this.constructor.services[version];\n  },\n\n  /**\n   * @api private\n   */\n  getLatestServiceVersion: function getLatestServiceVersion(version) {\n    if (!this.constructor.services || this.constructor.services.length === 0) {\n      throw new Error('No services defined on ' +\n                      this.constructor.serviceIdentifier);\n    }\n\n    if (!version) {\n      version = 'latest';\n    } else if (AWS.util.isType(version, Date)) {\n      version = AWS.util.date.iso8601(version).split('T')[0];\n    }\n\n    if (Object.hasOwnProperty(this.constructor.services, version)) {\n      return version;\n    }\n\n    var keys = Object.keys(this.constructor.services).sort();\n    var selectedVersion = null;\n    for (var i = keys.length - 1; i >= 0; i--) {\n      // versions that end in \"*\" are not available on disk and can be\n      // skipped, so do not choose these as selectedVersions\n      if (keys[i][keys[i].length - 1] !== '*') {\n        selectedVersion = keys[i];\n      }\n      if (keys[i].substr(0, 10) <= version) {\n        return selectedVersion;\n      }\n    }\n\n    throw new Error('Could not find ' + this.constructor.serviceIdentifier +\n                    ' API to satisfy version constraint `' + version + '\\'');\n  },\n\n  /**\n   * @api private\n   */\n  api: {},\n\n  /**\n   * @api private\n   */\n  defaultRetryCount: 3,\n\n  /**\n   * @api private\n   */\n  customizeRequests: function customizeRequests(callback) {\n    if (!callback) {\n      this.customRequestHandler = null;\n    } else if (typeof callback === 'function') {\n      this.customRequestHandler = callback;\n    } else {\n      throw new Error('Invalid callback type \\'' + typeof callback + '\\' provided in customizeRequests');\n    }\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeRequest: function makeRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = null;\n    }\n\n    params = params || {};\n    if (this.config.params) { // copy only toplevel bound params\n      var rules = this.api.operations[operation];\n      if (rules) {\n        params = AWS.util.copy(params);\n        AWS.util.each(this.config.params, function(key, value) {\n          if (rules.input.members[key]) {\n            if (params[key] === undefined || params[key] === null) {\n              params[key] = value;\n            }\n          }\n        });\n      }\n    }\n\n    var request = new AWS.Request(this, operation, params);\n    this.addAllRequestListeners(request);\n    this.attachMonitoringEmitter(request);\n    if (callback) request.send(callback);\n    return request;\n  },\n\n  /**\n   * Calls an operation on a service with the given input parameters, without\n   * any authentication data. This method is useful for \"public\" API operations.\n   *\n   * @param operation [String] the name of the operation to call on the service.\n   * @param params [map] a map of input options for the operation\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n\n    var request = this.makeRequest(operation, params).toUnauthenticated();\n    return callback ? request.send(callback) : request;\n  },\n\n  /**\n   * Waits for a given state\n   *\n   * @param state [String] the state on the service to wait for\n   * @param params [map] a map of parameters to pass with each request\n   * @option params $waiter [map] a map of configuration options for the waiter\n   * @option params $waiter.delay [Number] The number of seconds to wait between\n   *                                       requests\n   * @option params $waiter.maxAttempts [Number] The maximum number of requests\n   *                                             to send while waiting\n   * @callback callback function(err, data)\n   *   If a callback is supplied, it is called when a response is returned\n   *   from the service.\n   *   @param err [Error] the error object returned from the request.\n   *     Set to `null` if the request is successful.\n   *   @param data [Object] the de-serialized data returned from\n   *     the request. Set to `null` if a request error occurs.\n   */\n  waitFor: function waitFor(state, params, callback) {\n    var waiter = new AWS.ResourceWaiter(this, state);\n    return waiter.wait(params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  addAllRequestListeners: function addAllRequestListeners(request) {\n    var list = [AWS.events, AWS.EventListeners.Core, this.serviceInterface(),\n                AWS.EventListeners.CorePost];\n    for (var i = 0; i < list.length; i++) {\n      if (list[i]) request.addListeners(list[i]);\n    }\n\n    // disable parameter validation\n    if (!this.config.paramValidation) {\n      request.removeListener('validate',\n        AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n    }\n\n    if (this.config.logger) { // add logging events\n      request.addListeners(AWS.EventListeners.Logger);\n    }\n\n    this.setupRequestListeners(request);\n    // call prototype's customRequestHandler\n    if (typeof this.constructor.prototype.customRequestHandler === 'function') {\n      this.constructor.prototype.customRequestHandler(request);\n    }\n    // call instance's customRequestHandler\n    if (Object.prototype.hasOwnProperty.call(this, 'customRequestHandler') && typeof this.customRequestHandler === 'function') {\n      this.customRequestHandler(request);\n    }\n  },\n\n  /**\n   * Event recording metrics for a whole API call.\n   * @returns {object} a subset of api call metrics\n   * @api private\n   */\n  apiCallEvent: function apiCallEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCall',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Region: request.httpRequest.region,\n      MaxRetriesExceeded: 0,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.FinalHttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (response.error) {\n      var error = response.error;\n      var statusCode = response.httpResponse.statusCode;\n      if (statusCode > 299) {\n        if (error.code) monitoringEvent.FinalAwsException = error.code;\n        if (error.message) monitoringEvent.FinalAwsExceptionMessage = error.message;\n      } else {\n        if (error.code || error.name) monitoringEvent.FinalSdkException = error.code || error.name;\n        if (error.message) monitoringEvent.FinalSdkExceptionMessage = error.message;\n      }\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Event recording metrics for an API call attempt.\n   * @returns {object} a subset of api call attempt metrics\n   * @api private\n   */\n  apiAttemptEvent: function apiAttemptEvent(request) {\n    var api = request.service.api.operations[request.operation];\n    var monitoringEvent = {\n      Type: 'ApiCallAttempt',\n      Api: api ? api.name : request.operation,\n      Version: 1,\n      Service: request.service.api.serviceId || request.service.api.endpointPrefix,\n      Fqdn: request.httpRequest.endpoint.hostname,\n      UserAgent: request.httpRequest.getUserAgent(),\n    };\n    var response = request.response;\n    if (response.httpResponse.statusCode) {\n      monitoringEvent.HttpStatusCode = response.httpResponse.statusCode;\n    }\n    if (\n      !request._unAuthenticated &&\n      request.service.config.credentials &&\n      request.service.config.credentials.accessKeyId\n    ) {\n      monitoringEvent.AccessKey = request.service.config.credentials.accessKeyId;\n    }\n    if (!response.httpResponse.headers) return monitoringEvent;\n    if (request.httpRequest.headers['x-amz-security-token']) {\n      monitoringEvent.SessionToken = request.httpRequest.headers['x-amz-security-token'];\n    }\n    if (response.httpResponse.headers['x-amzn-requestid']) {\n      monitoringEvent.XAmznRequestId = response.httpResponse.headers['x-amzn-requestid'];\n    }\n    if (response.httpResponse.headers['x-amz-request-id']) {\n      monitoringEvent.XAmzRequestId = response.httpResponse.headers['x-amz-request-id'];\n    }\n    if (response.httpResponse.headers['x-amz-id-2']) {\n      monitoringEvent.XAmzId2 = response.httpResponse.headers['x-amz-id-2'];\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Add metrics of failed request.\n   * @api private\n   */\n  attemptFailEvent: function attemptFailEvent(request) {\n    var monitoringEvent = this.apiAttemptEvent(request);\n    var response = request.response;\n    var error = response.error;\n    if (response.httpResponse.statusCode > 299 ) {\n      if (error.code) monitoringEvent.AwsException = error.code;\n      if (error.message) monitoringEvent.AwsExceptionMessage = error.message;\n    } else {\n      if (error.code || error.name) monitoringEvent.SdkException = error.code || error.name;\n      if (error.message) monitoringEvent.SdkExceptionMessage = error.message;\n    }\n    return monitoringEvent;\n  },\n\n  /**\n   * Attach listeners to request object to fetch metrics of each request\n   * and emit data object through \\'ApiCall\\' and \\'ApiCallAttempt\\' events.\n   * @api private\n   */\n  attachMonitoringEmitter: function attachMonitoringEmitter(request) {\n    var attemptTimestamp; //timestamp marking the beginning of a request attempt\n    var attemptStartRealTime; //Start time of request attempt. Used to calculating attemptLatency\n    var attemptLatency; //latency from request sent out to http response reaching SDK\n    var callStartRealTime; //Start time of API call. Used to calculating API call latency\n    var attemptCount = 0; //request.retryCount is not reliable here\n    var region; //region cache region for each attempt since it can be updated in plase (e.g. s3)\n    var callTimestamp; //timestamp when the request is created\n    var self = this;\n    var addToHead = true;\n\n    request.on('validate', function () {\n      callStartRealTime = AWS.util.realClock.now();\n      callTimestamp = Date.now();\n    }, addToHead);\n    request.on('sign', function () {\n      attemptStartRealTime = AWS.util.realClock.now();\n      attemptTimestamp = Date.now();\n      region = request.httpRequest.region;\n      attemptCount++;\n    }, addToHead);\n    request.on('validateResponse', function() {\n      attemptLatency = Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT', 'success', function API_CALL_ATTEMPT() {\n      var apiAttemptEvent = self.apiAttemptEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL_ATTEMPT_RETRY', 'retry', function API_CALL_ATTEMPT_RETRY() {\n      var apiAttemptEvent = self.attemptFailEvent(request);\n      apiAttemptEvent.Timestamp = attemptTimestamp;\n      //attemptLatency may not be available if fail before response\n      attemptLatency = attemptLatency ||\n        Math.round(AWS.util.realClock.now() - attemptStartRealTime);\n      apiAttemptEvent.AttemptLatency = attemptLatency >= 0 ? attemptLatency : 0;\n      apiAttemptEvent.Region = region;\n      self.emit('apiCallAttempt', [apiAttemptEvent]);\n    });\n    request.addNamedListener('API_CALL', 'complete', function API_CALL() {\n      var apiCallEvent = self.apiCallEvent(request);\n      apiCallEvent.AttemptCount = attemptCount;\n      if (apiCallEvent.AttemptCount <= 0) return;\n      apiCallEvent.Timestamp = callTimestamp;\n      var latency = Math.round(AWS.util.realClock.now() - callStartRealTime);\n      apiCallEvent.Latency = latency >= 0 ? latency : 0;\n      var response = request.response;\n      if (\n        response.error &&\n        response.error.retryable &&\n        typeof response.retryCount === 'number' &&\n        typeof response.maxRetries === 'number' &&\n        (response.retryCount >= response.maxRetries)\n      ) {\n        apiCallEvent.MaxRetriesExceeded = 1;\n      }\n      self.emit('apiCall', [apiCallEvent]);\n    });\n  },\n\n  /**\n   * Override this method to setup any custom request listeners for each\n   * new request to the service.\n   *\n   * @method_abstract This is an abstract method.\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n  },\n\n  /**\n   * Gets the signing name for a given request\n   * @api private\n   */\n  getSigningName: function getSigningName() {\n    return this.api.signingName || this.api.endpointPrefix;\n  },\n\n  /**\n   * Gets the signer class for a given request\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var version;\n    // get operation authtype if present\n    var operation = null;\n    var authtype = '';\n    if (request) {\n      var operations = request.service.api.operations || {};\n      operation = operations[request.operation] || null;\n      authtype = operation ? operation.authtype : '';\n    }\n    if (this.config.signatureVersion) {\n      version = this.config.signatureVersion;\n    } else if (authtype === 'v4' || authtype === 'v4-unsigned-body') {\n      version = 'v4';\n    } else if (authtype === 'bearer') {\n      version = 'bearer';\n    } else {\n      version = this.api.signatureVersion;\n    }\n    return AWS.Signers.RequestSigner.getVersion(version);\n  },\n\n  /**\n   * @api private\n   */\n  serviceInterface: function serviceInterface() {\n    switch (this.api.protocol) {\n      case 'ec2': return AWS.EventListeners.Query;\n      case 'query': return AWS.EventListeners.Query;\n      case 'json': return AWS.EventListeners.Json;\n      case 'rest-json': return AWS.EventListeners.RestJson;\n      case 'rest-xml': return AWS.EventListeners.RestXml;\n    }\n    if (this.api.protocol) {\n      throw new Error('Invalid service `protocol\\' ' +\n        this.api.protocol + ' in API config');\n    }\n  },\n\n  /**\n   * @api private\n   */\n  successfulResponse: function successfulResponse(resp) {\n    return resp.httpResponse.statusCode < 300;\n  },\n\n  /**\n   * How many times a failed request should be retried before giving up.\n   * the defaultRetryCount can be overriden by service classes.\n   *\n   * @api private\n   */\n  numRetries: function numRetries() {\n    if (this.config.maxRetries !== undefined) {\n      return this.config.maxRetries;\n    } else {\n      return this.defaultRetryCount;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  retryDelays: function retryDelays(retryCount, err) {\n    return AWS.util.calculateRetryDelay(retryCount, this.config.retryDelayOptions, err);\n  },\n\n  /**\n   * @api private\n   */\n  retryableError: function retryableError(error) {\n    if (this.timeoutError(error)) return true;\n    if (this.networkingError(error)) return true;\n    if (this.expiredCredentialsError(error)) return true;\n    if (this.throttledError(error)) return true;\n    if (error.statusCode >= 500) return true;\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  networkingError: function networkingError(error) {\n    return error.code === 'NetworkingError';\n  },\n\n  /**\n   * @api private\n   */\n  timeoutError: function timeoutError(error) {\n    return error.code === 'TimeoutError';\n  },\n\n  /**\n   * @api private\n   */\n  expiredCredentialsError: function expiredCredentialsError(error) {\n    // TODO : this only handles *one* of the expired credential codes\n    return (error.code === 'ExpiredTokenException');\n  },\n\n  /**\n   * @api private\n   */\n  clockSkewError: function clockSkewError(error) {\n    switch (error.code) {\n      case 'RequestTimeTooSkewed':\n      case 'RequestExpired':\n      case 'InvalidSignatureException':\n      case 'SignatureDoesNotMatch':\n      case 'AuthFailure':\n      case 'RequestInTheFuture':\n        return true;\n      default: return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getSkewCorrectedDate: function getSkewCorrectedDate() {\n    return new Date(Date.now() + this.config.systemClockOffset);\n  },\n\n  /**\n   * @api private\n   */\n  applyClockOffset: function applyClockOffset(newServerTime) {\n    if (newServerTime) {\n      this.config.systemClockOffset = newServerTime - Date.now();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(newServerTime) {\n    if (newServerTime) {\n      return Math.abs(this.getSkewCorrectedDate().getTime() - newServerTime) >= 300000;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  throttledError: function throttledError(error) {\n    // this logic varies between services\n    if (error.statusCode === 429) return true;\n    switch (error.code) {\n      case 'ProvisionedThroughputExceededException':\n      case 'Throttling':\n      case 'ThrottlingException':\n      case 'RequestLimitExceeded':\n      case 'RequestThrottled':\n      case 'RequestThrottledException':\n      case 'TooManyRequestsException':\n      case 'TransactionInProgressException': //dynamodb\n      case 'EC2ThrottledException':\n        return true;\n      default:\n        return false;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  endpointFromTemplate: function endpointFromTemplate(endpoint) {\n    if (typeof endpoint !== 'string') return endpoint;\n\n    var e = endpoint;\n    e = e.replace(/\\{service\\}/g, this.api.endpointPrefix);\n    e = e.replace(/\\{region\\}/g, this.config.region);\n    e = e.replace(/\\{scheme\\}/g, this.config.sslEnabled ? 'https' : 'http');\n    return e;\n  },\n\n  /**\n   * @api private\n   */\n  setEndpoint: function setEndpoint(endpoint) {\n    this.endpoint = new AWS.Endpoint(endpoint, this.config);\n  },\n\n  /**\n   * @api private\n   */\n  paginationConfig: function paginationConfig(operation, throwException) {\n    var paginator = this.api.operations[operation].paginator;\n    if (!paginator) {\n      if (throwException) {\n        var e = new Error();\n        throw AWS.util.error(e, 'No pagination configuration for ' + operation);\n      }\n      return null;\n    }\n\n    return paginator;\n  }\n});\n\nAWS.util.update(AWS.Service, {\n\n  /**\n   * Adds one method for each operation described in the api configuration\n   *\n   * @api private\n   */\n  defineMethods: function defineMethods(svc) {\n    AWS.util.each(svc.prototype.api.operations, function iterator(method) {\n      if (svc.prototype[method]) return;\n      var operation = svc.prototype.api.operations[method];\n      if (operation.authtype === 'none') {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeUnauthenticatedRequest(method, params, callback);\n        };\n      } else {\n        svc.prototype[method] = function (params, callback) {\n          return this.makeRequest(method, params, callback);\n        };\n      }\n    });\n  },\n\n  /**\n   * Defines a new Service class using a service identifier and list of versions\n   * including an optional set of features (functions) to apply to the class\n   * prototype.\n   *\n   * @param serviceIdentifier [String] the identifier for the service\n   * @param versions [Array<String>] a list of versions that work with this\n   *   service\n   * @param features [Object] an object to attach to the prototype\n   * @return [Class<Service>] the service class defined by this function.\n   */\n  defineService: function defineService(serviceIdentifier, versions, features) {\n    AWS.Service._serviceMap[serviceIdentifier] = true;\n    if (!Array.isArray(versions)) {\n      features = versions;\n      versions = [];\n    }\n\n    var svc = inherit(AWS.Service, features || {});\n\n    if (typeof serviceIdentifier === 'string') {\n      AWS.Service.addVersions(svc, versions);\n\n      var identifier = svc.serviceIdentifier || serviceIdentifier;\n      svc.serviceIdentifier = identifier;\n    } else { // defineService called with an API\n      svc.prototype.api = serviceIdentifier;\n      AWS.Service.defineMethods(svc);\n    }\n    AWS.SequentialExecutor.call(this.prototype);\n    //util.clientSideMonitoring is only available in node\n    if (!this.prototype.publisher && AWS.util.clientSideMonitoring) {\n      var Publisher = AWS.util.clientSideMonitoring.Publisher;\n      var configProvider = AWS.util.clientSideMonitoring.configProvider;\n      var publisherConfig = configProvider();\n      this.prototype.publisher = new Publisher(publisherConfig);\n      if (publisherConfig.enabled) {\n        //if csm is enabled in environment, SDK should send all metrics\n        AWS.Service._clientSideMonitoring = true;\n      }\n    }\n    AWS.SequentialExecutor.call(svc.prototype);\n    AWS.Service.addDefaultMonitoringListeners(svc.prototype);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  addVersions: function addVersions(svc, versions) {\n    if (!Array.isArray(versions)) versions = [versions];\n\n    svc.services = svc.services || {};\n    for (var i = 0; i < versions.length; i++) {\n      if (svc.services[versions[i]] === undefined) {\n        svc.services[versions[i]] = null;\n      }\n    }\n\n    svc.apiVersions = Object.keys(svc.services).sort();\n  },\n\n  /**\n   * @api private\n   */\n  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {\n    var svc = inherit(superclass, {\n      serviceIdentifier: superclass.serviceIdentifier\n    });\n\n    function setApi(api) {\n      if (api.isApi) {\n        svc.prototype.api = api;\n      } else {\n        svc.prototype.api = new Api(api, {\n          serviceIdentifier: superclass.serviceIdentifier\n        });\n      }\n    }\n\n    if (typeof version === 'string') {\n      if (apiConfig) {\n        setApi(apiConfig);\n      } else {\n        try {\n          setApi(AWS.apiLoader(superclass.serviceIdentifier, version));\n        } catch (err) {\n          throw AWS.util.error(err, {\n            message: 'Could not find API configuration ' +\n              superclass.serviceIdentifier + '-' + version\n          });\n        }\n      }\n      if (!Object.prototype.hasOwnProperty.call(superclass.services, version)) {\n        superclass.apiVersions = superclass.apiVersions.concat(version).sort();\n      }\n      superclass.services[version] = svc;\n    } else {\n      setApi(version);\n    }\n\n    AWS.Service.defineMethods(svc);\n    return svc;\n  },\n\n  /**\n   * @api private\n   */\n  hasService: function(identifier) {\n    return Object.prototype.hasOwnProperty.call(AWS.Service._serviceMap, identifier);\n  },\n\n  /**\n   * @param attachOn attach default monitoring listeners to object\n   *\n   * Each monitoring event should be emitted from service client to service constructor prototype and then\n   * to global service prototype like bubbling up. These default monitoring events listener will transfer\n   * the monitoring events to the upper layer.\n   * @api private\n   */\n  addDefaultMonitoringListeners: function addDefaultMonitoringListeners(attachOn) {\n    attachOn.addNamedListener('MONITOR_EVENTS_BUBBLE', 'apiCallAttempt', function EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCallAttempt', [event]);\n    });\n    attachOn.addNamedListener('CALL_EVENTS_BUBBLE', 'apiCall', function CALL_EVENTS_BUBBLE(event) {\n      var baseClass = Object.getPrototypeOf(attachOn);\n      if (baseClass._events) baseClass.emit('apiCall', [event]);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  _serviceMap: {}\n});\n\nAWS.util.mixin(AWS.Service, AWS.SequentialExecutor);\n\n/**\n * @api private\n */\nmodule.exports = AWS.Service;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/service.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/services/s3.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/services/s3.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar v4Credentials = __webpack_require__(/*! ../signers/v4_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v4_credentials.js\");\nvar resolveRegionalEndpointsFlag = __webpack_require__(/*! ../config_regional_endpoint */ \"(rsc)/../../node_modules/aws-sdk/lib/config_regional_endpoint.js\");\nvar s3util = __webpack_require__(/*! ./s3util */ \"(rsc)/../../node_modules/aws-sdk/lib/services/s3util.js\");\nvar regionUtil = __webpack_require__(/*! ../region_config */ \"(rsc)/../../node_modules/aws-sdk/lib/region_config.js\");\n\n// Pull in managed upload extension\n__webpack_require__(/*! ../s3/managed_upload */ \"(rsc)/../../node_modules/aws-sdk/lib/s3/managed_upload.js\");\n\n/**\n * @api private\n */\nvar operationsWith200StatusCodeError = {\n  'completeMultipartUpload': true,\n  'copyObject': true,\n  'uploadPartCopy': true\n};\n\n/**\n * @api private\n */\n var regionRedirectErrorCodes = [\n  'AuthorizationHeaderMalformed', // non-head operations on virtual-hosted global bucket endpoints\n  'BadRequest', // head operations on virtual-hosted global bucket endpoints\n  'PermanentRedirect', // non-head operations on path-style or regional endpoints\n  301 // head operations on path-style or regional endpoints\n ];\n\nvar OBJECT_LAMBDA_SERVICE = 's3-object-lambda';\n\nAWS.util.update(AWS.S3.prototype, {\n  /**\n   * @api private\n   */\n  getSignatureVersion: function getSignatureVersion(request) {\n    var defaultApiVersion = this.api.signatureVersion;\n    var userDefinedVersion = this._originalConfig ? this._originalConfig.signatureVersion : null;\n    var regionDefinedVersion = this.config.signatureVersion;\n    var isPresigned = request ? request.isPresigned() : false;\n    /*\n      1) User defined version specified:\n        a) always return user defined version\n      2) No user defined version specified:\n        a) If not using presigned urls, default to V4\n        b) If using presigned urls, default to lowest version the region supports\n    */\n    if (userDefinedVersion) {\n      userDefinedVersion = userDefinedVersion === 'v2' ? 's3' : userDefinedVersion;\n      return userDefinedVersion;\n    }\n    if (isPresigned !== true) {\n      defaultApiVersion = 'v4';\n    } else if (regionDefinedVersion) {\n      defaultApiVersion = regionDefinedVersion;\n    }\n    return defaultApiVersion;\n  },\n\n  /**\n   * @api private\n   */\n  getSigningName: function getSigningName(req) {\n    if (req && req.operation === 'writeGetObjectResponse') {\n      return OBJECT_LAMBDA_SERVICE;\n    }\n\n    var _super = AWS.Service.prototype.getSigningName;\n    return (req && req._parsedArn && req._parsedArn.service)\n      ? req._parsedArn.service\n      : _super.call(this);\n  },\n\n  /**\n   * @api private\n   */\n  getSignerClass: function getSignerClass(request) {\n    var signatureVersion = this.getSignatureVersion(request);\n    return AWS.Signers.RequestSigner.getVersion(signatureVersion);\n  },\n\n  /**\n   * @api private\n   */\n  validateService: function validateService() {\n    var msg;\n    var messages = [];\n\n    // default to us-east-1 when no region is provided\n    if (!this.config.region) this.config.region = 'us-east-1';\n\n    if (!this.config.endpoint && this.config.s3BucketEndpoint) {\n      messages.push('An endpoint must be provided when configuring ' +\n                    '`s3BucketEndpoint` to true.');\n    }\n    if (messages.length === 1) {\n      msg = messages[0];\n    } else if (messages.length > 1) {\n      msg = 'Multiple configuration errors:\\n' + messages.join('\\n');\n    }\n    if (msg) {\n      throw AWS.util.error(new Error(),\n        {name: 'InvalidEndpoint', message: msg});\n    }\n  },\n\n  /**\n   * @api private\n   */\n  shouldDisableBodySigning: function shouldDisableBodySigning(request) {\n    var signerClass = this.getSignerClass();\n    if (this.config.s3DisableBodySigning === true && signerClass === AWS.Signers.V4\n        && request.httpRequest.endpoint.protocol === 'https:') {\n      return true;\n    }\n    return false;\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('validateResponse', this.setExpiresString);\n    var prependListener = true;\n    request.addListener('validate', this.validateScheme);\n    request.addListener('validate', this.validateBucketName, prependListener);\n    request.addListener('validate', this.optInUsEast1RegionalEndpoint, prependListener);\n\n    request.removeListener('validate',\n      AWS.EventListeners.Core.VALIDATE_REGION);\n    request.addListener('build', this.addContentType);\n    request.addListener('build', this.computeContentMd5);\n    request.addListener('build', this.computeSseCustomerKeyMd5);\n    request.addListener('build', this.populateURI);\n    request.addListener('afterBuild', this.addExpect100Continue);\n    request.addListener('extractError', this.extractError);\n    request.addListener('extractData', AWS.util.hoistPayloadMember);\n    request.addListener('extractData', this.extractData);\n    request.addListener('extractData', this.extractErrorFrom200Response);\n    request.addListener('beforePresign', this.prepareSignedUrl);\n    if (this.shouldDisableBodySigning(request))  {\n      request.removeListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n      request.addListener('afterBuild', this.disableBodySigning);\n    }\n    //deal with ARNs supplied to Bucket\n    if (request.operation !== 'createBucket' && s3util.isArnInParam(request, 'Bucket')) {\n      // avoid duplicate parsing in the future\n      request._parsedArn = AWS.util.ARN.parse(request.params.Bucket);\n\n      request.removeListener('validate', this.validateBucketName);\n      request.removeListener('build', this.populateURI);\n      if (request._parsedArn.service === 's3') {\n        request.addListener('validate', s3util.validateS3AccessPointArn);\n        request.addListener('validate', this.validateArnResourceType);\n        request.addListener('validate', this.validateArnRegion);\n      } else if (request._parsedArn.service === 's3-outposts') {\n        request.addListener('validate', s3util.validateOutpostsAccessPointArn);\n        request.addListener('validate', s3util.validateOutpostsArn);\n        request.addListener('validate', s3util.validateArnRegion);\n      }\n      request.addListener('validate', s3util.validateArnAccount);\n      request.addListener('validate', s3util.validateArnService);\n      request.addListener('build', this.populateUriFromAccessPointArn);\n      request.addListener('build', s3util.validatePopulateUriFromArn);\n      return;\n    }\n    //listeners regarding region inference\n    request.addListener('validate', this.validateBucketEndpoint);\n    request.addListener('validate', this.correctBucketRegionFromCache);\n    request.onAsync('extractError', this.requestBucketRegion);\n    if (AWS.util.isBrowser()) {\n      request.onAsync('retry', this.reqRegionForNetworkingError);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateScheme: function(req) {\n    var params = req.params,\n        scheme = req.httpRequest.endpoint.protocol,\n        sensitive = params.SSECustomerKey || params.CopySourceSSECustomerKey;\n    if (sensitive && scheme !== 'https:') {\n      var msg = 'Cannot send SSE keys over HTTP. Set \\'sslEnabled\\'' +\n        'to \\'true\\' in your configuration';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketEndpoint: function(req) {\n    if (!req.params.Bucket && req.service.config.s3BucketEndpoint) {\n      var msg = 'Cannot send requests to root API with `s3BucketEndpoint` set.';\n      throw AWS.util.error(new Error(),\n        { code: 'ConfigError', message: msg });\n    }\n  },\n\n  /**\n   * @api private\n   */\n   validateArnRegion: function validateArnRegion(req) {\n    s3util.validateArnRegion(req, { allowFipsEndpoint: true });\n  },\n\n  /**\n   * Validate resource-type supplied in S3 ARN\n   */\n  validateArnResourceType: function validateArnResourceType(req) {\n    var resource = req._parsedArn.resource;\n\n    if (\n      resource.indexOf('accesspoint:') !== 0 &&\n      resource.indexOf('accesspoint/') !== 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN resource should begin with \\'accesspoint/\\''\n      });\n    }\n  },\n\n  /**\n   * @api private\n   */\n  validateBucketName: function validateBucketName(req) {\n    var service = req.service;\n    var signatureVersion = service.getSignatureVersion(req);\n    var bucket = req.params && req.params.Bucket;\n    var key = req.params && req.params.Key;\n    var slashIndex = bucket && bucket.indexOf('/');\n    if (bucket && slashIndex >= 0) {\n      if (typeof key === 'string' && slashIndex > 0) {\n        req.params = AWS.util.copy(req.params);\n        // Need to include trailing slash to match sigv2 behavior\n        var prefix = bucket.substr(slashIndex + 1) || '';\n        req.params.Key = prefix + '/' + key;\n        req.params.Bucket = bucket.substr(0, slashIndex);\n      } else if (signatureVersion === 'v4') {\n        var msg = 'Bucket names cannot contain forward slashes. Bucket: ' + bucket;\n        throw AWS.util.error(new Error(),\n          { code: 'InvalidBucket', message: msg });\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  isValidAccelerateOperation: function isValidAccelerateOperation(operation) {\n    var invalidOperations = [\n      'createBucket',\n      'deleteBucket',\n      'listBuckets'\n    ];\n    return invalidOperations.indexOf(operation) === -1;\n  },\n\n  /**\n   * When us-east-1 region endpoint configuration is set, in stead of sending request to\n   * global endpoint(e.g. 's3.amazonaws.com'), we will send request to\n   * 's3.us-east-1.amazonaws.com'.\n   * @api private\n   */\n  optInUsEast1RegionalEndpoint: function optInUsEast1RegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.s3UsEast1RegionalEndpoint = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: 'AWS_S3_US_EAST_1_REGIONAL_ENDPOINT',\n      sharedConfig: 's3_us_east_1_regional_endpoint',\n      clientConfig: 's3UsEast1RegionalEndpoint'\n    });\n    if (\n      !(service._originalConfig || {}).endpoint &&\n      req.httpRequest.region === 'us-east-1' &&\n      config.s3UsEast1RegionalEndpoint === 'regional' &&\n      req.httpRequest.endpoint.hostname.indexOf('s3.amazonaws.com') >= 0\n    ) {\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      var regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.us-east-1' + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n    }\n  },\n\n  /**\n   * S3 prefers dns-compatible bucket names to be moved from the uri path\n   * to the hostname as a sub-domain.  This is not possible, even for dns-compat\n   * buckets when using SSL and the bucket name contains a dot ('.').  The\n   * ssl wildcard certificate is only 1-level deep.\n   *\n   * @api private\n   */\n  populateURI: function populateURI(req) {\n    var httpRequest = req.httpRequest;\n    var b = req.params.Bucket;\n    var service = req.service;\n    var endpoint = httpRequest.endpoint;\n    if (b) {\n      if (!service.pathStyleBucketName(b)) {\n        if (service.config.useAccelerateEndpoint && service.isValidAccelerateOperation(req.operation)) {\n          if (service.config.useDualstackEndpoint) {\n            endpoint.hostname = b + '.s3-accelerate.dualstack.amazonaws.com';\n          } else {\n            endpoint.hostname = b + '.s3-accelerate.amazonaws.com';\n          }\n        } else if (!service.config.s3BucketEndpoint) {\n          endpoint.hostname =\n            b + '.' + endpoint.hostname;\n        }\n\n        var port = endpoint.port;\n        if (port !== 80 && port !== 443) {\n          endpoint.host = endpoint.hostname + ':' +\n            endpoint.port;\n        } else {\n          endpoint.host = endpoint.hostname;\n        }\n\n        httpRequest.virtualHostedBucket = b; // needed for signing the request\n        service.removeVirtualHostedBucketFromPath(req);\n      }\n    }\n  },\n\n  /**\n   * Takes the bucket name out of the path if bucket is virtual-hosted\n   *\n   * @api private\n   */\n  removeVirtualHostedBucketFromPath: function removeVirtualHostedBucketFromPath(req) {\n    var httpRequest = req.httpRequest;\n    var bucket = httpRequest.virtualHostedBucket;\n    if (bucket && httpRequest.path) {\n      if (req.params && req.params.Key) {\n        var encodedS3Key = '/' + AWS.util.uriEscapePath(req.params.Key);\n        if (httpRequest.path.indexOf(encodedS3Key) === 0 && (httpRequest.path.length === encodedS3Key.length || httpRequest.path[encodedS3Key.length] === '?')) {\n          //path only contains key or path contains only key and querystring\n          return;\n        }\n      }\n      httpRequest.path = httpRequest.path.replace(new RegExp('/' + bucket), '');\n      if (httpRequest.path[0] !== '/') {\n        httpRequest.path = '/' + httpRequest.path;\n      }\n    }\n  },\n\n  /**\n   * When user supply an access point ARN in the Bucket parameter, we need to\n   * populate the URI according to the ARN.\n   */\n  populateUriFromAccessPointArn: function populateUriFromAccessPointArn(req) {\n    var accessPointArn = req._parsedArn;\n\n    var isOutpostArn = accessPointArn.service === 's3-outposts';\n    var isObjectLambdaArn = accessPointArn.service === 's3-object-lambda';\n\n    var outpostsSuffix = isOutpostArn ? '.' + accessPointArn.outpostId: '';\n    var serviceName = isOutpostArn ? 's3-outposts': 's3-accesspoint';\n    var fipsSuffix = !isOutpostArn && req.service.config.useFipsEndpoint ? '-fips': '';\n    var dualStackSuffix = !isOutpostArn &&\n      req.service.config.useDualstackEndpoint ? '.dualstack' : '';\n\n    var endpoint = req.httpRequest.endpoint;\n    var dnsSuffix = regionUtil.getEndpointSuffix(accessPointArn.region);\n    var useArnRegion = req.service.config.s3UseArnRegion;\n\n    endpoint.hostname = [\n      accessPointArn.accessPoint + '-' + accessPointArn.accountId + outpostsSuffix,\n      serviceName + fipsSuffix + dualStackSuffix,\n      useArnRegion ? accessPointArn.region : req.service.config.region,\n      dnsSuffix\n    ].join('.');\n\n    if (isObjectLambdaArn) {\n      // should be in the format: \"accesspoint/${accesspointName}\"\n      var serviceName = 's3-object-lambda';\n      var accesspointName = accessPointArn.resource.split('/')[1];\n      var fipsSuffix = req.service.config.useFipsEndpoint ? '-fips': '';\n      endpoint.hostname = [\n        accesspointName + '-' + accessPointArn.accountId,\n        serviceName + fipsSuffix,\n        useArnRegion ? accessPointArn.region : req.service.config.region,\n        dnsSuffix\n      ].join('.');\n    }\n    endpoint.host = endpoint.hostname;\n    var encodedArn = AWS.util.uriEscape(req.params.Bucket);\n    var path = req.httpRequest.path;\n    //remove the Bucket value from path\n    req.httpRequest.path = path.replace(new RegExp('/' + encodedArn), '');\n    if (req.httpRequest.path[0] !== '/') {\n      req.httpRequest.path = '/' + req.httpRequest.path;\n    }\n    req.httpRequest.region = accessPointArn.region; //region used to sign\n  },\n\n  /**\n   * Adds Expect: 100-continue header if payload is greater-or-equal 1MB\n   * @api private\n   */\n  addExpect100Continue: function addExpect100Continue(req) {\n    var len = req.httpRequest.headers['Content-Length'];\n    if (AWS.util.isNode() && (len >= 1024 * 1024 || req.params.Body instanceof AWS.util.stream.Stream)) {\n      req.httpRequest.headers['Expect'] = '100-continue';\n    }\n  },\n\n  /**\n   * Adds a default content type if none is supplied.\n   *\n   * @api private\n   */\n  addContentType: function addContentType(req) {\n    var httpRequest = req.httpRequest;\n    if (httpRequest.method === 'GET' || httpRequest.method === 'HEAD') {\n      // Content-Type is not set in GET/HEAD requests\n      delete httpRequest.headers['Content-Type'];\n      return;\n    }\n\n    if (!httpRequest.headers['Content-Type']) { // always have a Content-Type\n      httpRequest.headers['Content-Type'] = 'application/octet-stream';\n    }\n\n    var contentType = httpRequest.headers['Content-Type'];\n    if (AWS.util.isBrowser()) {\n      if (typeof httpRequest.body === 'string' && !contentType.match(/;\\s*charset=/)) {\n        var charset = '; charset=UTF-8';\n        httpRequest.headers['Content-Type'] += charset;\n      } else {\n        var replaceFn = function(_, prefix, charsetName) {\n          return prefix + charsetName.toUpperCase();\n        };\n\n        httpRequest.headers['Content-Type'] =\n          contentType.replace(/(;\\s*charset=)(.+)$/, replaceFn);\n      }\n    }\n  },\n\n  /**\n   * Checks whether checksums should be computed for the request if it's not\n   * already set by {AWS.EventListeners.Core.COMPUTE_CHECKSUM}. It depends on\n   * whether {AWS.Config.computeChecksums} is set.\n   *\n   * @param req [AWS.Request] the request to check against\n   * @return [Boolean] whether to compute checksums for a request.\n   * @api private\n   */\n  willComputeChecksums: function willComputeChecksums(req) {\n    var rules = req.service.api.operations[req.operation].input.members;\n    var body = req.httpRequest.body;\n    var needsContentMD5 = req.service.config.computeChecksums &&\n      rules.ContentMD5 &&\n      !req.params.ContentMD5 &&\n      body &&\n      (AWS.util.Buffer.isBuffer(req.httpRequest.body) || typeof req.httpRequest.body === 'string');\n\n    // Sha256 signing disabled, and not a presigned url\n    if (needsContentMD5 && req.service.shouldDisableBodySigning(req) && !req.isPresigned()) {\n      return true;\n    }\n\n    // SigV2 and presign, for backwards compatibility purpose.\n    if (needsContentMD5 && this.getSignatureVersion(req) === 's3' && req.isPresigned()) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * A listener that computes the Content-MD5 and sets it in the header.\n   * This listener is to support S3-specific features like\n   * s3DisableBodySigning and SigV2 presign. Content MD5 logic for SigV4 is\n   * handled in AWS.EventListeners.Core.COMPUTE_CHECKSUM\n   *\n   * @api private\n   */\n  computeContentMd5: function computeContentMd5(req) {\n    if (req.service.willComputeChecksums(req)) {\n      var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');\n      req.httpRequest.headers['Content-MD5'] = md5;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  computeSseCustomerKeyMd5: function computeSseCustomerKeyMd5(req) {\n    var keys = {\n      SSECustomerKey: 'x-amz-server-side-encryption-customer-key-MD5',\n      CopySourceSSECustomerKey: 'x-amz-copy-source-server-side-encryption-customer-key-MD5'\n    };\n    AWS.util.each(keys, function(key, header) {\n      if (req.params[key]) {\n        var value = AWS.util.crypto.md5(req.params[key], 'base64');\n        req.httpRequest.headers[header] = value;\n      }\n    });\n  },\n\n  /**\n   * Returns true if the bucket name should be left in the URI path for\n   * a request to S3.  This function takes into account the current\n   * endpoint protocol (e.g. http or https).\n   *\n   * @api private\n   */\n  pathStyleBucketName: function pathStyleBucketName(bucketName) {\n    // user can force path style requests via the configuration\n    if (this.config.s3ForcePathStyle) return true;\n    if (this.config.s3BucketEndpoint) return false;\n\n    if (s3util.dnsCompatibleBucketName(bucketName)) {\n      return (this.config.sslEnabled && bucketName.match(/\\./)) ? true : false;\n    } else {\n      return true; // not dns compatible names must always use path style\n    }\n  },\n\n  /**\n   * For COPY operations, some can be error even with status code 200.\n   * SDK treats the response as exception when response body indicates\n   * an exception or body is empty.\n   *\n   * @api private\n   */\n  extractErrorFrom200Response: function extractErrorFrom200Response(resp) {\n    if (!operationsWith200StatusCodeError[resp.request.operation]) return;\n    var httpResponse = resp.httpResponse;\n    if (httpResponse.body && httpResponse.body.toString().match('<Error>')) {\n      // Response body with '<Error>...</Error>' indicates an exception.\n      // Get S3 client object. In ManagedUpload, this.service refers to\n      // S3 client object.\n      resp.data = null;\n      var service = this.service ? this.service : this;\n      service.extractError(resp);\n      throw resp.error;\n    } else if (!httpResponse.body || !httpResponse.body.toString().match(/<[\\w_]/)) {\n      // When body is empty or incomplete, S3 might stop the request on detecting client\n      // side aborting the request.\n      resp.data = null;\n      throw AWS.util.error(new Error(), {\n        code: 'InternalError',\n        message: 'S3 aborted request'\n      });\n    }\n  },\n\n  /**\n   * @return [Boolean] whether the error can be retried\n   * @api private\n   */\n  retryableError: function retryableError(error, request) {\n    if (operationsWith200StatusCodeError[request.operation] &&\n        error.statusCode === 200) {\n      return true;\n    } else if (request._requestRegionForBucket &&\n        request.service.bucketRegionCache[request._requestRegionForBucket]) {\n      return false;\n    } else if (error && error.code === 'RequestTimeout') {\n      return true;\n    } else if (error &&\n        regionRedirectErrorCodes.indexOf(error.code) != -1 &&\n        error.region && error.region != request.httpRequest.region) {\n      request.httpRequest.region = error.region;\n      if (error.statusCode === 301) {\n        request.service.updateReqBucketRegion(request);\n      }\n      return true;\n    } else {\n      var _super = AWS.Service.prototype.retryableError;\n      return _super.call(this, error, request);\n    }\n  },\n\n  /**\n   * Updates httpRequest with region. If region is not provided, then\n   * the httpRequest will be updated based on httpRequest.region\n   *\n   * @api private\n   */\n  updateReqBucketRegion: function updateReqBucketRegion(request, region) {\n    var httpRequest = request.httpRequest;\n    if (typeof region === 'string' && region.length) {\n      httpRequest.region = region;\n    }\n    if (!httpRequest.endpoint.host.match(/s3(?!-accelerate).*\\.amazonaws\\.com$/)) {\n      return;\n    }\n    var service = request.service;\n    var s3Config = service.config;\n    var s3BucketEndpoint = s3Config.s3BucketEndpoint;\n    if (s3BucketEndpoint) {\n      delete s3Config.s3BucketEndpoint;\n    }\n    var newConfig = AWS.util.copy(s3Config);\n    delete newConfig.endpoint;\n    newConfig.region = httpRequest.region;\n\n    httpRequest.endpoint = (new AWS.S3(newConfig)).endpoint;\n    service.populateURI(request);\n    s3Config.s3BucketEndpoint = s3BucketEndpoint;\n    httpRequest.headers.Host = httpRequest.endpoint.host;\n\n    if (request._asm.currentState === 'validate') {\n      request.removeListener('build', service.populateURI);\n      request.addListener('build', service.removeVirtualHostedBucketFromPath);\n    }\n  },\n\n  /**\n   * Provides a specialized parser for getBucketLocation -- all other\n   * operations are parsed by the super class.\n   *\n   * @api private\n   */\n  extractData: function extractData(resp) {\n    var req = resp.request;\n    if (req.operation === 'getBucketLocation') {\n      var match = resp.httpResponse.body.toString().match(/>(.+)<\\/Location/);\n      delete resp.data['_'];\n      if (match) {\n        resp.data.LocationConstraint = match[1];\n      } else {\n        resp.data.LocationConstraint = '';\n      }\n    }\n    var bucket = req.params.Bucket || null;\n    if (req.operation === 'deleteBucket' && typeof bucket === 'string' && !resp.error) {\n      req.service.clearBucketRegionCache(bucket);\n    } else {\n      var headers = resp.httpResponse.headers || {};\n      var region = headers['x-amz-bucket-region'] || null;\n      if (!region && req.operation === 'createBucket' && !resp.error) {\n        var createBucketConfiguration = req.params.CreateBucketConfiguration;\n        if (!createBucketConfiguration) {\n          region = 'us-east-1';\n        } else if (createBucketConfiguration.LocationConstraint === 'EU') {\n          region = 'eu-west-1';\n        } else {\n          region = createBucketConfiguration.LocationConstraint;\n        }\n      }\n      if (region) {\n          if (bucket && region !== req.service.bucketRegionCache[bucket]) {\n            req.service.bucketRegionCache[bucket] = region;\n          }\n      }\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * Extracts an error object from the http response.\n   *\n   * @api private\n   */\n  extractError: function extractError(resp) {\n    var codes = {\n      304: 'NotModified',\n      403: 'Forbidden',\n      400: 'BadRequest',\n      404: 'NotFound'\n    };\n\n    var req = resp.request;\n    var code = resp.httpResponse.statusCode;\n    var body = resp.httpResponse.body || '';\n\n    var headers = resp.httpResponse.headers || {};\n    var region = headers['x-amz-bucket-region'] || null;\n    var bucket = req.params.Bucket || null;\n    var bucketRegionCache = req.service.bucketRegionCache;\n    if (region && bucket && region !== bucketRegionCache[bucket]) {\n      bucketRegionCache[bucket] = region;\n    }\n\n    var cachedRegion;\n    if (codes[code] && body.length === 0) {\n      if (bucket && !region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n      resp.error = AWS.util.error(new Error(), {\n        code: codes[code],\n        message: null,\n        region: region\n      });\n    } else {\n      var data = new AWS.XML.Parser().parse(body.toString());\n\n      if (data.Region && !region) {\n        region = data.Region;\n        if (bucket && region !== bucketRegionCache[bucket]) {\n          bucketRegionCache[bucket] = region;\n        }\n      } else if (bucket && !region && !data.Region) {\n        cachedRegion = bucketRegionCache[bucket] || null;\n        if (cachedRegion !== req.httpRequest.region) {\n          region = cachedRegion;\n        }\n      }\n\n      resp.error = AWS.util.error(new Error(), {\n        code: data.Code || code,\n        message: data.Message || null,\n        region: region\n      });\n    }\n    req.service.extractRequestIds(resp);\n  },\n\n  /**\n   * If region was not obtained synchronously, then send async request\n   * to get bucket region for errors resulting from wrong region.\n   *\n   * @api private\n   */\n  requestBucketRegion: function requestBucketRegion(resp, done) {\n    var error = resp.error;\n    var req = resp.request;\n    var bucket = req.params.Bucket || null;\n\n    if (!error || !bucket || error.region || req.operation === 'listObjects' ||\n        (AWS.util.isNode() && req.operation === 'headBucket') ||\n        (error.statusCode === 400 && req.operation !== 'headObject') ||\n        regionRedirectErrorCodes.indexOf(error.code) === -1) {\n      return done();\n    }\n    var reqOperation = AWS.util.isNode() ? 'headBucket' : 'listObjects';\n    var reqParams = {Bucket: bucket};\n    if (reqOperation === 'listObjects') reqParams.MaxKeys = 0;\n    var regionReq = req.service[reqOperation](reqParams);\n    regionReq._requestRegionForBucket = bucket;\n    regionReq.send(function() {\n      var region = req.service.bucketRegionCache[bucket] || null;\n      error.region = region;\n      done();\n    });\n  },\n\n   /**\n   * For browser only. If NetworkingError received, will attempt to obtain\n   * the bucket region.\n   *\n   * @api private\n   */\n   reqRegionForNetworkingError: function reqRegionForNetworkingError(resp, done) {\n    if (!AWS.util.isBrowser()) {\n      return done();\n    }\n    var error = resp.error;\n    var request = resp.request;\n    var bucket = request.params.Bucket;\n    if (!error || error.code !== 'NetworkingError' || !bucket ||\n        request.httpRequest.region === 'us-east-1') {\n      return done();\n    }\n    var service = request.service;\n    var bucketRegionCache = service.bucketRegionCache;\n    var cachedRegion = bucketRegionCache[bucket] || null;\n\n    if (cachedRegion && cachedRegion !== request.httpRequest.region) {\n      service.updateReqBucketRegion(request, cachedRegion);\n      done();\n    } else if (!s3util.dnsCompatibleBucketName(bucket)) {\n      service.updateReqBucketRegion(request, 'us-east-1');\n      if (bucketRegionCache[bucket] !== 'us-east-1') {\n        bucketRegionCache[bucket] = 'us-east-1';\n      }\n      done();\n    } else if (request.httpRequest.virtualHostedBucket) {\n      var getRegionReq = service.listObjects({Bucket: bucket, MaxKeys: 0});\n      service.updateReqBucketRegion(getRegionReq, 'us-east-1');\n      getRegionReq._requestRegionForBucket = bucket;\n\n      getRegionReq.send(function() {\n        var region = service.bucketRegionCache[bucket] || null;\n        if (region && region !== request.httpRequest.region) {\n          service.updateReqBucketRegion(request, region);\n        }\n        done();\n      });\n    } else {\n      // DNS-compatible path-style\n      // (s3ForcePathStyle or bucket name with dot over https)\n      // Cannot obtain region information for this case\n      done();\n    }\n   },\n\n  /**\n   * Cache for bucket region.\n   *\n   * @api private\n   */\n   bucketRegionCache: {},\n\n  /**\n   * Clears bucket region cache.\n   *\n   * @api private\n   */\n   clearBucketRegionCache: function(buckets) {\n    var bucketRegionCache = this.bucketRegionCache;\n    if (!buckets) {\n      buckets = Object.keys(bucketRegionCache);\n    } else if (typeof buckets === 'string') {\n      buckets = [buckets];\n    }\n    for (var i = 0; i < buckets.length; i++) {\n      delete bucketRegionCache[buckets[i]];\n    }\n    return bucketRegionCache;\n   },\n\n   /**\n    * Corrects request region if bucket's cached region is different\n    *\n    * @api private\n    */\n  correctBucketRegionFromCache: function correctBucketRegionFromCache(req) {\n    var bucket = req.params.Bucket || null;\n    if (bucket) {\n      var service = req.service;\n      var requestRegion = req.httpRequest.region;\n      var cachedRegion = service.bucketRegionCache[bucket];\n      if (cachedRegion && cachedRegion !== requestRegion) {\n        service.updateReqBucketRegion(req, cachedRegion);\n      }\n    }\n  },\n\n  /**\n   * Extracts S3 specific request ids from the http response.\n   *\n   * @api private\n   */\n  extractRequestIds: function extractRequestIds(resp) {\n    var extendedRequestId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-id-2'] : null;\n    var cfId = resp.httpResponse.headers ? resp.httpResponse.headers['x-amz-cf-id'] : null;\n    resp.extendedRequestId = extendedRequestId;\n    resp.cfId = cfId;\n\n    if (resp.error) {\n      resp.error.requestId = resp.requestId || null;\n      resp.error.extendedRequestId = extendedRequestId;\n      resp.error.cfId = cfId;\n    }\n  },\n\n  /**\n   * Get a pre-signed URL for a given operation name.\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   * @note Not all operation parameters are supported when using pre-signed\n   *   URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *   `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *   request. If you are using pre-signed URLs to upload from a browser and\n   *   need to use these fields, see {createPresignedPost}.\n   * @note The default signer allows altering the request by adding corresponding\n   *   headers to set some parameters (e.g. Range) and these added parameters\n   *   won't be signed. You must use signatureVersion v4 to to include these\n   *   parameters in the signed portion of the URL and enforce exact matching\n   *   between headers and signed params in the URL.\n   * @note This operation cannot be used with a promise. See note above regarding\n   *   asynchronous credentials and use with a callback.\n   * @param operation [String] the name of the operation to call\n   * @param params [map] parameters to pass to the operation. See the given\n   *   operation for the expected operation parameters. In addition, you can\n   *   also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *   work for.\n   * @option params Expires [Integer] (900) the number of seconds to expire\n   *   the pre-signed URL operation in. Defaults to 15 minutes.\n   * @param callback [Function] if a callback is provided, this function will\n   *   pass the URL as the second parameter (after the error parameter) to\n   *   the callback function.\n   * @return [String] if called synchronously (with no callback), returns the\n   *   signed URL.\n   * @return [null] nothing is returned if a callback is provided.\n   * @example Pre-signing a getObject operation (synchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url);\n   * @example Pre-signing a putObject (asynchronously)\n   *   var params = {Bucket: 'bucket', Key: 'key'};\n   *   s3.getSignedUrl('putObject', params, function (err, url) {\n   *     console.log('The URL is', url);\n   *   });\n   * @example Pre-signing a putObject operation with a specific payload\n   *   var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *   var url = s3.getSignedUrl('putObject', params);\n   *   console.log('The URL is', url);\n   * @example Passing in a 1-minute expiry time for a pre-signed URL\n   *   var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *   var url = s3.getSignedUrl('getObject', params);\n   *   console.log('The URL is', url); // expires in 60 seconds\n   */\n  getSignedUrl: function getSignedUrl(operation, params, callback) {\n    params = AWS.util.copy(params || {});\n    var expires = params.Expires || 900;\n\n    if (typeof expires !== 'number') {\n      throw AWS.util.error(new Error(),\n        { code: 'InvalidParameterException', message: 'The expiration must be a number, received ' + typeof expires });\n    }\n\n    delete params.Expires; // we can't validate this\n    var request = this.makeRequest(operation, params);\n\n    if (callback) {\n      AWS.util.defer(function() {\n        request.presign(expires, callback);\n      });\n    } else {\n      return request.presign(expires, callback);\n    }\n  },\n\n  /**\n   * @!method  getSignedUrlPromise()\n   *   Returns a 'thenable' promise that will be resolved with a pre-signed URL\n   *   for a given operation name.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @note Not all operation parameters are supported when using pre-signed\n   *      URLs. Certain parameters, such as `SSECustomerKey`, `ACL`, `Expires`,\n   *      `ContentLength`, or `Tagging` must be provided as headers when sending a\n   *      request. If you are using pre-signed URLs to upload from a browser and\n   *      need to use these fields, see {createPresignedPost}.\n   *   @param operation [String] the name of the operation to call\n   *   @param params [map] parameters to pass to the operation. See the given\n   *      operation for the expected operation parameters. In addition, you can\n   *      also pass the \"Expires\" parameter to inform S3 how long the URL should\n   *      work for.\n   *   @option params Expires [Integer] (900) the number of seconds to expire\n   *      the pre-signed URL operation in. Defaults to 15 minutes.\n   *   @callback fulfilledCallback function(url)\n   *     Called if the promise is fulfilled.\n   *     @param url [String] the signed url\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Pre-signing a getObject operation\n   *      var params = {Bucket: 'bucket', Key: 'key'};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Pre-signing a putObject operation with a specific payload\n   *      var params = {Bucket: 'bucket', Key: 'key', Body: 'body'};\n   *      var promise = s3.getSignedUrlPromise('putObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   *   @example Passing in a 1-minute expiry time for a pre-signed URL\n   *      var params = {Bucket: 'bucket', Key: 'key', Expires: 60};\n   *      var promise = s3.getSignedUrlPromise('getObject', params);\n   *      promise.then(function(url) {\n   *        console.log('The URL is', url);\n   *      }, function(err) { ... });\n   */\n\n  /**\n   * Get a pre-signed POST policy to support uploading to S3 directly from an\n   * HTML form.\n   *\n   * @param params [map]\n   * @option params Bucket [String]     The bucket to which the post should be\n   *                                    uploaded\n   * @option params Expires [Integer]   (3600) The number of seconds for which\n   *                                    the presigned policy should be valid.\n   * @option params Conditions [Array]  An array of conditions that must be met\n   *                                    for the presigned policy to allow the\n   *                                    upload. This can include required tags,\n   *                                    the accepted range for content lengths,\n   *                                    etc.\n   * @see http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-HTTPPOSTConstructPolicy.html\n   * @option params Fields [map]        Fields to include in the form. All\n   *                                    values passed in as fields will be\n   *                                    signed as exact match conditions.\n   * @param callback [Function]\n   *\n   * @note All fields passed in when creating presigned post data will be signed\n   *   as exact match conditions. Any fields that will be interpolated by S3\n   *   must be added to the fields hash after signing, and an appropriate\n   *   condition for such fields must be explicitly added to the Conditions\n   *   array passed to this function before signing.\n   *\n   * @example Presiging post data with a known key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Fields: {\n   *       key: 'key'\n   *     }\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @example Presigning post data with an interpolated key\n   *   var params = {\n   *     Bucket: 'bucket',\n   *     Conditions: [\n   *       ['starts-with', '$key', 'path/to/uploads/']\n   *     ]\n   *   };\n   *   s3.createPresignedPost(params, function(err, data) {\n   *     if (err) {\n   *       console.error('Presigning post data encountered an error', err);\n   *     } else {\n   *       data.Fields.key = 'path/to/uploads/${filename}';\n   *       console.log('The post data is', data);\n   *     }\n   *   });\n   *\n   * @note You must ensure that you have static or previously resolved\n   *   credentials if you call this method synchronously (with no callback),\n   *   otherwise it may not properly sign the request. If you cannot guarantee\n   *   this (you are using an asynchronous credential provider, i.e., EC2\n   *   IAM roles), you should always call this method with an asynchronous\n   *   callback.\n   *\n   * @return [map]  If called synchronously (with no callback), returns a hash\n   *                with the url to set as the form action and a hash of fields\n   *                to include in the form.\n   * @return [null] Nothing is returned if a callback is provided.\n   *\n   * @callback callback function (err, data)\n   *  @param err [Error] the error object returned from the policy signer\n   *  @param data [map] The data necessary to construct an HTML form\n   *  @param data.url [String] The URL to use as the action of the form\n   *  @param data.fields [map] A hash of fields that must be included in the\n   *                           form for the upload to succeed. This hash will\n   *                           include the signed POST policy, your access key\n   *                           ID and security token (if present), etc. These\n   *                           may be safely included as input elements of type\n   *                           'hidden.'\n   */\n  createPresignedPost: function createPresignedPost(params, callback) {\n    if (typeof params === 'function' && callback === undefined) {\n      callback = params;\n      params = null;\n    }\n\n    params = AWS.util.copy(params || {});\n    var boundParams = this.config.params || {};\n    var bucket = params.Bucket || boundParams.Bucket,\n      self = this,\n      config = this.config,\n      endpoint = AWS.util.copy(this.endpoint);\n    if (!config.s3BucketEndpoint) {\n      endpoint.pathname = '/' + bucket;\n    }\n\n    function finalizePost() {\n      return {\n        url: AWS.util.urlFormat(endpoint),\n        fields: self.preparePostFields(\n          config.credentials,\n          config.region,\n          bucket,\n          params.Fields,\n          params.Conditions,\n          params.Expires\n        )\n      };\n    }\n\n    if (callback) {\n      config.getCredentials(function (err) {\n        if (err) {\n          callback(err);\n        } else {\n          try {\n            callback(null, finalizePost());\n          } catch (err) {\n            callback(err);\n          }\n        }\n      });\n    } else {\n      return finalizePost();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  preparePostFields: function preparePostFields(\n    credentials,\n    region,\n    bucket,\n    fields,\n    conditions,\n    expiresInSeconds\n  ) {\n    var now = this.getSkewCorrectedDate();\n    if (!credentials || !region || !bucket) {\n      throw new Error('Unable to create a POST object policy without a bucket,'\n        + ' region, and credentials');\n    }\n    fields = AWS.util.copy(fields || {});\n    conditions = (conditions || []).slice(0);\n    expiresInSeconds = expiresInSeconds || 3600;\n\n    var signingDate = AWS.util.date.iso8601(now).replace(/[:\\-]|\\.\\d{3}/g, '');\n    var shortDate = signingDate.substr(0, 8);\n    var scope = v4Credentials.createScope(shortDate, region, 's3');\n    var credential = credentials.accessKeyId + '/' + scope;\n\n    fields['bucket'] = bucket;\n    fields['X-Amz-Algorithm'] = 'AWS4-HMAC-SHA256';\n    fields['X-Amz-Credential'] = credential;\n    fields['X-Amz-Date'] = signingDate;\n    if (credentials.sessionToken) {\n      fields['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n    for (var field in fields) {\n      if (fields.hasOwnProperty(field)) {\n        var condition = {};\n        condition[field] = fields[field];\n        conditions.push(condition);\n      }\n    }\n\n    fields.Policy = this.preparePostPolicy(\n      new Date(now.valueOf() + expiresInSeconds * 1000),\n      conditions\n    );\n    fields['X-Amz-Signature'] = AWS.util.crypto.hmac(\n      v4Credentials.getSigningKey(credentials, shortDate, region, 's3', true),\n      fields.Policy,\n      'hex'\n    );\n\n    return fields;\n  },\n\n  /**\n   * @api private\n   */\n  preparePostPolicy: function preparePostPolicy(expiration, conditions) {\n    return AWS.util.base64.encode(JSON.stringify({\n      expiration: AWS.util.date.iso8601(expiration),\n      conditions: conditions\n    }));\n  },\n\n  /**\n   * @api private\n   */\n  prepareSignedUrl: function prepareSignedUrl(request) {\n    request.addListener('validate', request.service.noPresignedContentLength);\n    request.removeListener('build', request.service.addContentType);\n    if (!request.params.Body) {\n      // no Content-MD5/SHA-256 if body is not provided\n      request.removeListener('build', request.service.computeContentMd5);\n    } else {\n      request.addListener('afterBuild', AWS.EventListeners.Core.COMPUTE_SHA256);\n    }\n  },\n\n  /**\n   * @api private\n   * @param request\n   */\n  disableBodySigning: function disableBodySigning(request) {\n    var headers = request.httpRequest.headers;\n    // Add the header to anything that isn't a presigned url, unless that presigned url had a body defined\n    if (!Object.prototype.hasOwnProperty.call(headers, 'presigned-expires')) {\n      headers['X-Amz-Content-Sha256'] = 'UNSIGNED-PAYLOAD';\n    }\n  },\n\n  /**\n   * @api private\n   */\n  noPresignedContentLength: function noPresignedContentLength(request) {\n    if (request.params.ContentLength !== undefined) {\n      throw AWS.util.error(new Error(), {code: 'UnexpectedParameter',\n        message: 'ContentLength is not supported in pre-signed URLs.'});\n    }\n  },\n\n  createBucket: function createBucket(params, callback) {\n    // When creating a bucket *outside* the classic region, the location\n    // constraint must be set for the bucket and it must match the endpoint.\n    // This chunk of code will set the location constraint param based\n    // on the region (when possible), but it will not override a passed-in\n    // location constraint.\n    if (typeof params === 'function' || !params) {\n      callback = callback || params;\n      params = {};\n    }\n    var hostname = this.endpoint.hostname;\n    // copy params so that appending keys does not unintentioinallly\n    // mutate params object argument passed in by user\n    var copiedParams = AWS.util.copy(params);\n\n    if (hostname !== this.api.globalEndpoint && !params.CreateBucketConfiguration) {\n      copiedParams.CreateBucketConfiguration = { LocationConstraint: this.config.region };\n    }\n    return this.makeRequest('createBucket', copiedParams, callback);\n  },\n\n  writeGetObjectResponse: function writeGetObjectResponse(params, callback) {\n\n    var request = this.makeRequest('writeGetObjectResponse', AWS.util.copy(params), callback);\n    var hostname = this.endpoint.hostname;\n    if (hostname.indexOf(this.config.region) !== -1) {\n      // hostname specifies a region already\n      hostname = hostname.replace('s3.', OBJECT_LAMBDA_SERVICE + '.');\n    } else {\n      // Hostname doesn't have a region.\n      // Object Lambda requires an explicit region.\n      hostname = hostname.replace('s3.', OBJECT_LAMBDA_SERVICE + '.' + this.config.region + '.');\n    }\n\n    request.httpRequest.endpoint = new AWS.Endpoint(hostname, this.config);\n    return request;\n  },\n\n  /**\n   * @see AWS.S3.ManagedUpload\n   * @overload upload(params = {}, [options], [callback])\n   *   Uploads an arbitrarily sized buffer, blob, or stream, using intelligent\n   *   concurrent handling of parts if the payload is large enough. You can\n   *   configure the concurrent queue size by setting `options`. Note that this\n   *   is the only operation for which the SDK can retry requests with stream\n   *   bodies.\n   *\n   *   @param (see AWS.S3.putObject)\n   *   @option (see AWS.S3.ManagedUpload.constructor)\n   *   @return [AWS.S3.ManagedUpload] the managed upload object that can call\n   *     `send()` or track progress.\n   *   @example Uploading a stream object\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     s3.upload(params, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   *   @example Uploading a stream with concurrency of 1 and partSize of 10mb\n   *     var params = {Bucket: 'bucket', Key: 'key', Body: stream};\n   *     var options = {partSize: 10 * 1024 * 1024, queueSize: 1};\n   *     s3.upload(params, options, function(err, data) {\n   *       console.log(err, data);\n   *     });\n   * @callback callback function(err, data)\n   *   @param err [Error] an error or null if no error occurred.\n   *   @param data [map] The response data from the successful upload:\n   *   @param data.Location [String] the URL of the uploaded object\n   *   @param data.ETag [String] the ETag of the uploaded object\n   *   @param data.Bucket [String]  the bucket to which the object was uploaded\n   *   @param data.Key [String] the key to which the object was uploaded\n   */\n  upload: function upload(params, options, callback) {\n    if (typeof options === 'function' && callback === undefined) {\n      callback = options;\n      options = null;\n    }\n\n    options = options || {};\n    options = AWS.util.merge(options || {}, {service: this, params: params});\n\n    var uploader = new AWS.S3.ManagedUpload(options);\n    if (typeof callback === 'function') uploader.send(callback);\n    return uploader;\n  },\n\n  /**\n   * @api private\n   */\n  setExpiresString: function setExpiresString(response) {\n    // Check if response contains Expires value, and populate ExpiresString.\n    if (response && response.httpResponse && response.httpResponse.headers) {\n      if ('expires' in response.httpResponse.headers) {\n        response.httpResponse.headers.expiresstring = response.httpResponse.headers.expires;\n      }\n    }\n\n    // Check if value in Expires is not a Date using parseTimestamp.\n    try {\n      if (response && response.httpResponse && response.httpResponse.headers) {\n        if ('expires' in response.httpResponse.headers) {\n          AWS.util.date.parseTimestamp(response.httpResponse.headers.expires);\n        }\n      }\n    } catch (e) {\n      console.log('AWS SDK', '(warning)', e);\n      delete response.httpResponse.headers.expires;\n    }\n  }\n});\n\n/**\n * @api private\n */\nAWS.S3.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getSignedUrlPromise = AWS.util.promisifyMethod('getSignedUrl', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.S3.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getSignedUrlPromise;\n};\n\nAWS.util.addPromises(AWS.S3);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/services/s3.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/services/s3util.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/services/s3util.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar regionUtil = __webpack_require__(/*! ../region_config */ \"(rsc)/../../node_modules/aws-sdk/lib/region_config.js\");\n\nvar s3util = {\n  /**\n   * @api private\n   */\n  isArnInParam: function isArnInParam(req, paramName) {\n    var inputShape = (req.service.api.operations[req.operation] || {}).input || {};\n    var inputMembers = inputShape.members || {};\n    if (!req.params[paramName] || !inputMembers[paramName]) return false;\n    return AWS.util.ARN.validate(req.params[paramName]);\n  },\n\n  /**\n   * Validate service component from ARN supplied in Bucket parameter\n   */\n  validateArnService: function validateArnService(req) {\n    var parsedArn = req._parsedArn;\n\n    if (parsedArn.service !== 's3'\n      && parsedArn.service !== 's3-outposts'\n      && parsedArn.service !== 's3-object-lambda') {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'expect \\'s3\\' or \\'s3-outposts\\' or \\'s3-object-lambda\\' in ARN service component'\n      });\n    }\n  },\n\n  /**\n   * Validate account ID from ARN supplied in Bucket parameter is a valid account\n   */\n  validateArnAccount: function validateArnAccount(req) {\n    var parsedArn = req._parsedArn;\n\n    if (!/[0-9]{12}/.exec(parsedArn.accountId)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN accountID does not match regex \"[0-9]{12}\"'\n      });\n    }\n  },\n\n  /**\n   * Validate ARN supplied in Bucket parameter is a valid access point ARN\n   */\n  validateS3AccessPointArn: function validateS3AccessPointArn(req) {\n    var parsedArn = req._parsedArn;\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['accesspoint'.length];\n\n    if (parsedArn.resource.split(delimiter).length !== 2) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access Point ARN should have one resource accesspoint/{accesspointName}'\n      });\n    }\n\n    var accessPoint = parsedArn.resource.split(delimiter)[1];\n    var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n    if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n      });\n    }\n\n    //set parsed valid access point\n    req._parsedArn.accessPoint = accessPoint;\n  },\n\n  /**\n   * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n   */\n  validateOutpostsArn: function validateOutpostsArn(req) {\n    var parsedArn = req._parsedArn;\n\n    if (\n      parsedArn.resource.indexOf('outpost:') !== 0 &&\n      parsedArn.resource.indexOf('outpost/') !== 0\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'ARN resource should begin with \\'outpost/\\''\n      });\n    }\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['outpost'.length];\n    var outpostId = parsedArn.resource.split(delimiter)[1];\n    var dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(outpostId)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Outpost resource in ARN is not DNS compatible. Got ' + outpostId\n      });\n    }\n    req._parsedArn.outpostId = outpostId;\n  },\n\n  /**\n   * Validate Outposts ARN supplied in Bucket parameter is a valid outposts ARN\n   */\n  validateOutpostsAccessPointArn: function validateOutpostsAccessPointArn(req) {\n    var parsedArn = req._parsedArn;\n\n    //can be ':' or '/'\n    var delimiter = parsedArn.resource['outpost'.length];\n\n    if (parsedArn.resource.split(delimiter).length !== 4) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Outposts ARN should have two resources outpost/{outpostId}/accesspoint/{accesspointName}'\n      });\n    }\n\n    var accessPoint = parsedArn.resource.split(delimiter)[3];\n    var accessPointPrefix = accessPoint + '-' + parsedArn.accountId;\n    if (!s3util.dnsCompatibleBucketName(accessPointPrefix) || accessPointPrefix.match(/\\./)) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: 'Access point resource in ARN is not DNS compatible. Got ' + accessPoint\n      });\n    }\n\n    //set parsed valid access point\n    req._parsedArn.accessPoint = accessPoint;\n  },\n\n  /**\n   * Validate region field in ARN supplied in Bucket parameter is a valid region\n   */\n  validateArnRegion: function validateArnRegion(req, options) {\n    if (options === undefined) {\n      options = {};\n    }\n\n    var useArnRegion = s3util.loadUseArnRegionConfig(req);\n    var regionFromArn = req._parsedArn.region;\n    var clientRegion = req.service.config.region;\n    var useFipsEndpoint = req.service.config.useFipsEndpoint;\n    var allowFipsEndpoint = options.allowFipsEndpoint || false;\n\n    if (!regionFromArn) {\n      var message = 'ARN region is empty';\n      if (req._parsedArn.service === 's3') {\n        message = message + '\\nYou may want to use multi-regional ARN. The feature is not supported in current SDK. ' +\n        'You should consider switching to V3(https://github.com/aws/aws-sdk-js-v3).';\n      }\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidARN',\n        message: message\n      });\n    }\n\n    if (useFipsEndpoint && !allowFipsEndpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'ARN endpoint is not compatible with FIPS region'\n      });\n    }\n\n    if (regionFromArn.indexOf('fips') >= 0) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'FIPS region not allowed in ARN'\n      });\n    }\n\n    if (!useArnRegion && regionFromArn !== clientRegion) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region conflicts with access point region'\n      });\n    } else if (\n      useArnRegion &&\n      regionUtil.getEndpointSuffix(regionFromArn) !== regionUtil.getEndpointSuffix(clientRegion)\n    ) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Configured region and access point region not in same partition'\n      });\n    }\n\n    if (req.service.config.useAccelerateEndpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'useAccelerateEndpoint config is not supported with access point ARN'\n      });\n    }\n\n    if (req._parsedArn.service === 's3-outposts' && req.service.config.useDualstackEndpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Dualstack is not supported with outposts access point ARN'\n      });\n    }\n  },\n\n  loadUseArnRegionConfig: function loadUseArnRegionConfig(req) {\n    var envName = 'AWS_S3_USE_ARN_REGION';\n    var configName = 's3_use_arn_region';\n    var useArnRegion = true;\n    var originalConfig = req.service._originalConfig || {};\n    if (req.service.config.s3UseArnRegion !== undefined) {\n      return req.service.config.s3UseArnRegion;\n    } else if (originalConfig.s3UseArnRegion !== undefined) {\n      useArnRegion = originalConfig.s3UseArnRegion === true;\n    } else if (AWS.util.isNode()) {\n      //load from environmental variable AWS_USE_ARN_REGION\n      if (process.env[envName]) {\n        var value = process.env[envName].trim().toLowerCase();\n        if (['false', 'true'].indexOf(value) < 0) {\n          throw AWS.util.error(new Error(), {\n            code: 'InvalidConfiguration',\n            message: envName + ' only accepts true or false. Got ' + process.env[envName],\n            retryable: false\n          });\n        }\n        useArnRegion = value === 'true';\n      } else {  //load from shared config property use_arn_region\n        var profiles = {};\n        var profile = {};\n        try {\n          profiles = AWS.util.getProfilesFromSharedConfig(AWS.util.iniLoader);\n          profile = profiles[process.env.AWS_PROFILE || AWS.util.defaultProfile];\n        } catch (e) {}\n        if (profile[configName]) {\n          if (['false', 'true'].indexOf(profile[configName].trim().toLowerCase()) < 0) {\n            throw AWS.util.error(new Error(), {\n              code: 'InvalidConfiguration',\n              message: configName + ' only accepts true or false. Got ' + profile[configName],\n              retryable: false\n            });\n          }\n          useArnRegion = profile[configName].trim().toLowerCase() === 'true';\n        }\n      }\n    }\n    req.service.config.s3UseArnRegion = useArnRegion;\n    return useArnRegion;\n  },\n\n  /**\n   * Validations before URI can be populated\n   */\n  validatePopulateUriFromArn: function validatePopulateUriFromArn(req) {\n    if (req.service._originalConfig && req.service._originalConfig.endpoint) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Custom endpoint is not compatible with access point ARN'\n      });\n    }\n\n    if (req.service.config.s3ForcePathStyle) {\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidConfiguration',\n        message: 'Cannot construct path-style endpoint with access point'\n      });\n    }\n  },\n\n  /**\n   * Returns true if the bucket name is DNS compatible.  Buckets created\n   * outside of the classic region MUST be DNS compatible.\n   *\n   * @api private\n   */\n  dnsCompatibleBucketName: function dnsCompatibleBucketName(bucketName) {\n    var b = bucketName;\n    var domain = new RegExp(/^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/);\n    var ipAddress = new RegExp(/(\\d+\\.){3}\\d+/);\n    var dots = new RegExp(/\\.\\./);\n    return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;\n  },\n};\n\n/**\n * @api private\n */\nmodule.exports = s3util;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/services/s3util.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/services/sts.js":
/*!******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/services/sts.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar resolveRegionalEndpointsFlag = __webpack_require__(/*! ../config_regional_endpoint */ \"(rsc)/../../node_modules/aws-sdk/lib/config_regional_endpoint.js\");\nvar ENV_REGIONAL_ENDPOINT_ENABLED = 'AWS_STS_REGIONAL_ENDPOINTS';\nvar CONFIG_REGIONAL_ENDPOINT_ENABLED = 'sts_regional_endpoints';\n\nAWS.util.update(AWS.STS.prototype, {\n  /**\n   * @overload credentialsFrom(data, credentials = null)\n   *   Creates a credentials object from STS response data containing\n   *   credentials information. Useful for quickly setting AWS credentials.\n   *\n   *   @note This is a low-level utility function. If you want to load temporary\n   *     credentials into your process for subsequent requests to AWS resources,\n   *     you should use {AWS.TemporaryCredentials} instead.\n   *   @param data [map] data retrieved from a call to {getFederatedToken},\n   *     {getSessionToken}, {assumeRole}, or {assumeRoleWithWebIdentity}.\n   *   @param credentials [AWS.Credentials] an optional credentials object to\n   *     fill instead of creating a new object. Useful when modifying an\n   *     existing credentials object from a refresh call.\n   *   @return [AWS.TemporaryCredentials] the set of temporary credentials\n   *     loaded from a raw STS operation response.\n   *   @example Using credentialsFrom to load global AWS credentials\n   *     var sts = new AWS.STS();\n   *     sts.getSessionToken(function (err, data) {\n   *       if (err) console.log(\"Error getting credentials\");\n   *       else {\n   *         AWS.config.credentials = sts.credentialsFrom(data);\n   *       }\n   *     });\n   *   @see AWS.TemporaryCredentials\n   */\n  credentialsFrom: function credentialsFrom(data, credentials) {\n    if (!data) return null;\n    if (!credentials) credentials = new AWS.TemporaryCredentials();\n    credentials.expired = false;\n    credentials.accessKeyId = data.Credentials.AccessKeyId;\n    credentials.secretAccessKey = data.Credentials.SecretAccessKey;\n    credentials.sessionToken = data.Credentials.SessionToken;\n    credentials.expireTime = data.Credentials.Expiration;\n    return credentials;\n  },\n\n  assumeRoleWithWebIdentity: function assumeRoleWithWebIdentity(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);\n  },\n\n  assumeRoleWithSAML: function assumeRoleWithSAML(params, callback) {\n    return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);\n  },\n\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    request.addListener('validate', this.optInRegionalEndpoint, true);\n  },\n\n  /**\n   * @api private\n   */\n  optInRegionalEndpoint: function optInRegionalEndpoint(req) {\n    var service = req.service;\n    var config = service.config;\n    config.stsRegionalEndpoints = resolveRegionalEndpointsFlag(service._originalConfig, {\n      env: ENV_REGIONAL_ENDPOINT_ENABLED,\n      sharedConfig: CONFIG_REGIONAL_ENDPOINT_ENABLED,\n      clientConfig: 'stsRegionalEndpoints'\n    });\n    if (\n      config.stsRegionalEndpoints === 'regional' &&\n      service.isGlobalEndpoint\n    ) {\n      //client will throw if region is not supplied; request will be signed with specified region\n      if (!config.region) {\n        throw AWS.util.error(new Error(),\n          {code: 'ConfigError', message: 'Missing region in config'});\n      }\n      var insertPoint = config.endpoint.indexOf('.amazonaws.com');\n      var regionalEndpoint = config.endpoint.substring(0, insertPoint) +\n        '.' + config.region + config.endpoint.substring(insertPoint);\n      req.httpRequest.updateEndpoint(regionalEndpoint);\n      req.httpRequest.region = config.region;\n    }\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NlcnZpY2VzL3N0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0IsbUNBQW1DLG1CQUFPLENBQUMscUdBQTZCO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwwQkFBMEI7QUFDbkQsd0RBQXdELGtCQUFrQjtBQUMxRSxVQUFVLGdCQUFnQixHQUFHLFdBQVcsTUFBTSwwQkFBMEI7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQSxXQUFXLHlEQUF5RDtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc2VydmljZXMvc3RzLmpzPzY1NWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciByZXNvbHZlUmVnaW9uYWxFbmRwb2ludHNGbGFnID0gcmVxdWlyZSgnLi4vY29uZmlnX3JlZ2lvbmFsX2VuZHBvaW50Jyk7XG52YXIgRU5WX1JFR0lPTkFMX0VORFBPSU5UX0VOQUJMRUQgPSAnQVdTX1NUU19SRUdJT05BTF9FTkRQT0lOVFMnO1xudmFyIENPTkZJR19SRUdJT05BTF9FTkRQT0lOVF9FTkFCTEVEID0gJ3N0c19yZWdpb25hbF9lbmRwb2ludHMnO1xuXG5BV1MudXRpbC51cGRhdGUoQVdTLlNUUy5wcm90b3R5cGUsIHtcbiAgLyoqXG4gICAqIEBvdmVybG9hZCBjcmVkZW50aWFsc0Zyb20oZGF0YSwgY3JlZGVudGlhbHMgPSBudWxsKVxuICAgKiAgIENyZWF0ZXMgYSBjcmVkZW50aWFscyBvYmplY3QgZnJvbSBTVFMgcmVzcG9uc2UgZGF0YSBjb250YWluaW5nXG4gICAqICAgY3JlZGVudGlhbHMgaW5mb3JtYXRpb24uIFVzZWZ1bCBmb3IgcXVpY2tseSBzZXR0aW5nIEFXUyBjcmVkZW50aWFscy5cbiAgICpcbiAgICogICBAbm90ZSBUaGlzIGlzIGEgbG93LWxldmVsIHV0aWxpdHkgZnVuY3Rpb24uIElmIHlvdSB3YW50IHRvIGxvYWQgdGVtcG9yYXJ5XG4gICAqICAgICBjcmVkZW50aWFscyBpbnRvIHlvdXIgcHJvY2VzcyBmb3Igc3Vic2VxdWVudCByZXF1ZXN0cyB0byBBV1MgcmVzb3VyY2VzLFxuICAgKiAgICAgeW91IHNob3VsZCB1c2Uge0FXUy5UZW1wb3JhcnlDcmVkZW50aWFsc30gaW5zdGVhZC5cbiAgICogICBAcGFyYW0gZGF0YSBbbWFwXSBkYXRhIHJldHJpZXZlZCBmcm9tIGEgY2FsbCB0byB7Z2V0RmVkZXJhdGVkVG9rZW59LFxuICAgKiAgICAge2dldFNlc3Npb25Ub2tlbn0sIHthc3N1bWVSb2xlfSwgb3Ige2Fzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHl9LlxuICAgKiAgIEBwYXJhbSBjcmVkZW50aWFscyBbQVdTLkNyZWRlbnRpYWxzXSBhbiBvcHRpb25hbCBjcmVkZW50aWFscyBvYmplY3QgdG9cbiAgICogICAgIGZpbGwgaW5zdGVhZCBvZiBjcmVhdGluZyBhIG5ldyBvYmplY3QuIFVzZWZ1bCB3aGVuIG1vZGlmeWluZyBhblxuICAgKiAgICAgZXhpc3RpbmcgY3JlZGVudGlhbHMgb2JqZWN0IGZyb20gYSByZWZyZXNoIGNhbGwuXG4gICAqICAgQHJldHVybiBbQVdTLlRlbXBvcmFyeUNyZWRlbnRpYWxzXSB0aGUgc2V0IG9mIHRlbXBvcmFyeSBjcmVkZW50aWFsc1xuICAgKiAgICAgbG9hZGVkIGZyb20gYSByYXcgU1RTIG9wZXJhdGlvbiByZXNwb25zZS5cbiAgICogICBAZXhhbXBsZSBVc2luZyBjcmVkZW50aWFsc0Zyb20gdG8gbG9hZCBnbG9iYWwgQVdTIGNyZWRlbnRpYWxzXG4gICAqICAgICB2YXIgc3RzID0gbmV3IEFXUy5TVFMoKTtcbiAgICogICAgIHN0cy5nZXRTZXNzaW9uVG9rZW4oZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgKiAgICAgICBpZiAoZXJyKSBjb25zb2xlLmxvZyhcIkVycm9yIGdldHRpbmcgY3JlZGVudGlhbHNcIik7XG4gICAqICAgICAgIGVsc2Uge1xuICAgKiAgICAgICAgIEFXUy5jb25maWcuY3JlZGVudGlhbHMgPSBzdHMuY3JlZGVudGlhbHNGcm9tKGRhdGEpO1xuICAgKiAgICAgICB9XG4gICAqICAgICB9KTtcbiAgICogICBAc2VlIEFXUy5UZW1wb3JhcnlDcmVkZW50aWFsc1xuICAgKi9cbiAgY3JlZGVudGlhbHNGcm9tOiBmdW5jdGlvbiBjcmVkZW50aWFsc0Zyb20oZGF0YSwgY3JlZGVudGlhbHMpIHtcbiAgICBpZiAoIWRhdGEpIHJldHVybiBudWxsO1xuICAgIGlmICghY3JlZGVudGlhbHMpIGNyZWRlbnRpYWxzID0gbmV3IEFXUy5UZW1wb3JhcnlDcmVkZW50aWFscygpO1xuICAgIGNyZWRlbnRpYWxzLmV4cGlyZWQgPSBmYWxzZTtcbiAgICBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZCA9IGRhdGEuQ3JlZGVudGlhbHMuQWNjZXNzS2V5SWQ7XG4gICAgY3JlZGVudGlhbHMuc2VjcmV0QWNjZXNzS2V5ID0gZGF0YS5DcmVkZW50aWFscy5TZWNyZXRBY2Nlc3NLZXk7XG4gICAgY3JlZGVudGlhbHMuc2Vzc2lvblRva2VuID0gZGF0YS5DcmVkZW50aWFscy5TZXNzaW9uVG9rZW47XG4gICAgY3JlZGVudGlhbHMuZXhwaXJlVGltZSA9IGRhdGEuQ3JlZGVudGlhbHMuRXhwaXJhdGlvbjtcbiAgICByZXR1cm4gY3JlZGVudGlhbHM7XG4gIH0sXG5cbiAgYXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eTogZnVuY3Rpb24gYXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eShwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVVuYXV0aGVudGljYXRlZFJlcXVlc3QoJ2Fzc3VtZVJvbGVXaXRoV2ViSWRlbnRpdHknLCBwYXJhbXMsIGNhbGxiYWNrKTtcbiAgfSxcblxuICBhc3N1bWVSb2xlV2l0aFNBTUw6IGZ1bmN0aW9uIGFzc3VtZVJvbGVXaXRoU0FNTChwYXJhbXMsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHRoaXMubWFrZVVuYXV0aGVudGljYXRlZFJlcXVlc3QoJ2Fzc3VtZVJvbGVXaXRoU0FNTCcsIHBhcmFtcywgY2FsbGJhY2spO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICovXG4gIHNldHVwUmVxdWVzdExpc3RlbmVyczogZnVuY3Rpb24gc2V0dXBSZXF1ZXN0TGlzdGVuZXJzKHJlcXVlc3QpIHtcbiAgICByZXF1ZXN0LmFkZExpc3RlbmVyKCd2YWxpZGF0ZScsIHRoaXMub3B0SW5SZWdpb25hbEVuZHBvaW50LCB0cnVlKTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBvcHRJblJlZ2lvbmFsRW5kcG9pbnQ6IGZ1bmN0aW9uIG9wdEluUmVnaW9uYWxFbmRwb2ludChyZXEpIHtcbiAgICB2YXIgc2VydmljZSA9IHJlcS5zZXJ2aWNlO1xuICAgIHZhciBjb25maWcgPSBzZXJ2aWNlLmNvbmZpZztcbiAgICBjb25maWcuc3RzUmVnaW9uYWxFbmRwb2ludHMgPSByZXNvbHZlUmVnaW9uYWxFbmRwb2ludHNGbGFnKHNlcnZpY2UuX29yaWdpbmFsQ29uZmlnLCB7XG4gICAgICBlbnY6IEVOVl9SRUdJT05BTF9FTkRQT0lOVF9FTkFCTEVELFxuICAgICAgc2hhcmVkQ29uZmlnOiBDT05GSUdfUkVHSU9OQUxfRU5EUE9JTlRfRU5BQkxFRCxcbiAgICAgIGNsaWVudENvbmZpZzogJ3N0c1JlZ2lvbmFsRW5kcG9pbnRzJ1xuICAgIH0pO1xuICAgIGlmIChcbiAgICAgIGNvbmZpZy5zdHNSZWdpb25hbEVuZHBvaW50cyA9PT0gJ3JlZ2lvbmFsJyAmJlxuICAgICAgc2VydmljZS5pc0dsb2JhbEVuZHBvaW50XG4gICAgKSB7XG4gICAgICAvL2NsaWVudCB3aWxsIHRocm93IGlmIHJlZ2lvbiBpcyBub3Qgc3VwcGxpZWQ7IHJlcXVlc3Qgd2lsbCBiZSBzaWduZWQgd2l0aCBzcGVjaWZpZWQgcmVnaW9uXG4gICAgICBpZiAoIWNvbmZpZy5yZWdpb24pIHtcbiAgICAgICAgdGhyb3cgQVdTLnV0aWwuZXJyb3IobmV3IEVycm9yKCksXG4gICAgICAgICAge2NvZGU6ICdDb25maWdFcnJvcicsIG1lc3NhZ2U6ICdNaXNzaW5nIHJlZ2lvbiBpbiBjb25maWcnfSk7XG4gICAgICB9XG4gICAgICB2YXIgaW5zZXJ0UG9pbnQgPSBjb25maWcuZW5kcG9pbnQuaW5kZXhPZignLmFtYXpvbmF3cy5jb20nKTtcbiAgICAgIHZhciByZWdpb25hbEVuZHBvaW50ID0gY29uZmlnLmVuZHBvaW50LnN1YnN0cmluZygwLCBpbnNlcnRQb2ludCkgK1xuICAgICAgICAnLicgKyBjb25maWcucmVnaW9uICsgY29uZmlnLmVuZHBvaW50LnN1YnN0cmluZyhpbnNlcnRQb2ludCk7XG4gICAgICByZXEuaHR0cFJlcXVlc3QudXBkYXRlRW5kcG9pbnQocmVnaW9uYWxFbmRwb2ludCk7XG4gICAgICByZXEuaHR0cFJlcXVlc3QucmVnaW9uID0gY29uZmlnLnJlZ2lvbjtcbiAgICB9XG4gIH1cblxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/services/sts.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/shared-ini/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/shared-ini/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var IniLoader = (__webpack_require__(/*! ./ini-loader */ \"(rsc)/../../node_modules/aws-sdk/lib/shared-ini/ini-loader.js\").IniLoader);\n/**\n * Singleton object to load specified config/credentials files.\n * It will cache all the files ever loaded;\n */\nmodule.exports.iniLoader = new IniLoader();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NoYXJlZC1pbmkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCLG9IQUFpQztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9zaGFyZWQtaW5pL2luZGV4LmpzP2U5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEluaUxvYWRlciA9IHJlcXVpcmUoJy4vaW5pLWxvYWRlcicpLkluaUxvYWRlcjtcbi8qKlxuICogU2luZ2xldG9uIG9iamVjdCB0byBsb2FkIHNwZWNpZmllZCBjb25maWcvY3JlZGVudGlhbHMgZmlsZXMuXG4gKiBJdCB3aWxsIGNhY2hlIGFsbCB0aGUgZmlsZXMgZXZlciBsb2FkZWQ7XG4gKi9cbm1vZHVsZS5leHBvcnRzLmluaUxvYWRlciA9IG5ldyBJbmlMb2FkZXIoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/shared-ini/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/shared-ini/ini-loader.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/shared-ini/ini-loader.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar os = __webpack_require__(/*! os */ \"os\");\nvar path = __webpack_require__(/*! path */ \"path\");\n\nfunction parseFile(filename) {\n  return AWS.util.ini.parse(AWS.util.readFileSync(filename));\n}\n\nfunction getProfiles(fileContent) {\n  var tmpContent = {};\n  Object.keys(fileContent).forEach(function(sectionName) {\n    if (/^sso-session\\s/.test(sectionName)) return;\n    Object.defineProperty(tmpContent, sectionName.replace(/^profile\\s/, ''), {\n      value: fileContent[sectionName],\n      enumerable: true\n    });\n  });\n  return tmpContent;\n}\n\nfunction getSsoSessions(fileContent) {\n  var tmpContent = {};\n  Object.keys(fileContent).forEach(function(sectionName) {\n    if (!/^sso-session\\s/.test(sectionName)) return;\n    Object.defineProperty(tmpContent, sectionName.replace(/^sso-session\\s/, ''), {\n      value: fileContent[sectionName],\n      enumerable: true\n    });\n  });\n  return tmpContent;\n}\n\n/**\n * Ini file loader class the same as that used in the SDK. It loads and\n * parses config and credentials files in .ini format and cache the content\n * to assure files are only read once.\n * Note that calling operations on the instance instantiated from this class\n * won't affect the behavior of SDK since SDK uses an internal singleton of\n * this class.\n * @!macro nobrowser\n */\nAWS.IniLoader = AWS.util.inherit({\n  constructor: function IniLoader() {\n    this.resolvedProfiles = {};\n    this.resolvedSsoSessions = {};\n  },\n\n  /** Remove all cached files. Used after config files are updated. */\n  clearCachedFiles: function clearCachedFiles() {\n    this.resolvedProfiles = {};\n    this.resolvedSsoSessions = {};\n  },\n\n  /**\n   * Load configurations from config/credentials files and cache them\n   * for later use. If no file is specified it will try to load default files.\n   *\n   * @param options [map] information describing the file\n   * @option options filename [String] ('~/.aws/credentials' or defined by\n   *   AWS_SHARED_CREDENTIALS_FILE process env var or '~/.aws/config' if\n   *   isConfig is set to true)\n   *   path to the file to be read.\n   * @option options isConfig [Boolean] (false) True to read config file.\n   * @return [map<String,String>] object containing contents from file in key-value\n   *   pairs.\n   */\n  loadFrom: function loadFrom(options) {\n    options = options || {};\n    var isConfig = options.isConfig === true;\n    var filename = options.filename || this.getDefaultFilePath(isConfig);\n    if (!this.resolvedProfiles[filename]) {\n      var fileContent = parseFile(filename);\n      if (isConfig) {\n        Object.defineProperty(this.resolvedProfiles, filename, {\n          value: getProfiles(fileContent)\n        });\n      } else {\n        Object.defineProperty(this.resolvedProfiles, filename, { value: fileContent });\n      }\n    }\n    return this.resolvedProfiles[filename];\n  },\n\n  /**\n   * Load sso sessions from config/credentials files and cache them\n   * for later use. If no file is specified it will try to load default file.\n   *\n   * @param options [map] information describing the file\n   * @option options filename [String] ('~/.aws/config' or defined by\n   *   AWS_CONFIG_FILE process env var)\n   * @return [map<String,String>] object containing contents from file in key-value\n   *   pairs.\n   */\n  loadSsoSessionsFrom: function loadSsoSessionsFrom(options) {\n    options = options || {};\n    var filename = options.filename || this.getDefaultFilePath(true);\n    if (!this.resolvedSsoSessions[filename]) {\n      var fileContent = parseFile(filename);\n      Object.defineProperty(this.resolvedSsoSessions, filename, {\n        value: getSsoSessions(fileContent)\n      });\n    }\n    return this.resolvedSsoSessions[filename];\n  },\n\n  /**\n   * @api private\n   */\n  getDefaultFilePath: function getDefaultFilePath(isConfig) {\n    return path.join(\n      this.getHomeDir(),\n      '.aws',\n      isConfig ? 'config' : 'credentials'\n    );\n  },\n\n  /**\n   * @api private\n   */\n  getHomeDir: function getHomeDir() {\n    var env = process.env;\n    var home = env.HOME ||\n      env.USERPROFILE ||\n      (env.HOMEPATH ? ((env.HOMEDRIVE || 'C:/') + env.HOMEPATH) : null);\n\n    if (home) {\n      return home;\n    }\n\n    if (typeof os.homedir === 'function') {\n      return os.homedir();\n    }\n\n    throw AWS.util.error(\n      new Error('Cannot load credentials, HOME path not set')\n    );\n  }\n});\n\nvar IniLoader = AWS.IniLoader;\n\nmodule.exports = {\n  IniLoader: IniLoader\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NoYXJlZC1pbmkvaW5pLWxvYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0IsU0FBUyxtQkFBTyxDQUFDLGNBQUk7QUFDckIsV0FBVyxtQkFBTyxDQUFDLGtCQUFNOztBQUV6QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRO0FBQ1IsaUVBQWlFLG9CQUFvQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9zaGFyZWQtaW5pL2luaS1sb2FkZXIuanM/MGI5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQVdTID0gcmVxdWlyZSgnLi4vY29yZScpO1xudmFyIG9zID0gcmVxdWlyZSgnb3MnKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5mdW5jdGlvbiBwYXJzZUZpbGUoZmlsZW5hbWUpIHtcbiAgcmV0dXJuIEFXUy51dGlsLmluaS5wYXJzZShBV1MudXRpbC5yZWFkRmlsZVN5bmMoZmlsZW5hbWUpKTtcbn1cblxuZnVuY3Rpb24gZ2V0UHJvZmlsZXMoZmlsZUNvbnRlbnQpIHtcbiAgdmFyIHRtcENvbnRlbnQgPSB7fTtcbiAgT2JqZWN0LmtleXMoZmlsZUNvbnRlbnQpLmZvckVhY2goZnVuY3Rpb24oc2VjdGlvbk5hbWUpIHtcbiAgICBpZiAoL15zc28tc2Vzc2lvblxccy8udGVzdChzZWN0aW9uTmFtZSkpIHJldHVybjtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodG1wQ29udGVudCwgc2VjdGlvbk5hbWUucmVwbGFjZSgvXnByb2ZpbGVcXHMvLCAnJyksIHtcbiAgICAgIHZhbHVlOiBmaWxlQ29udGVudFtzZWN0aW9uTmFtZV0sXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gdG1wQ29udGVudDtcbn1cblxuZnVuY3Rpb24gZ2V0U3NvU2Vzc2lvbnMoZmlsZUNvbnRlbnQpIHtcbiAgdmFyIHRtcENvbnRlbnQgPSB7fTtcbiAgT2JqZWN0LmtleXMoZmlsZUNvbnRlbnQpLmZvckVhY2goZnVuY3Rpb24oc2VjdGlvbk5hbWUpIHtcbiAgICBpZiAoIS9ec3NvLXNlc3Npb25cXHMvLnRlc3Qoc2VjdGlvbk5hbWUpKSByZXR1cm47XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRtcENvbnRlbnQsIHNlY3Rpb25OYW1lLnJlcGxhY2UoL15zc28tc2Vzc2lvblxccy8sICcnKSwge1xuICAgICAgdmFsdWU6IGZpbGVDb250ZW50W3NlY3Rpb25OYW1lXSxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9KTtcbiAgfSk7XG4gIHJldHVybiB0bXBDb250ZW50O1xufVxuXG4vKipcbiAqIEluaSBmaWxlIGxvYWRlciBjbGFzcyB0aGUgc2FtZSBhcyB0aGF0IHVzZWQgaW4gdGhlIFNESy4gSXQgbG9hZHMgYW5kXG4gKiBwYXJzZXMgY29uZmlnIGFuZCBjcmVkZW50aWFscyBmaWxlcyBpbiAuaW5pIGZvcm1hdCBhbmQgY2FjaGUgdGhlIGNvbnRlbnRcbiAqIHRvIGFzc3VyZSBmaWxlcyBhcmUgb25seSByZWFkIG9uY2UuXG4gKiBOb3RlIHRoYXQgY2FsbGluZyBvcGVyYXRpb25zIG9uIHRoZSBpbnN0YW5jZSBpbnN0YW50aWF0ZWQgZnJvbSB0aGlzIGNsYXNzXG4gKiB3b24ndCBhZmZlY3QgdGhlIGJlaGF2aW9yIG9mIFNESyBzaW5jZSBTREsgdXNlcyBhbiBpbnRlcm5hbCBzaW5nbGV0b24gb2ZcbiAqIHRoaXMgY2xhc3MuXG4gKiBAIW1hY3JvIG5vYnJvd3NlclxuICovXG5BV1MuSW5pTG9hZGVyID0gQVdTLnV0aWwuaW5oZXJpdCh7XG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBJbmlMb2FkZXIoKSB7XG4gICAgdGhpcy5yZXNvbHZlZFByb2ZpbGVzID0ge307XG4gICAgdGhpcy5yZXNvbHZlZFNzb1Nlc3Npb25zID0ge307XG4gIH0sXG5cbiAgLyoqIFJlbW92ZSBhbGwgY2FjaGVkIGZpbGVzLiBVc2VkIGFmdGVyIGNvbmZpZyBmaWxlcyBhcmUgdXBkYXRlZC4gKi9cbiAgY2xlYXJDYWNoZWRGaWxlczogZnVuY3Rpb24gY2xlYXJDYWNoZWRGaWxlcygpIHtcbiAgICB0aGlzLnJlc29sdmVkUHJvZmlsZXMgPSB7fTtcbiAgICB0aGlzLnJlc29sdmVkU3NvU2Vzc2lvbnMgPSB7fTtcbiAgfSxcblxuICAvKipcbiAgICogTG9hZCBjb25maWd1cmF0aW9ucyBmcm9tIGNvbmZpZy9jcmVkZW50aWFscyBmaWxlcyBhbmQgY2FjaGUgdGhlbVxuICAgKiBmb3IgbGF0ZXIgdXNlLiBJZiBubyBmaWxlIGlzIHNwZWNpZmllZCBpdCB3aWxsIHRyeSB0byBsb2FkIGRlZmF1bHQgZmlsZXMuXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIFttYXBdIGluZm9ybWF0aW9uIGRlc2NyaWJpbmcgdGhlIGZpbGVcbiAgICogQG9wdGlvbiBvcHRpb25zIGZpbGVuYW1lIFtTdHJpbmddICgnfi8uYXdzL2NyZWRlbnRpYWxzJyBvciBkZWZpbmVkIGJ5XG4gICAqICAgQVdTX1NIQVJFRF9DUkVERU5USUFMU19GSUxFIHByb2Nlc3MgZW52IHZhciBvciAnfi8uYXdzL2NvbmZpZycgaWZcbiAgICogICBpc0NvbmZpZyBpcyBzZXQgdG8gdHJ1ZSlcbiAgICogICBwYXRoIHRvIHRoZSBmaWxlIHRvIGJlIHJlYWQuXG4gICAqIEBvcHRpb24gb3B0aW9ucyBpc0NvbmZpZyBbQm9vbGVhbl0gKGZhbHNlKSBUcnVlIHRvIHJlYWQgY29uZmlnIGZpbGUuXG4gICAqIEByZXR1cm4gW21hcDxTdHJpbmcsU3RyaW5nPl0gb2JqZWN0IGNvbnRhaW5pbmcgY29udGVudHMgZnJvbSBmaWxlIGluIGtleS12YWx1ZVxuICAgKiAgIHBhaXJzLlxuICAgKi9cbiAgbG9hZEZyb206IGZ1bmN0aW9uIGxvYWRGcm9tKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgaXNDb25maWcgPSBvcHRpb25zLmlzQ29uZmlnID09PSB0cnVlO1xuICAgIHZhciBmaWxlbmFtZSA9IG9wdGlvbnMuZmlsZW5hbWUgfHwgdGhpcy5nZXREZWZhdWx0RmlsZVBhdGgoaXNDb25maWcpO1xuICAgIGlmICghdGhpcy5yZXNvbHZlZFByb2ZpbGVzW2ZpbGVuYW1lXSkge1xuICAgICAgdmFyIGZpbGVDb250ZW50ID0gcGFyc2VGaWxlKGZpbGVuYW1lKTtcbiAgICAgIGlmIChpc0NvbmZpZykge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcy5yZXNvbHZlZFByb2ZpbGVzLCBmaWxlbmFtZSwge1xuICAgICAgICAgIHZhbHVlOiBnZXRQcm9maWxlcyhmaWxlQ29udGVudClcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcy5yZXNvbHZlZFByb2ZpbGVzLCBmaWxlbmFtZSwgeyB2YWx1ZTogZmlsZUNvbnRlbnQgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJlc29sdmVkUHJvZmlsZXNbZmlsZW5hbWVdO1xuICB9LFxuXG4gIC8qKlxuICAgKiBMb2FkIHNzbyBzZXNzaW9ucyBmcm9tIGNvbmZpZy9jcmVkZW50aWFscyBmaWxlcyBhbmQgY2FjaGUgdGhlbVxuICAgKiBmb3IgbGF0ZXIgdXNlLiBJZiBubyBmaWxlIGlzIHNwZWNpZmllZCBpdCB3aWxsIHRyeSB0byBsb2FkIGRlZmF1bHQgZmlsZS5cbiAgICpcbiAgICogQHBhcmFtIG9wdGlvbnMgW21hcF0gaW5mb3JtYXRpb24gZGVzY3JpYmluZyB0aGUgZmlsZVxuICAgKiBAb3B0aW9uIG9wdGlvbnMgZmlsZW5hbWUgW1N0cmluZ10gKCd+Ly5hd3MvY29uZmlnJyBvciBkZWZpbmVkIGJ5XG4gICAqICAgQVdTX0NPTkZJR19GSUxFIHByb2Nlc3MgZW52IHZhcilcbiAgICogQHJldHVybiBbbWFwPFN0cmluZyxTdHJpbmc+XSBvYmplY3QgY29udGFpbmluZyBjb250ZW50cyBmcm9tIGZpbGUgaW4ga2V5LXZhbHVlXG4gICAqICAgcGFpcnMuXG4gICAqL1xuICBsb2FkU3NvU2Vzc2lvbnNGcm9tOiBmdW5jdGlvbiBsb2FkU3NvU2Vzc2lvbnNGcm9tKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgZmlsZW5hbWUgPSBvcHRpb25zLmZpbGVuYW1lIHx8IHRoaXMuZ2V0RGVmYXVsdEZpbGVQYXRoKHRydWUpO1xuICAgIGlmICghdGhpcy5yZXNvbHZlZFNzb1Nlc3Npb25zW2ZpbGVuYW1lXSkge1xuICAgICAgdmFyIGZpbGVDb250ZW50ID0gcGFyc2VGaWxlKGZpbGVuYW1lKTtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnJlc29sdmVkU3NvU2Vzc2lvbnMsIGZpbGVuYW1lLCB7XG4gICAgICAgIHZhbHVlOiBnZXRTc29TZXNzaW9ucyhmaWxlQ29udGVudClcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5yZXNvbHZlZFNzb1Nlc3Npb25zW2ZpbGVuYW1lXTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBnZXREZWZhdWx0RmlsZVBhdGg6IGZ1bmN0aW9uIGdldERlZmF1bHRGaWxlUGF0aChpc0NvbmZpZykge1xuICAgIHJldHVybiBwYXRoLmpvaW4oXG4gICAgICB0aGlzLmdldEhvbWVEaXIoKSxcbiAgICAgICcuYXdzJyxcbiAgICAgIGlzQ29uZmlnID8gJ2NvbmZpZycgOiAnY3JlZGVudGlhbHMnXG4gICAgKTtcbiAgfSxcblxuICAvKipcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBnZXRIb21lRGlyOiBmdW5jdGlvbiBnZXRIb21lRGlyKCkge1xuICAgIHZhciBlbnYgPSBwcm9jZXNzLmVudjtcbiAgICB2YXIgaG9tZSA9IGVudi5IT01FIHx8XG4gICAgICBlbnYuVVNFUlBST0ZJTEUgfHxcbiAgICAgIChlbnYuSE9NRVBBVEggPyAoKGVudi5IT01FRFJJVkUgfHwgJ0M6LycpICsgZW52LkhPTUVQQVRIKSA6IG51bGwpO1xuXG4gICAgaWYgKGhvbWUpIHtcbiAgICAgIHJldHVybiBob21lO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3MuaG9tZWRpciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIG9zLmhvbWVkaXIoKTtcbiAgICB9XG5cbiAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgIG5ldyBFcnJvcignQ2Fubm90IGxvYWQgY3JlZGVudGlhbHMsIEhPTUUgcGF0aCBub3Qgc2V0JylcbiAgICApO1xuICB9XG59KTtcblxudmFyIEluaUxvYWRlciA9IEFXUy5JbmlMb2FkZXI7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBJbmlMb2FkZXI6IEluaUxvYWRlclxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/shared-ini/ini-loader.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/bearer.js":
/*!********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/bearer.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * @api private\n */\nAWS.Signers.Bearer = AWS.util.inherit(AWS.Signers.RequestSigner, {\n  constructor: function Bearer(request) {\n    AWS.Signers.RequestSigner.call(this, request);\n  },\n\n  addAuthorization: function addAuthorization(token) {\n    this.request.headers['Authorization'] = 'Bearer ' + token.token;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvYmVhcmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyw2REFBUzs7QUFFM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvYmVhcmVyLmpzP2FjNzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuQVdTLlNpZ25lcnMuQmVhcmVyID0gQVdTLnV0aWwuaW5oZXJpdChBV1MuU2lnbmVycy5SZXF1ZXN0U2lnbmVyLCB7XG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBCZWFyZXIocmVxdWVzdCkge1xuICAgIEFXUy5TaWduZXJzLlJlcXVlc3RTaWduZXIuY2FsbCh0aGlzLCByZXF1ZXN0KTtcbiAgfSxcblxuICBhZGRBdXRob3JpemF0aW9uOiBmdW5jdGlvbiBhZGRBdXRob3JpemF0aW9uKHRva2VuKSB7XG4gICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9ICdCZWFyZXIgJyArIHRva2VuLnRva2VuO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/bearer.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/presign.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/presign.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nfunction signedUrlBuilder(request) {\n  var expires = request.httpRequest.headers[expiresHeader];\n  var signerClass = request.service.getSignerClass(request);\n\n  delete request.httpRequest.headers['User-Agent'];\n  delete request.httpRequest.headers['X-Amz-User-Agent'];\n\n  if (signerClass === AWS.Signers.V4) {\n    if (expires > 604800) { // one week expiry is invalid\n      var message = 'Presigning does not support expiry time greater ' +\n                    'than a week with SigV4 signing.';\n      throw AWS.util.error(new Error(), {\n        code: 'InvalidExpiryTime', message: message, retryable: false\n      });\n    }\n    request.httpRequest.headers[expiresHeader] = expires;\n  } else if (signerClass === AWS.Signers.S3) {\n    var now = request.service ? request.service.getSkewCorrectedDate() : AWS.util.date.getDate();\n    request.httpRequest.headers[expiresHeader] = parseInt(\n      AWS.util.date.unixTimestamp(now) + expires, 10).toString();\n  } else {\n    throw AWS.util.error(new Error(), {\n      message: 'Presigning only supports S3 or SigV4 signing.',\n      code: 'UnsupportedSigner', retryable: false\n    });\n  }\n}\n\n/**\n * @api private\n */\nfunction signedUrlSigner(request) {\n  var endpoint = request.httpRequest.endpoint;\n  var parsedUrl = AWS.util.urlParse(request.httpRequest.path);\n  var queryParams = {};\n\n  if (parsedUrl.search) {\n    queryParams = AWS.util.queryStringParse(parsedUrl.search.substr(1));\n  }\n\n  var auth = request.httpRequest.headers['Authorization'].split(' ');\n  if (auth[0] === 'AWS') {\n    auth = auth[1].split(':');\n    queryParams['Signature'] = auth.pop();\n    queryParams['AWSAccessKeyId'] = auth.join(':');\n\n    AWS.util.each(request.httpRequest.headers, function (key, value) {\n      if (key === expiresHeader) key = 'Expires';\n      if (key.indexOf('x-amz-meta-') === 0) {\n        // Delete existing, potentially not normalized key\n        delete queryParams[key];\n        key = key.toLowerCase();\n      }\n      queryParams[key] = value;\n    });\n    delete request.httpRequest.headers[expiresHeader];\n    delete queryParams['Authorization'];\n    delete queryParams['Host'];\n  } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing\n    auth.shift();\n    var rest = auth.join(' ');\n    var signature = rest.match(/Signature=(.*?)(?:,|\\s|\\r?\\n|$)/)[1];\n    queryParams['X-Amz-Signature'] = signature;\n    delete queryParams['Expires'];\n  }\n\n  // build URL\n  endpoint.pathname = parsedUrl.pathname;\n  endpoint.search = AWS.util.queryParamsToString(queryParams);\n}\n\n/**\n * @api private\n */\nAWS.Signers.Presign = inherit({\n  /**\n   * @api private\n   */\n  sign: function sign(request, expireTime, callback) {\n    request.httpRequest.headers[expiresHeader] = expireTime || 3600;\n    request.on('build', signedUrlBuilder);\n    request.on('sign', signedUrlSigner);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.SET_CONTENT_LENGTH);\n    request.removeListener('afterBuild',\n      AWS.EventListeners.Core.COMPUTE_SHA256);\n\n    request.emit('beforePresign', [request]);\n\n    if (callback) {\n      request.build(function() {\n        if (this.response.error) callback(this.response.error);\n        else {\n          callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));\n        }\n      });\n    } else {\n      request.build();\n      if (request.response.error) throw request.response.error;\n      return AWS.util.urlFormat(request.httpRequest.endpoint);\n    }\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.Presign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvcHJlc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJLDJDQUEyQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc2lnbmVycy9wcmVzaWduLmpzPzlkYzQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciBpbmhlcml0ID0gQVdTLnV0aWwuaW5oZXJpdDtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xudmFyIGV4cGlyZXNIZWFkZXIgPSAncHJlc2lnbmVkLWV4cGlyZXMnO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzaWduZWRVcmxCdWlsZGVyKHJlcXVlc3QpIHtcbiAgdmFyIGV4cGlyZXMgPSByZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnNbZXhwaXJlc0hlYWRlcl07XG4gIHZhciBzaWduZXJDbGFzcyA9IHJlcXVlc3Quc2VydmljZS5nZXRTaWduZXJDbGFzcyhyZXF1ZXN0KTtcblxuICBkZWxldGUgcmVxdWVzdC5odHRwUmVxdWVzdC5oZWFkZXJzWydVc2VyLUFnZW50J107XG4gIGRlbGV0ZSByZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnNbJ1gtQW16LVVzZXItQWdlbnQnXTtcblxuICBpZiAoc2lnbmVyQ2xhc3MgPT09IEFXUy5TaWduZXJzLlY0KSB7XG4gICAgaWYgKGV4cGlyZXMgPiA2MDQ4MDApIHsgLy8gb25lIHdlZWsgZXhwaXJ5IGlzIGludmFsaWRcbiAgICAgIHZhciBtZXNzYWdlID0gJ1ByZXNpZ25pbmcgZG9lcyBub3Qgc3VwcG9ydCBleHBpcnkgdGltZSBncmVhdGVyICcgK1xuICAgICAgICAgICAgICAgICAgICAndGhhbiBhIHdlZWsgd2l0aCBTaWdWNCBzaWduaW5nLic7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihuZXcgRXJyb3IoKSwge1xuICAgICAgICBjb2RlOiAnSW52YWxpZEV4cGlyeVRpbWUnLCBtZXNzYWdlOiBtZXNzYWdlLCByZXRyeWFibGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmVxdWVzdC5odHRwUmVxdWVzdC5oZWFkZXJzW2V4cGlyZXNIZWFkZXJdID0gZXhwaXJlcztcbiAgfSBlbHNlIGlmIChzaWduZXJDbGFzcyA9PT0gQVdTLlNpZ25lcnMuUzMpIHtcbiAgICB2YXIgbm93ID0gcmVxdWVzdC5zZXJ2aWNlID8gcmVxdWVzdC5zZXJ2aWNlLmdldFNrZXdDb3JyZWN0ZWREYXRlKCkgOiBBV1MudXRpbC5kYXRlLmdldERhdGUoKTtcbiAgICByZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnNbZXhwaXJlc0hlYWRlcl0gPSBwYXJzZUludChcbiAgICAgIEFXUy51dGlsLmRhdGUudW5peFRpbWVzdGFtcChub3cpICsgZXhwaXJlcywgMTApLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgQVdTLnV0aWwuZXJyb3IobmV3IEVycm9yKCksIHtcbiAgICAgIG1lc3NhZ2U6ICdQcmVzaWduaW5nIG9ubHkgc3VwcG9ydHMgUzMgb3IgU2lnVjQgc2lnbmluZy4nLFxuICAgICAgY29kZTogJ1Vuc3VwcG9ydGVkU2lnbmVyJywgcmV0cnlhYmxlOiBmYWxzZVxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNpZ25lZFVybFNpZ25lcihyZXF1ZXN0KSB7XG4gIHZhciBlbmRwb2ludCA9IHJlcXVlc3QuaHR0cFJlcXVlc3QuZW5kcG9pbnQ7XG4gIHZhciBwYXJzZWRVcmwgPSBBV1MudXRpbC51cmxQYXJzZShyZXF1ZXN0Lmh0dHBSZXF1ZXN0LnBhdGgpO1xuICB2YXIgcXVlcnlQYXJhbXMgPSB7fTtcblxuICBpZiAocGFyc2VkVXJsLnNlYXJjaCkge1xuICAgIHF1ZXJ5UGFyYW1zID0gQVdTLnV0aWwucXVlcnlTdHJpbmdQYXJzZShwYXJzZWRVcmwuc2VhcmNoLnN1YnN0cigxKSk7XG4gIH1cblxuICB2YXIgYXV0aCA9IHJlcXVlc3QuaHR0cFJlcXVlc3QuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddLnNwbGl0KCcgJyk7XG4gIGlmIChhdXRoWzBdID09PSAnQVdTJykge1xuICAgIGF1dGggPSBhdXRoWzFdLnNwbGl0KCc6Jyk7XG4gICAgcXVlcnlQYXJhbXNbJ1NpZ25hdHVyZSddID0gYXV0aC5wb3AoKTtcbiAgICBxdWVyeVBhcmFtc1snQVdTQWNjZXNzS2V5SWQnXSA9IGF1dGguam9pbignOicpO1xuXG4gICAgQVdTLnV0aWwuZWFjaChyZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnMsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAoa2V5ID09PSBleHBpcmVzSGVhZGVyKSBrZXkgPSAnRXhwaXJlcyc7XG4gICAgICBpZiAoa2V5LmluZGV4T2YoJ3gtYW16LW1ldGEtJykgPT09IDApIHtcbiAgICAgICAgLy8gRGVsZXRlIGV4aXN0aW5nLCBwb3RlbnRpYWxseSBub3Qgbm9ybWFsaXplZCBrZXlcbiAgICAgICAgZGVsZXRlIHF1ZXJ5UGFyYW1zW2tleV07XG4gICAgICAgIGtleSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgfVxuICAgICAgcXVlcnlQYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgIH0pO1xuICAgIGRlbGV0ZSByZXF1ZXN0Lmh0dHBSZXF1ZXN0LmhlYWRlcnNbZXhwaXJlc0hlYWRlcl07XG4gICAgZGVsZXRlIHF1ZXJ5UGFyYW1zWydBdXRob3JpemF0aW9uJ107XG4gICAgZGVsZXRlIHF1ZXJ5UGFyYW1zWydIb3N0J107XG4gIH0gZWxzZSBpZiAoYXV0aFswXSA9PT0gJ0FXUzQtSE1BQy1TSEEyNTYnKSB7IC8vIFNpZ1Y0IHNpZ25pbmdcbiAgICBhdXRoLnNoaWZ0KCk7XG4gICAgdmFyIHJlc3QgPSBhdXRoLmpvaW4oJyAnKTtcbiAgICB2YXIgc2lnbmF0dXJlID0gcmVzdC5tYXRjaCgvU2lnbmF0dXJlPSguKj8pKD86LHxcXHN8XFxyP1xcbnwkKS8pWzFdO1xuICAgIHF1ZXJ5UGFyYW1zWydYLUFtei1TaWduYXR1cmUnXSA9IHNpZ25hdHVyZTtcbiAgICBkZWxldGUgcXVlcnlQYXJhbXNbJ0V4cGlyZXMnXTtcbiAgfVxuXG4gIC8vIGJ1aWxkIFVSTFxuICBlbmRwb2ludC5wYXRobmFtZSA9IHBhcnNlZFVybC5wYXRobmFtZTtcbiAgZW5kcG9pbnQuc2VhcmNoID0gQVdTLnV0aWwucXVlcnlQYXJhbXNUb1N0cmluZyhxdWVyeVBhcmFtcyk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbkFXUy5TaWduZXJzLlByZXNpZ24gPSBpbmhlcml0KHtcbiAgLyoqXG4gICAqIEBhcGkgcHJpdmF0ZVxuICAgKi9cbiAgc2lnbjogZnVuY3Rpb24gc2lnbihyZXF1ZXN0LCBleHBpcmVUaW1lLCBjYWxsYmFjaykge1xuICAgIHJlcXVlc3QuaHR0cFJlcXVlc3QuaGVhZGVyc1tleHBpcmVzSGVhZGVyXSA9IGV4cGlyZVRpbWUgfHwgMzYwMDtcbiAgICByZXF1ZXN0Lm9uKCdidWlsZCcsIHNpZ25lZFVybEJ1aWxkZXIpO1xuICAgIHJlcXVlc3Qub24oJ3NpZ24nLCBzaWduZWRVcmxTaWduZXIpO1xuICAgIHJlcXVlc3QucmVtb3ZlTGlzdGVuZXIoJ2FmdGVyQnVpbGQnLFxuICAgICAgQVdTLkV2ZW50TGlzdGVuZXJzLkNvcmUuU0VUX0NPTlRFTlRfTEVOR1RIKTtcbiAgICByZXF1ZXN0LnJlbW92ZUxpc3RlbmVyKCdhZnRlckJ1aWxkJyxcbiAgICAgIEFXUy5FdmVudExpc3RlbmVycy5Db3JlLkNPTVBVVEVfU0hBMjU2KTtcblxuICAgIHJlcXVlc3QuZW1pdCgnYmVmb3JlUHJlc2lnbicsIFtyZXF1ZXN0XSk7XG5cbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIHJlcXVlc3QuYnVpbGQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnJlc3BvbnNlLmVycm9yKSBjYWxsYmFjayh0aGlzLnJlc3BvbnNlLmVycm9yKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY2FsbGJhY2sobnVsbCwgQVdTLnV0aWwudXJsRm9ybWF0KHJlcXVlc3QuaHR0cFJlcXVlc3QuZW5kcG9pbnQpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlcXVlc3QuYnVpbGQoKTtcbiAgICAgIGlmIChyZXF1ZXN0LnJlc3BvbnNlLmVycm9yKSB0aHJvdyByZXF1ZXN0LnJlc3BvbnNlLmVycm9yO1xuICAgICAgcmV0dXJuIEFXUy51dGlsLnVybEZvcm1hdChyZXF1ZXN0Lmh0dHBSZXF1ZXN0LmVuZHBvaW50KTtcbiAgICB9XG4gIH1cbn0pO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFXUy5TaWduZXJzLlByZXNpZ247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/presign.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/request_signer.js":
/*!****************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/request_signer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  },\n\n  setServiceClientId: function setServiceClientId(id) {\n    this.serviceClientId = id;\n  },\n\n  getServiceClientId: function getServiceClientId() {\n    return this.serviceClientId;\n  }\n});\n\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2': return AWS.Signers.V2;\n    case 'v3': return AWS.Signers.V3;\n    case 's3v4': return AWS.Signers.V4;\n    case 'v4': return AWS.Signers.V4;\n    case 's3': return AWS.Signers.S3;\n    case 'v3https': return AWS.Signers.V3Https;\n    case 'bearer': return AWS.Signers.Bearer;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\n\n__webpack_require__(/*! ./v2 */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v2.js\");\n__webpack_require__(/*! ./v3 */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v3.js\");\n__webpack_require__(/*! ./v3https */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v3https.js\");\n__webpack_require__(/*! ./v4 */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v4.js\");\n__webpack_require__(/*! ./s3 */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/s3.js\");\n__webpack_require__(/*! ./presign */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/presign.js\");\n__webpack_require__(/*! ./bearer */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/bearer.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvcmVxdWVzdF9zaWduZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTOztBQUUzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFPLENBQUMsZ0VBQU07QUFDZCxtQkFBTyxDQUFDLGdFQUFNO0FBQ2QsbUJBQU8sQ0FBQywwRUFBVztBQUNuQixtQkFBTyxDQUFDLGdFQUFNO0FBQ2QsbUJBQU8sQ0FBQyxnRUFBTTtBQUNkLG1CQUFPLENBQUMsMEVBQVc7QUFDbkIsbUJBQU8sQ0FBQyx3RUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9zaWduZXJzL3JlcXVlc3Rfc2lnbmVyLmpzPzZmZDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxudmFyIGluaGVyaXQgPSBBV1MudXRpbC5pbmhlcml0O1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5BV1MuU2lnbmVycy5SZXF1ZXN0U2lnbmVyID0gaW5oZXJpdCh7XG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiBSZXF1ZXN0U2lnbmVyKHJlcXVlc3QpIHtcbiAgICB0aGlzLnJlcXVlc3QgPSByZXF1ZXN0O1xuICB9LFxuXG4gIHNldFNlcnZpY2VDbGllbnRJZDogZnVuY3Rpb24gc2V0U2VydmljZUNsaWVudElkKGlkKSB7XG4gICAgdGhpcy5zZXJ2aWNlQ2xpZW50SWQgPSBpZDtcbiAgfSxcblxuICBnZXRTZXJ2aWNlQ2xpZW50SWQ6IGZ1bmN0aW9uIGdldFNlcnZpY2VDbGllbnRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5zZXJ2aWNlQ2xpZW50SWQ7XG4gIH1cbn0pO1xuXG5BV1MuU2lnbmVycy5SZXF1ZXN0U2lnbmVyLmdldFZlcnNpb24gPSBmdW5jdGlvbiBnZXRWZXJzaW9uKHZlcnNpb24pIHtcbiAgc3dpdGNoICh2ZXJzaW9uKSB7XG4gICAgY2FzZSAndjInOiByZXR1cm4gQVdTLlNpZ25lcnMuVjI7XG4gICAgY2FzZSAndjMnOiByZXR1cm4gQVdTLlNpZ25lcnMuVjM7XG4gICAgY2FzZSAnczN2NCc6IHJldHVybiBBV1MuU2lnbmVycy5WNDtcbiAgICBjYXNlICd2NCc6IHJldHVybiBBV1MuU2lnbmVycy5WNDtcbiAgICBjYXNlICdzMyc6IHJldHVybiBBV1MuU2lnbmVycy5TMztcbiAgICBjYXNlICd2M2h0dHBzJzogcmV0dXJuIEFXUy5TaWduZXJzLlYzSHR0cHM7XG4gICAgY2FzZSAnYmVhcmVyJzogcmV0dXJuIEFXUy5TaWduZXJzLkJlYXJlcjtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gc2lnbmluZyB2ZXJzaW9uICcgKyB2ZXJzaW9uKTtcbn07XG5cbnJlcXVpcmUoJy4vdjInKTtcbnJlcXVpcmUoJy4vdjMnKTtcbnJlcXVpcmUoJy4vdjNodHRwcycpO1xucmVxdWlyZSgnLi92NCcpO1xucmVxdWlyZSgnLi9zMycpO1xucmVxdWlyZSgnLi9wcmVzaWduJyk7XG5yZXF1aXJlKCcuL2JlYXJlcicpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/request_signer.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/s3.js":
/*!****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/s3.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {\n  /**\n   * When building the stringToSign, these sub resource params should be\n   * part of the canonical resource string with their NON-decoded values\n   */\n  subResources: {\n    'acl': 1,\n    'accelerate': 1,\n    'analytics': 1,\n    'cors': 1,\n    'lifecycle': 1,\n    'delete': 1,\n    'inventory': 1,\n    'location': 1,\n    'logging': 1,\n    'metrics': 1,\n    'notification': 1,\n    'partNumber': 1,\n    'policy': 1,\n    'requestPayment': 1,\n    'replication': 1,\n    'restore': 1,\n    'tagging': 1,\n    'torrent': 1,\n    'uploadId': 1,\n    'uploads': 1,\n    'versionId': 1,\n    'versioning': 1,\n    'versions': 1,\n    'website': 1\n  },\n\n  // when building the stringToSign, these querystring params should be\n  // part of the canonical resource string with their NON-encoded values\n  responseHeaders: {\n    'response-content-type': 1,\n    'response-content-language': 1,\n    'response-expires': 1,\n    'response-cache-control': 1,\n    'response-content-disposition': 1,\n    'response-content-encoding': 1\n  },\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    if (!this.request.headers['presigned-expires']) {\n      this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);\n    }\n\n    if (credentials.sessionToken) {\n      // presigned URLs require this header to be lowercased\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    var signature = this.sign(credentials.secretAccessKey, this.stringToSign());\n    var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;\n\n    this.request.headers['Authorization'] = auth;\n  },\n\n  stringToSign: function stringToSign() {\n    var r = this.request;\n\n    var parts = [];\n    parts.push(r.method);\n    parts.push(r.headers['Content-MD5'] || '');\n    parts.push(r.headers['Content-Type'] || '');\n\n    // This is the \"Date\" header, but we use X-Amz-Date.\n    // The S3 signing mechanism requires us to pass an empty\n    // string for this Date header regardless.\n    parts.push(r.headers['presigned-expires'] || '');\n\n    var headers = this.canonicalizedAmzHeaders();\n    if (headers) parts.push(headers);\n    parts.push(this.canonicalizedResource());\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {\n\n    var amzHeaders = [];\n\n    AWS.util.each(this.request.headers, function (name) {\n      if (name.match(/^x-amz-/i))\n        amzHeaders.push(name);\n    });\n\n    amzHeaders.sort(function (a, b) {\n      return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n    });\n\n    var parts = [];\n    AWS.util.arrayEach.call(this, amzHeaders, function (name) {\n      parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));\n    });\n\n    return parts.join('\\n');\n\n  },\n\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined) {\n            querystring.push(res.name);\n          } else {\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n\n  sign: function sign(secret, string) {\n    return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.S3;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvczMuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxHQUFHOztBQUVIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQSxHQUFHOztBQUVIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQLHVDQUF1QyxrQ0FBa0M7O0FBRXpFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvczMuanM/YTY4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQVdTID0gcmVxdWlyZSgnLi4vY29yZScpO1xudmFyIGluaGVyaXQgPSBBV1MudXRpbC5pbmhlcml0O1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5BV1MuU2lnbmVycy5TMyA9IGluaGVyaXQoQVdTLlNpZ25lcnMuUmVxdWVzdFNpZ25lciwge1xuICAvKipcbiAgICogV2hlbiBidWlsZGluZyB0aGUgc3RyaW5nVG9TaWduLCB0aGVzZSBzdWIgcmVzb3VyY2UgcGFyYW1zIHNob3VsZCBiZVxuICAgKiBwYXJ0IG9mIHRoZSBjYW5vbmljYWwgcmVzb3VyY2Ugc3RyaW5nIHdpdGggdGhlaXIgTk9OLWRlY29kZWQgdmFsdWVzXG4gICAqL1xuICBzdWJSZXNvdXJjZXM6IHtcbiAgICAnYWNsJzogMSxcbiAgICAnYWNjZWxlcmF0ZSc6IDEsXG4gICAgJ2FuYWx5dGljcyc6IDEsXG4gICAgJ2NvcnMnOiAxLFxuICAgICdsaWZlY3ljbGUnOiAxLFxuICAgICdkZWxldGUnOiAxLFxuICAgICdpbnZlbnRvcnknOiAxLFxuICAgICdsb2NhdGlvbic6IDEsXG4gICAgJ2xvZ2dpbmcnOiAxLFxuICAgICdtZXRyaWNzJzogMSxcbiAgICAnbm90aWZpY2F0aW9uJzogMSxcbiAgICAncGFydE51bWJlcic6IDEsXG4gICAgJ3BvbGljeSc6IDEsXG4gICAgJ3JlcXVlc3RQYXltZW50JzogMSxcbiAgICAncmVwbGljYXRpb24nOiAxLFxuICAgICdyZXN0b3JlJzogMSxcbiAgICAndGFnZ2luZyc6IDEsXG4gICAgJ3RvcnJlbnQnOiAxLFxuICAgICd1cGxvYWRJZCc6IDEsXG4gICAgJ3VwbG9hZHMnOiAxLFxuICAgICd2ZXJzaW9uSWQnOiAxLFxuICAgICd2ZXJzaW9uaW5nJzogMSxcbiAgICAndmVyc2lvbnMnOiAxLFxuICAgICd3ZWJzaXRlJzogMVxuICB9LFxuXG4gIC8vIHdoZW4gYnVpbGRpbmcgdGhlIHN0cmluZ1RvU2lnbiwgdGhlc2UgcXVlcnlzdHJpbmcgcGFyYW1zIHNob3VsZCBiZVxuICAvLyBwYXJ0IG9mIHRoZSBjYW5vbmljYWwgcmVzb3VyY2Ugc3RyaW5nIHdpdGggdGhlaXIgTk9OLWVuY29kZWQgdmFsdWVzXG4gIHJlc3BvbnNlSGVhZGVyczoge1xuICAgICdyZXNwb25zZS1jb250ZW50LXR5cGUnOiAxLFxuICAgICdyZXNwb25zZS1jb250ZW50LWxhbmd1YWdlJzogMSxcbiAgICAncmVzcG9uc2UtZXhwaXJlcyc6IDEsXG4gICAgJ3Jlc3BvbnNlLWNhY2hlLWNvbnRyb2wnOiAxLFxuICAgICdyZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uJzogMSxcbiAgICAncmVzcG9uc2UtY29udGVudC1lbmNvZGluZyc6IDFcbiAgfSxcblxuICBhZGRBdXRob3JpemF0aW9uOiBmdW5jdGlvbiBhZGRBdXRob3JpemF0aW9uKGNyZWRlbnRpYWxzLCBkYXRlKSB7XG4gICAgaWYgKCF0aGlzLnJlcXVlc3QuaGVhZGVyc1sncHJlc2lnbmVkLWV4cGlyZXMnXSkge1xuICAgICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ1gtQW16LURhdGUnXSA9IEFXUy51dGlsLmRhdGUucmZjODIyKGRhdGUpO1xuICAgIH1cblxuICAgIGlmIChjcmVkZW50aWFscy5zZXNzaW9uVG9rZW4pIHtcbiAgICAgIC8vIHByZXNpZ25lZCBVUkxzIHJlcXVpcmUgdGhpcyBoZWFkZXIgdG8gYmUgbG93ZXJjYXNlZFxuICAgICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ3gtYW16LXNlY3VyaXR5LXRva2VuJ10gPSBjcmVkZW50aWFscy5zZXNzaW9uVG9rZW47XG4gICAgfVxuXG4gICAgdmFyIHNpZ25hdHVyZSA9IHRoaXMuc2lnbihjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXksIHRoaXMuc3RyaW5nVG9TaWduKCkpO1xuICAgIHZhciBhdXRoID0gJ0FXUyAnICsgY3JlZGVudGlhbHMuYWNjZXNzS2V5SWQgKyAnOicgKyBzaWduYXR1cmU7XG5cbiAgICB0aGlzLnJlcXVlc3QuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gYXV0aDtcbiAgfSxcblxuICBzdHJpbmdUb1NpZ246IGZ1bmN0aW9uIHN0cmluZ1RvU2lnbigpIHtcbiAgICB2YXIgciA9IHRoaXMucmVxdWVzdDtcblxuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIHBhcnRzLnB1c2goci5tZXRob2QpO1xuICAgIHBhcnRzLnB1c2goci5oZWFkZXJzWydDb250ZW50LU1ENSddIHx8ICcnKTtcbiAgICBwYXJ0cy5wdXNoKHIuaGVhZGVyc1snQ29udGVudC1UeXBlJ10gfHwgJycpO1xuXG4gICAgLy8gVGhpcyBpcyB0aGUgXCJEYXRlXCIgaGVhZGVyLCBidXQgd2UgdXNlIFgtQW16LURhdGUuXG4gICAgLy8gVGhlIFMzIHNpZ25pbmcgbWVjaGFuaXNtIHJlcXVpcmVzIHVzIHRvIHBhc3MgYW4gZW1wdHlcbiAgICAvLyBzdHJpbmcgZm9yIHRoaXMgRGF0ZSBoZWFkZXIgcmVnYXJkbGVzcy5cbiAgICBwYXJ0cy5wdXNoKHIuaGVhZGVyc1sncHJlc2lnbmVkLWV4cGlyZXMnXSB8fCAnJyk7XG5cbiAgICB2YXIgaGVhZGVycyA9IHRoaXMuY2Fub25pY2FsaXplZEFtekhlYWRlcnMoKTtcbiAgICBpZiAoaGVhZGVycykgcGFydHMucHVzaChoZWFkZXJzKTtcbiAgICBwYXJ0cy5wdXNoKHRoaXMuY2Fub25pY2FsaXplZFJlc291cmNlKCkpO1xuXG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oJ1xcbicpO1xuXG4gIH0sXG5cbiAgY2Fub25pY2FsaXplZEFtekhlYWRlcnM6IGZ1bmN0aW9uIGNhbm9uaWNhbGl6ZWRBbXpIZWFkZXJzKCkge1xuXG4gICAgdmFyIGFtekhlYWRlcnMgPSBbXTtcblxuICAgIEFXUy51dGlsLmVhY2godGhpcy5yZXF1ZXN0LmhlYWRlcnMsIGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICBpZiAobmFtZS5tYXRjaCgvXngtYW16LS9pKSlcbiAgICAgICAgYW16SGVhZGVycy5wdXNoKG5hbWUpO1xuICAgIH0pO1xuXG4gICAgYW16SGVhZGVycy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gYS50b0xvd2VyQ2FzZSgpIDwgYi50b0xvd2VyQ2FzZSgpID8gLTEgOiAxO1xuICAgIH0pO1xuXG4gICAgdmFyIHBhcnRzID0gW107XG4gICAgQVdTLnV0aWwuYXJyYXlFYWNoLmNhbGwodGhpcywgYW16SGVhZGVycywgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHBhcnRzLnB1c2gobmFtZS50b0xvd2VyQ2FzZSgpICsgJzonICsgU3RyaW5nKHRoaXMucmVxdWVzdC5oZWFkZXJzW25hbWVdKSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcGFydHMuam9pbignXFxuJyk7XG5cbiAgfSxcblxuICBjYW5vbmljYWxpemVkUmVzb3VyY2U6IGZ1bmN0aW9uIGNhbm9uaWNhbGl6ZWRSZXNvdXJjZSgpIHtcblxuICAgIHZhciByID0gdGhpcy5yZXF1ZXN0O1xuXG4gICAgdmFyIHBhcnRzID0gci5wYXRoLnNwbGl0KCc/Jyk7XG4gICAgdmFyIHBhdGggPSBwYXJ0c1swXTtcbiAgICB2YXIgcXVlcnlzdHJpbmcgPSBwYXJ0c1sxXTtcblxuICAgIHZhciByZXNvdXJjZSA9ICcnO1xuXG4gICAgaWYgKHIudmlydHVhbEhvc3RlZEJ1Y2tldClcbiAgICAgIHJlc291cmNlICs9ICcvJyArIHIudmlydHVhbEhvc3RlZEJ1Y2tldDtcblxuICAgIHJlc291cmNlICs9IHBhdGg7XG5cbiAgICBpZiAocXVlcnlzdHJpbmcpIHtcblxuICAgICAgLy8gY29sbGVjdCBhIGxpc3Qgb2Ygc3ViIHJlc291cmNlcyBhbmQgcXVlcnkgcGFyYW1zIHRoYXQgbmVlZCB0byBiZSBzaWduZWRcbiAgICAgIHZhciByZXNvdXJjZXMgPSBbXTtcblxuICAgICAgQVdTLnV0aWwuYXJyYXlFYWNoLmNhbGwodGhpcywgcXVlcnlzdHJpbmcuc3BsaXQoJyYnKSwgZnVuY3Rpb24gKHBhcmFtKSB7XG4gICAgICAgIHZhciBuYW1lID0gcGFyYW0uc3BsaXQoJz0nKVswXTtcbiAgICAgICAgdmFyIHZhbHVlID0gcGFyYW0uc3BsaXQoJz0nKVsxXTtcbiAgICAgICAgaWYgKHRoaXMuc3ViUmVzb3VyY2VzW25hbWVdIHx8IHRoaXMucmVzcG9uc2VIZWFkZXJzW25hbWVdKSB7XG4gICAgICAgICAgdmFyIHN1YnJlc291cmNlID0geyBuYW1lOiBuYW1lIH07XG4gICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnN1YlJlc291cmNlc1tuYW1lXSkge1xuICAgICAgICAgICAgICBzdWJyZXNvdXJjZS52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgc3VicmVzb3VyY2UudmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXNvdXJjZXMucHVzaChzdWJyZXNvdXJjZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXNvdXJjZXMuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYS5uYW1lIDwgYi5uYW1lID8gLTEgOiAxOyB9KTtcblxuICAgICAgaWYgKHJlc291cmNlcy5sZW5ndGgpIHtcblxuICAgICAgICBxdWVyeXN0cmluZyA9IFtdO1xuICAgICAgICBBV1MudXRpbC5hcnJheUVhY2gocmVzb3VyY2VzLCBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgaWYgKHJlcy52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBxdWVyeXN0cmluZy5wdXNoKHJlcy5uYW1lKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcXVlcnlzdHJpbmcucHVzaChyZXMubmFtZSArICc9JyArIHJlcy52YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICByZXNvdXJjZSArPSAnPycgKyBxdWVyeXN0cmluZy5qb2luKCcmJyk7XG4gICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzb3VyY2U7XG5cbiAgfSxcblxuICBzaWduOiBmdW5jdGlvbiBzaWduKHNlY3JldCwgc3RyaW5nKSB7XG4gICAgcmV0dXJuIEFXUy51dGlsLmNyeXB0by5obWFjKHNlY3JldCwgc3RyaW5nLCAnYmFzZTY0JywgJ3NoYTEnKTtcbiAgfVxufSk7XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gQVdTLlNpZ25lcnMuUzM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/s3.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/v2.js":
/*!****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/v2.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    if (!date) date = AWS.util.date.getDate();\n\n    var r = this.request;\n\n    r.params.Timestamp = AWS.util.date.iso8601(date);\n    r.params.SignatureVersion = '2';\n    r.params.SignatureMethod = 'HmacSHA256';\n    r.params.AWSAccessKeyId = credentials.accessKeyId;\n\n    if (credentials.sessionToken) {\n      r.params.SecurityToken = credentials.sessionToken;\n    }\n\n    delete r.params.Signature; // delete old Signature for re-signing\n    r.params.Signature = this.signature(credentials);\n\n    r.body = AWS.util.queryParamsToString(r.params);\n    r.headers['Content-Length'] = r.body.length;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push(this.request.endpoint.host.toLowerCase());\n    parts.push(this.request.pathname());\n    parts.push(AWS.util.queryParamsToString(this.request.params));\n    return parts.join('\\n');\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvdjIuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLCtCQUErQjtBQUMvQjs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc2lnbmVycy92Mi5qcz81M2VlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG52YXIgaW5oZXJpdCA9IEFXUy51dGlsLmluaGVyaXQ7XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbkFXUy5TaWduZXJzLlYyID0gaW5oZXJpdChBV1MuU2lnbmVycy5SZXF1ZXN0U2lnbmVyLCB7XG4gIGFkZEF1dGhvcml6YXRpb246IGZ1bmN0aW9uIGFkZEF1dGhvcml6YXRpb24oY3JlZGVudGlhbHMsIGRhdGUpIHtcblxuICAgIGlmICghZGF0ZSkgZGF0ZSA9IEFXUy51dGlsLmRhdGUuZ2V0RGF0ZSgpO1xuXG4gICAgdmFyIHIgPSB0aGlzLnJlcXVlc3Q7XG5cbiAgICByLnBhcmFtcy5UaW1lc3RhbXAgPSBBV1MudXRpbC5kYXRlLmlzbzg2MDEoZGF0ZSk7XG4gICAgci5wYXJhbXMuU2lnbmF0dXJlVmVyc2lvbiA9ICcyJztcbiAgICByLnBhcmFtcy5TaWduYXR1cmVNZXRob2QgPSAnSG1hY1NIQTI1Nic7XG4gICAgci5wYXJhbXMuQVdTQWNjZXNzS2V5SWQgPSBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZDtcblxuICAgIGlmIChjcmVkZW50aWFscy5zZXNzaW9uVG9rZW4pIHtcbiAgICAgIHIucGFyYW1zLlNlY3VyaXR5VG9rZW4gPSBjcmVkZW50aWFscy5zZXNzaW9uVG9rZW47XG4gICAgfVxuXG4gICAgZGVsZXRlIHIucGFyYW1zLlNpZ25hdHVyZTsgLy8gZGVsZXRlIG9sZCBTaWduYXR1cmUgZm9yIHJlLXNpZ25pbmdcbiAgICByLnBhcmFtcy5TaWduYXR1cmUgPSB0aGlzLnNpZ25hdHVyZShjcmVkZW50aWFscyk7XG5cbiAgICByLmJvZHkgPSBBV1MudXRpbC5xdWVyeVBhcmFtc1RvU3RyaW5nKHIucGFyYW1zKTtcbiAgICByLmhlYWRlcnNbJ0NvbnRlbnQtTGVuZ3RoJ10gPSByLmJvZHkubGVuZ3RoO1xuICB9LFxuXG4gIHNpZ25hdHVyZTogZnVuY3Rpb24gc2lnbmF0dXJlKGNyZWRlbnRpYWxzKSB7XG4gICAgcmV0dXJuIEFXUy51dGlsLmNyeXB0by5obWFjKGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSwgdGhpcy5zdHJpbmdUb1NpZ24oKSwgJ2Jhc2U2NCcpO1xuICB9LFxuXG4gIHN0cmluZ1RvU2lnbjogZnVuY3Rpb24gc3RyaW5nVG9TaWduKCkge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIHBhcnRzLnB1c2godGhpcy5yZXF1ZXN0Lm1ldGhvZCk7XG4gICAgcGFydHMucHVzaCh0aGlzLnJlcXVlc3QuZW5kcG9pbnQuaG9zdC50b0xvd2VyQ2FzZSgpKTtcbiAgICBwYXJ0cy5wdXNoKHRoaXMucmVxdWVzdC5wYXRobmFtZSgpKTtcbiAgICBwYXJ0cy5wdXNoKEFXUy51dGlsLnF1ZXJ5UGFyYW1zVG9TdHJpbmcodGhpcy5yZXF1ZXN0LnBhcmFtcykpO1xuICAgIHJldHVybiBwYXJ0cy5qb2luKCdcXG4nKTtcbiAgfVxuXG59KTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBV1MuU2lnbmVycy5WMjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/v2.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/v3.js":
/*!****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/v3.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {\n  addAuthorization: function addAuthorization(credentials, date) {\n\n    var datetime = AWS.util.date.rfc822(date);\n\n    this.request.headers['X-Amz-Date'] = datetime;\n\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n\n    this.request.headers['X-Amzn-Authorization'] =\n      this.authorization(credentials, datetime);\n\n  },\n\n  authorization: function authorization(credentials) {\n    return 'AWS3 ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'SignedHeaders=' + this.signedHeaders() + ',' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  signedHeaders: function signedHeaders() {\n    var headers = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      headers.push(h.toLowerCase());\n    });\n    return headers.sort().join(';');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = this.request.headers;\n    var parts = [];\n    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {\n      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());\n    });\n    return parts.sort().join('\\n') + '\\n';\n  },\n\n  headersToSign: function headersToSign() {\n    var headers = [];\n    AWS.util.each(this.request.headers, function iterator(k) {\n      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {\n        headers.push(k);\n      }\n    });\n    return headers;\n  },\n\n  signature: function signature(credentials) {\n    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');\n  },\n\n  stringToSign: function stringToSign() {\n    var parts = [];\n    parts.push(this.request.method);\n    parts.push('/');\n    parts.push('');\n    parts.push(this.canonicalHeaders());\n    parts.push(this.request.body);\n    return AWS.util.crypto.sha256(parts.join('\\n'));\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvdjMuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGlDQUFpQztBQUNqQyxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc2lnbmVycy92My5qcz8wMDY5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG52YXIgaW5oZXJpdCA9IEFXUy51dGlsLmluaGVyaXQ7XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbkFXUy5TaWduZXJzLlYzID0gaW5oZXJpdChBV1MuU2lnbmVycy5SZXF1ZXN0U2lnbmVyLCB7XG4gIGFkZEF1dGhvcml6YXRpb246IGZ1bmN0aW9uIGFkZEF1dGhvcml6YXRpb24oY3JlZGVudGlhbHMsIGRhdGUpIHtcblxuICAgIHZhciBkYXRldGltZSA9IEFXUy51dGlsLmRhdGUucmZjODIyKGRhdGUpO1xuXG4gICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ1gtQW16LURhdGUnXSA9IGRhdGV0aW1lO1xuXG4gICAgaWYgKGNyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbikge1xuICAgICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ3gtYW16LXNlY3VyaXR5LXRva2VuJ10gPSBjcmVkZW50aWFscy5zZXNzaW9uVG9rZW47XG4gICAgfVxuXG4gICAgdGhpcy5yZXF1ZXN0LmhlYWRlcnNbJ1gtQW16bi1BdXRob3JpemF0aW9uJ10gPVxuICAgICAgdGhpcy5hdXRob3JpemF0aW9uKGNyZWRlbnRpYWxzLCBkYXRldGltZSk7XG5cbiAgfSxcblxuICBhdXRob3JpemF0aW9uOiBmdW5jdGlvbiBhdXRob3JpemF0aW9uKGNyZWRlbnRpYWxzKSB7XG4gICAgcmV0dXJuICdBV1MzICcgK1xuICAgICAgJ0FXU0FjY2Vzc0tleUlkPScgKyBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZCArICcsJyArXG4gICAgICAnQWxnb3JpdGhtPUhtYWNTSEEyNTYsJyArXG4gICAgICAnU2lnbmVkSGVhZGVycz0nICsgdGhpcy5zaWduZWRIZWFkZXJzKCkgKyAnLCcgK1xuICAgICAgJ1NpZ25hdHVyZT0nICsgdGhpcy5zaWduYXR1cmUoY3JlZGVudGlhbHMpO1xuICB9LFxuXG4gIHNpZ25lZEhlYWRlcnM6IGZ1bmN0aW9uIHNpZ25lZEhlYWRlcnMoKSB7XG4gICAgdmFyIGhlYWRlcnMgPSBbXTtcbiAgICBBV1MudXRpbC5hcnJheUVhY2godGhpcy5oZWFkZXJzVG9TaWduKCksIGZ1bmN0aW9uIGl0ZXJhdG9yKGgpIHtcbiAgICAgIGhlYWRlcnMucHVzaChoLnRvTG93ZXJDYXNlKCkpO1xuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJzLnNvcnQoKS5qb2luKCc7Jyk7XG4gIH0sXG5cbiAgY2Fub25pY2FsSGVhZGVyczogZnVuY3Rpb24gY2Fub25pY2FsSGVhZGVycygpIHtcbiAgICB2YXIgaGVhZGVycyA9IHRoaXMucmVxdWVzdC5oZWFkZXJzO1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIEFXUy51dGlsLmFycmF5RWFjaCh0aGlzLmhlYWRlcnNUb1NpZ24oKSwgZnVuY3Rpb24gaXRlcmF0b3IoaCkge1xuICAgICAgcGFydHMucHVzaChoLnRvTG93ZXJDYXNlKCkudHJpbSgpICsgJzonICsgU3RyaW5nKGhlYWRlcnNbaF0pLnRyaW0oKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHBhcnRzLnNvcnQoKS5qb2luKCdcXG4nKSArICdcXG4nO1xuICB9LFxuXG4gIGhlYWRlcnNUb1NpZ246IGZ1bmN0aW9uIGhlYWRlcnNUb1NpZ24oKSB7XG4gICAgdmFyIGhlYWRlcnMgPSBbXTtcbiAgICBBV1MudXRpbC5lYWNoKHRoaXMucmVxdWVzdC5oZWFkZXJzLCBmdW5jdGlvbiBpdGVyYXRvcihrKSB7XG4gICAgICBpZiAoayA9PT0gJ0hvc3QnIHx8IGsgPT09ICdDb250ZW50LUVuY29kaW5nJyB8fCBrLm1hdGNoKC9eWC1BbXovaSkpIHtcbiAgICAgICAgaGVhZGVycy5wdXNoKGspO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJzO1xuICB9LFxuXG4gIHNpZ25hdHVyZTogZnVuY3Rpb24gc2lnbmF0dXJlKGNyZWRlbnRpYWxzKSB7XG4gICAgcmV0dXJuIEFXUy51dGlsLmNyeXB0by5obWFjKGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSwgdGhpcy5zdHJpbmdUb1NpZ24oKSwgJ2Jhc2U2NCcpO1xuICB9LFxuXG4gIHN0cmluZ1RvU2lnbjogZnVuY3Rpb24gc3RyaW5nVG9TaWduKCkge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuICAgIHBhcnRzLnB1c2godGhpcy5yZXF1ZXN0Lm1ldGhvZCk7XG4gICAgcGFydHMucHVzaCgnLycpO1xuICAgIHBhcnRzLnB1c2goJycpO1xuICAgIHBhcnRzLnB1c2godGhpcy5jYW5vbmljYWxIZWFkZXJzKCkpO1xuICAgIHBhcnRzLnB1c2godGhpcy5yZXF1ZXN0LmJvZHkpO1xuICAgIHJldHVybiBBV1MudXRpbC5jcnlwdG8uc2hhMjU2KHBhcnRzLmpvaW4oJ1xcbicpKTtcbiAgfVxuXG59KTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBV1MuU2lnbmVycy5WMztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/v3.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/v3https.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/v3https.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar inherit = AWS.util.inherit;\n\n__webpack_require__(/*! ./v3 */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v3.js\");\n\n/**\n * @api private\n */\nAWS.Signers.V3Https = inherit(AWS.Signers.V3, {\n  authorization: function authorization(credentials) {\n    return 'AWS3-HTTPS ' +\n      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +\n      'Algorithm=HmacSHA256,' +\n      'Signature=' + this.signature(credentials);\n  },\n\n  stringToSign: function stringToSign() {\n    return this.request.headers['X-Amz-Date'];\n  }\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V3Https;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvdjNodHRwcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0I7O0FBRUEsbUJBQU8sQ0FBQyxnRUFBTTs7QUFFZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc2lnbmVycy92M2h0dHBzLmpzPzI5NWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcbnZhciBpbmhlcml0ID0gQVdTLnV0aWwuaW5oZXJpdDtcblxucmVxdWlyZSgnLi92MycpO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5BV1MuU2lnbmVycy5WM0h0dHBzID0gaW5oZXJpdChBV1MuU2lnbmVycy5WMywge1xuICBhdXRob3JpemF0aW9uOiBmdW5jdGlvbiBhdXRob3JpemF0aW9uKGNyZWRlbnRpYWxzKSB7XG4gICAgcmV0dXJuICdBV1MzLUhUVFBTICcgK1xuICAgICAgJ0FXU0FjY2Vzc0tleUlkPScgKyBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZCArICcsJyArXG4gICAgICAnQWxnb3JpdGhtPUhtYWNTSEEyNTYsJyArXG4gICAgICAnU2lnbmF0dXJlPScgKyB0aGlzLnNpZ25hdHVyZShjcmVkZW50aWFscyk7XG4gIH0sXG5cbiAgc3RyaW5nVG9TaWduOiBmdW5jdGlvbiBzdHJpbmdUb1NpZ24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdC5oZWFkZXJzWydYLUFtei1EYXRlJ107XG4gIH1cbn0pO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFXUy5TaWduZXJzLlYzSHR0cHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/v3https.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/v4.js":
/*!****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/v4.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar v4Credentials = __webpack_require__(/*! ./v4_credentials */ \"(rsc)/../../node_modules/aws-sdk/lib/signers/v4_credentials.js\");\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nvar expiresHeader = 'presigned-expires';\n\n/**\n * @api private\n */\nAWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {\n  constructor: function V4(request, serviceName, options) {\n    AWS.Signers.RequestSigner.call(this, request);\n    this.serviceName = serviceName;\n    options = options || {};\n    this.signatureCache = typeof options.signatureCache === 'boolean' ? options.signatureCache : true;\n    this.operation = options.operation;\n    this.signatureVersion = options.signatureVersion;\n  },\n\n  algorithm: 'AWS4-HMAC-SHA256',\n\n  addAuthorization: function addAuthorization(credentials, date) {\n    var datetime = AWS.util.date.iso8601(date).replace(/[:\\-]|\\.\\d{3}/g, '');\n\n    if (this.isPresigned()) {\n      this.updateForPresigned(credentials, datetime);\n    } else {\n      this.addHeaders(credentials, datetime);\n    }\n\n    this.request.headers['Authorization'] =\n      this.authorization(credentials, datetime);\n  },\n\n  addHeaders: function addHeaders(credentials, datetime) {\n    this.request.headers['X-Amz-Date'] = datetime;\n    if (credentials.sessionToken) {\n      this.request.headers['x-amz-security-token'] = credentials.sessionToken;\n    }\n  },\n\n  updateForPresigned: function updateForPresigned(credentials, datetime) {\n    var credString = this.credentialString(datetime);\n    var qs = {\n      'X-Amz-Date': datetime,\n      'X-Amz-Algorithm': this.algorithm,\n      'X-Amz-Credential': credentials.accessKeyId + '/' + credString,\n      'X-Amz-Expires': this.request.headers[expiresHeader],\n      'X-Amz-SignedHeaders': this.signedHeaders()\n    };\n\n    if (credentials.sessionToken) {\n      qs['X-Amz-Security-Token'] = credentials.sessionToken;\n    }\n\n    if (this.request.headers['Content-Type']) {\n      qs['Content-Type'] = this.request.headers['Content-Type'];\n    }\n    if (this.request.headers['Content-MD5']) {\n      qs['Content-MD5'] = this.request.headers['Content-MD5'];\n    }\n    if (this.request.headers['Cache-Control']) {\n      qs['Cache-Control'] = this.request.headers['Cache-Control'];\n    }\n\n    // need to pull in any other X-Amz-* headers\n    AWS.util.each.call(this, this.request.headers, function(key, value) {\n      if (key === expiresHeader) return;\n      if (this.isSignableHeader(key)) {\n        var lowerKey = key.toLowerCase();\n        // Metadata should be normalized\n        if (lowerKey.indexOf('x-amz-meta-') === 0) {\n          qs[lowerKey] = value;\n        } else if (lowerKey.indexOf('x-amz-') === 0) {\n          qs[key] = value;\n        }\n      }\n    });\n\n    var sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n    this.request.path += sep + AWS.util.queryParamsToString(qs);\n  },\n\n  authorization: function authorization(credentials, datetime) {\n    var parts = [];\n    var credString = this.credentialString(datetime);\n    parts.push(this.algorithm + ' Credential=' +\n      credentials.accessKeyId + '/' + credString);\n    parts.push('SignedHeaders=' + this.signedHeaders());\n    parts.push('Signature=' + this.signature(credentials, datetime));\n    return parts.join(', ');\n  },\n\n  signature: function signature(credentials, datetime) {\n    var signingKey = v4Credentials.getSigningKey(\n      credentials,\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName,\n      this.signatureCache\n    );\n    return AWS.util.crypto.hmac(signingKey, this.stringToSign(datetime), 'hex');\n  },\n\n  stringToSign: function stringToSign(datetime) {\n    var parts = [];\n    parts.push('AWS4-HMAC-SHA256');\n    parts.push(datetime);\n    parts.push(this.credentialString(datetime));\n    parts.push(this.hexEncodedHash(this.canonicalString()));\n    return parts.join('\\n');\n  },\n\n  canonicalString: function canonicalString() {\n    var parts = [], pathname = this.request.pathname();\n    if (this.serviceName !== 's3' && this.signatureVersion !== 's3v4') pathname = AWS.util.uriEscapePath(pathname);\n\n    parts.push(this.request.method);\n    parts.push(pathname);\n    parts.push(this.request.search());\n    parts.push(this.canonicalHeaders() + '\\n');\n    parts.push(this.signedHeaders());\n    parts.push(this.hexEncodedBodyHash());\n    return parts.join('\\n');\n  },\n\n  canonicalHeaders: function canonicalHeaders() {\n    var headers = [];\n    AWS.util.each.call(this, this.request.headers, function (key, item) {\n      headers.push([key, item]);\n    });\n    headers.sort(function (a, b) {\n      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;\n    });\n    var parts = [];\n    AWS.util.arrayEach.call(this, headers, function (item) {\n      var key = item[0].toLowerCase();\n      if (this.isSignableHeader(key)) {\n        var value = item[1];\n        if (typeof value === 'undefined' || value === null || typeof value.toString !== 'function') {\n          throw AWS.util.error(new Error('Header ' + key + ' contains invalid value'), {\n            code: 'InvalidHeader'\n          });\n        }\n        parts.push(key + ':' +\n          this.canonicalHeaderValues(value.toString()));\n      }\n    });\n    return parts.join('\\n');\n  },\n\n  canonicalHeaderValues: function canonicalHeaderValues(values) {\n    return values.replace(/\\s+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n  },\n\n  signedHeaders: function signedHeaders() {\n    var keys = [];\n    AWS.util.each.call(this, this.request.headers, function (key) {\n      key = key.toLowerCase();\n      if (this.isSignableHeader(key)) keys.push(key);\n    });\n    return keys.sort().join(';');\n  },\n\n  credentialString: function credentialString(datetime) {\n    return v4Credentials.createScope(\n      datetime.substr(0, 8),\n      this.request.region,\n      this.serviceName\n    );\n  },\n\n  hexEncodedHash: function hash(string) {\n    return AWS.util.crypto.sha256(string, 'hex');\n  },\n\n  hexEncodedBodyHash: function hexEncodedBodyHash() {\n    var request = this.request;\n    if (this.isPresigned() && (['s3', 's3-object-lambda'].indexOf(this.serviceName) > -1) && !request.body) {\n      return 'UNSIGNED-PAYLOAD';\n    } else if (request.headers['X-Amz-Content-Sha256']) {\n      return request.headers['X-Amz-Content-Sha256'];\n    } else {\n      return this.hexEncodedHash(this.request.body || '');\n    }\n  },\n\n  unsignableHeaders: [\n    'authorization',\n    'content-type',\n    'content-length',\n    'user-agent',\n    expiresHeader,\n    'expect',\n    'x-amzn-trace-id'\n  ],\n\n  isSignableHeader: function isSignableHeader(key) {\n    if (key.toLowerCase().indexOf('x-amz-') === 0) return true;\n    return this.unsignableHeaders.indexOf(key) < 0;\n  },\n\n  isPresigned: function isPresigned() {\n    return this.request.headers[expiresHeader] ? true : false;\n  }\n\n});\n\n/**\n * @api private\n */\nmodule.exports = AWS.Signers.V4;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/v4.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/signers/v4_credentials.js":
/*!****************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/signers/v4_credentials.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * @api private\n */\nvar cachedSecret = {};\n\n/**\n * @api private\n */\nvar cacheQueue = [];\n\n/**\n * @api private\n */\nvar maxCacheEntries = 50;\n\n/**\n * @api private\n */\nvar v4Identifier = 'aws4_request';\n\n/**\n * @api private\n */\nmodule.exports = {\n  /**\n   * @api private\n   *\n   * @param date [String]\n   * @param region [String]\n   * @param serviceName [String]\n   * @return [String]\n   */\n  createScope: function createScope(date, region, serviceName) {\n    return [\n      date.substr(0, 8),\n      region,\n      serviceName,\n      v4Identifier\n    ].join('/');\n  },\n\n  /**\n   * @api private\n   *\n   * @param credentials [Credentials]\n   * @param date [String]\n   * @param region [String]\n   * @param service [String]\n   * @param shouldCache [Boolean]\n   * @return [String]\n   */\n  getSigningKey: function getSigningKey(\n    credentials,\n    date,\n    region,\n    service,\n    shouldCache\n  ) {\n    var credsIdentifier = AWS.util.crypto\n      .hmac(credentials.secretAccessKey, credentials.accessKeyId, 'base64');\n    var cacheKey = [credsIdentifier, date, region, service].join('_');\n    shouldCache = shouldCache !== false;\n    if (shouldCache && (cacheKey in cachedSecret)) {\n      return cachedSecret[cacheKey];\n    }\n\n    var kDate = AWS.util.crypto.hmac(\n      'AWS4' + credentials.secretAccessKey,\n      date,\n      'buffer'\n    );\n    var kRegion = AWS.util.crypto.hmac(kDate, region, 'buffer');\n    var kService = AWS.util.crypto.hmac(kRegion, service, 'buffer');\n\n    var signingKey = AWS.util.crypto.hmac(kService, v4Identifier, 'buffer');\n    if (shouldCache) {\n      cachedSecret[cacheKey] = signingKey;\n      cacheQueue.push(cacheKey);\n      if (cacheQueue.length > maxCacheEntries) {\n        // remove the oldest entry (not the least recently used)\n        delete cachedSecret[cacheQueue.shift()];\n      }\n    }\n\n    return signingKey;\n  },\n\n  /**\n   * @api private\n   *\n   * Empties the derived signing key cache. Made available for testing purposes\n   * only.\n   */\n  emptyCache: function emptyCache() {\n    cachedSecret = {};\n    cacheQueue = [];\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3NpZ25lcnMvdjRfY3JlZGVudGlhbHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLDZEQUFTOztBQUUzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi9zaWduZXJzL3Y0X2NyZWRlbnRpYWxzLmpzPzAwMTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEFXUyA9IHJlcXVpcmUoJy4uL2NvcmUnKTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xudmFyIGNhY2hlZFNlY3JldCA9IHt9O1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG52YXIgY2FjaGVRdWV1ZSA9IFtdO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG52YXIgbWF4Q2FjaGVFbnRyaWVzID0gNTA7XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbnZhciB2NElkZW50aWZpZXIgPSAnYXdzNF9yZXF1ZXN0JztcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICpcbiAgICogQHBhcmFtIGRhdGUgW1N0cmluZ11cbiAgICogQHBhcmFtIHJlZ2lvbiBbU3RyaW5nXVxuICAgKiBAcGFyYW0gc2VydmljZU5hbWUgW1N0cmluZ11cbiAgICogQHJldHVybiBbU3RyaW5nXVxuICAgKi9cbiAgY3JlYXRlU2NvcGU6IGZ1bmN0aW9uIGNyZWF0ZVNjb3BlKGRhdGUsIHJlZ2lvbiwgc2VydmljZU5hbWUpIHtcbiAgICByZXR1cm4gW1xuICAgICAgZGF0ZS5zdWJzdHIoMCwgOCksXG4gICAgICByZWdpb24sXG4gICAgICBzZXJ2aWNlTmFtZSxcbiAgICAgIHY0SWRlbnRpZmllclxuICAgIF0uam9pbignLycpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICpcbiAgICogQHBhcmFtIGNyZWRlbnRpYWxzIFtDcmVkZW50aWFsc11cbiAgICogQHBhcmFtIGRhdGUgW1N0cmluZ11cbiAgICogQHBhcmFtIHJlZ2lvbiBbU3RyaW5nXVxuICAgKiBAcGFyYW0gc2VydmljZSBbU3RyaW5nXVxuICAgKiBAcGFyYW0gc2hvdWxkQ2FjaGUgW0Jvb2xlYW5dXG4gICAqIEByZXR1cm4gW1N0cmluZ11cbiAgICovXG4gIGdldFNpZ25pbmdLZXk6IGZ1bmN0aW9uIGdldFNpZ25pbmdLZXkoXG4gICAgY3JlZGVudGlhbHMsXG4gICAgZGF0ZSxcbiAgICByZWdpb24sXG4gICAgc2VydmljZSxcbiAgICBzaG91bGRDYWNoZVxuICApIHtcbiAgICB2YXIgY3JlZHNJZGVudGlmaWVyID0gQVdTLnV0aWwuY3J5cHRvXG4gICAgICAuaG1hYyhjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXksIGNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkLCAnYmFzZTY0Jyk7XG4gICAgdmFyIGNhY2hlS2V5ID0gW2NyZWRzSWRlbnRpZmllciwgZGF0ZSwgcmVnaW9uLCBzZXJ2aWNlXS5qb2luKCdfJyk7XG4gICAgc2hvdWxkQ2FjaGUgPSBzaG91bGRDYWNoZSAhPT0gZmFsc2U7XG4gICAgaWYgKHNob3VsZENhY2hlICYmIChjYWNoZUtleSBpbiBjYWNoZWRTZWNyZXQpKSB7XG4gICAgICByZXR1cm4gY2FjaGVkU2VjcmV0W2NhY2hlS2V5XTtcbiAgICB9XG5cbiAgICB2YXIga0RhdGUgPSBBV1MudXRpbC5jcnlwdG8uaG1hYyhcbiAgICAgICdBV1M0JyArIGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSxcbiAgICAgIGRhdGUsXG4gICAgICAnYnVmZmVyJ1xuICAgICk7XG4gICAgdmFyIGtSZWdpb24gPSBBV1MudXRpbC5jcnlwdG8uaG1hYyhrRGF0ZSwgcmVnaW9uLCAnYnVmZmVyJyk7XG4gICAgdmFyIGtTZXJ2aWNlID0gQVdTLnV0aWwuY3J5cHRvLmhtYWMoa1JlZ2lvbiwgc2VydmljZSwgJ2J1ZmZlcicpO1xuXG4gICAgdmFyIHNpZ25pbmdLZXkgPSBBV1MudXRpbC5jcnlwdG8uaG1hYyhrU2VydmljZSwgdjRJZGVudGlmaWVyLCAnYnVmZmVyJyk7XG4gICAgaWYgKHNob3VsZENhY2hlKSB7XG4gICAgICBjYWNoZWRTZWNyZXRbY2FjaGVLZXldID0gc2lnbmluZ0tleTtcbiAgICAgIGNhY2hlUXVldWUucHVzaChjYWNoZUtleSk7XG4gICAgICBpZiAoY2FjaGVRdWV1ZS5sZW5ndGggPiBtYXhDYWNoZUVudHJpZXMpIHtcbiAgICAgICAgLy8gcmVtb3ZlIHRoZSBvbGRlc3QgZW50cnkgKG5vdCB0aGUgbGVhc3QgcmVjZW50bHkgdXNlZClcbiAgICAgICAgZGVsZXRlIGNhY2hlZFNlY3JldFtjYWNoZVF1ZXVlLnNoaWZ0KCldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzaWduaW5nS2V5O1xuICB9LFxuXG4gIC8qKlxuICAgKiBAYXBpIHByaXZhdGVcbiAgICpcbiAgICogRW1wdGllcyB0aGUgZGVyaXZlZCBzaWduaW5nIGtleSBjYWNoZS4gTWFkZSBhdmFpbGFibGUgZm9yIHRlc3RpbmcgcHVycG9zZXNcbiAgICogb25seS5cbiAgICovXG4gIGVtcHR5Q2FjaGU6IGZ1bmN0aW9uIGVtcHR5Q2FjaGUoKSB7XG4gICAgY2FjaGVkU2VjcmV0ID0ge307XG4gICAgY2FjaGVRdWV1ZSA9IFtdO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/signers/v4_credentials.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/state_machine.js":
/*!*******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/state_machine.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject; bindObject = done;\n    done = finalState; finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function(err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;\n      else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;\n      else return done ? done.call(bindObject) : null;\n    }\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState; acceptState = null; failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState; failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = { accept: acceptState, fail: failState, fn: fn };\n  return this;\n};\n\n/**\n * @api private\n */\nmodule.exports = AcceptorStateMachine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3N0YXRlX21hY2hpbmUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZCQUE2QjtBQUM3Qix1QkFBdUI7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0Esc0JBQXNCLG9CQUFvQjtBQUMxQyxJQUFJO0FBQ0osb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIvc3RhdGVfbWFjaGluZS5qcz8wNGQzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEFjY2VwdG9yU3RhdGVNYWNoaW5lKHN0YXRlcywgc3RhdGUpIHtcbiAgdGhpcy5jdXJyZW50U3RhdGUgPSBzdGF0ZSB8fCBudWxsO1xuICB0aGlzLnN0YXRlcyA9IHN0YXRlcyB8fCB7fTtcbn1cblxuQWNjZXB0b3JTdGF0ZU1hY2hpbmUucHJvdG90eXBlLnJ1blRvID0gZnVuY3Rpb24gcnVuVG8oZmluYWxTdGF0ZSwgZG9uZSwgYmluZE9iamVjdCwgaW5wdXRFcnJvcikge1xuICBpZiAodHlwZW9mIGZpbmFsU3RhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpbnB1dEVycm9yID0gYmluZE9iamVjdDsgYmluZE9iamVjdCA9IGRvbmU7XG4gICAgZG9uZSA9IGZpbmFsU3RhdGU7IGZpbmFsU3RhdGUgPSBudWxsO1xuICB9XG5cbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgc3RhdGUgPSBzZWxmLnN0YXRlc1tzZWxmLmN1cnJlbnRTdGF0ZV07XG4gIHN0YXRlLmZuLmNhbGwoYmluZE9iamVjdCB8fCBzZWxmLCBpbnB1dEVycm9yLCBmdW5jdGlvbihlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBpZiAoc3RhdGUuZmFpbCkgc2VsZi5jdXJyZW50U3RhdGUgPSBzdGF0ZS5mYWlsO1xuICAgICAgZWxzZSByZXR1cm4gZG9uZSA/IGRvbmUuY2FsbChiaW5kT2JqZWN0LCBlcnIpIDogbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHN0YXRlLmFjY2VwdCkgc2VsZi5jdXJyZW50U3RhdGUgPSBzdGF0ZS5hY2NlcHQ7XG4gICAgICBlbHNlIHJldHVybiBkb25lID8gZG9uZS5jYWxsKGJpbmRPYmplY3QpIDogbnVsbDtcbiAgICB9XG4gICAgaWYgKHNlbGYuY3VycmVudFN0YXRlID09PSBmaW5hbFN0YXRlKSB7XG4gICAgICByZXR1cm4gZG9uZSA/IGRvbmUuY2FsbChiaW5kT2JqZWN0LCBlcnIpIDogbnVsbDtcbiAgICB9XG5cbiAgICBzZWxmLnJ1blRvKGZpbmFsU3RhdGUsIGRvbmUsIGJpbmRPYmplY3QsIGVycik7XG4gIH0pO1xufTtcblxuQWNjZXB0b3JTdGF0ZU1hY2hpbmUucHJvdG90eXBlLmFkZFN0YXRlID0gZnVuY3Rpb24gYWRkU3RhdGUobmFtZSwgYWNjZXB0U3RhdGUsIGZhaWxTdGF0ZSwgZm4pIHtcbiAgaWYgKHR5cGVvZiBhY2NlcHRTdGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZuID0gYWNjZXB0U3RhdGU7IGFjY2VwdFN0YXRlID0gbnVsbDsgZmFpbFN0YXRlID0gbnVsbDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZmFpbFN0YXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm4gPSBmYWlsU3RhdGU7IGZhaWxTdGF0ZSA9IG51bGw7XG4gIH1cblxuICBpZiAoIXRoaXMuY3VycmVudFN0YXRlKSB0aGlzLmN1cnJlbnRTdGF0ZSA9IG5hbWU7XG4gIHRoaXMuc3RhdGVzW25hbWVdID0geyBhY2NlcHQ6IGFjY2VwdFN0YXRlLCBmYWlsOiBmYWlsU3RhdGUsIGZuOiBmbiB9O1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gQWNjZXB0b3JTdGF0ZU1hY2hpbmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/state_machine.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/token.js":
/*!***********************************************!*\
  !*** ../../node_modules/aws-sdk/lib/token.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Represents AWS token object, which contains {token}, and optional\n * {expireTime}.\n * Creating a `Token` object allows you to pass around your\n * token to configuration and service objects.\n *\n * Note that this class typically does not need to be constructed manually,\n * as the {AWS.Config} and {AWS.Service} classes both accept simple\n * options hashes with the two keys. The token from this object will be used\n * automatically in operations which require them.\n *\n * ## Expiring and Refreshing Token\n *\n * Occasionally token can expire in the middle of a long-running\n * application. In this case, the SDK will automatically attempt to\n * refresh the token from the storage location if the Token\n * class implements the {refresh} method.\n *\n * If you are implementing a token storage location, you\n * will want to create a subclass of the `Token` class and\n * override the {refresh} method. This method allows token to be\n * retrieved from the backing store, be it a file system, database, or\n * some network storage. The method should reset the token attributes\n * on the object.\n *\n * @!attribute token\n *   @return [String] represents the literal token string. This will typically\n *     be a base64 encoded string.\n * @!attribute expireTime\n *   @return [Date] a time when token should be considered expired. Used\n *     in conjunction with {expired}.\n * @!attribute expired\n *   @return [Boolean] whether the token is expired and require a refresh. Used\n *     in conjunction with {expireTime}.\n */\nAWS.Token = AWS.util.inherit({\n  /**\n   * Creates a Token object with a given set of information in options hash.\n   * @option options token [String] represents the literal token string.\n   * @option options expireTime [Date] field representing the time at which\n   *   the token expires.\n   * @example Create a token object\n   *   var token = new AWS.Token({ token: 'token' });\n   */\n  constructor: function Token(options) {\n    // hide token from being displayed with util.inspect\n    AWS.util.hideProperties(this, ['token']);\n\n    this.expired = false;\n    this.expireTime = null;\n    this.refreshCallbacks = [];\n    if (arguments.length === 1) {\n      var options = arguments[0];\n      this.token = options.token;\n      this.expireTime = options.expireTime;\n    }\n  },\n\n  /**\n   * @return [Integer] the number of seconds before {expireTime} during which\n   *   the token will be considered expired.\n   */\n  expiryWindow: 15,\n\n  /**\n   * @return [Boolean] whether the Token object should call {refresh}\n   * @note Subclasses should override this method to provide custom refresh\n   *   logic.\n   */\n  needsRefresh: function needsRefresh() {\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n\n    if (this.expireTime && adjustedTime > this.expireTime)\n      return true;\n\n    return this.expired || !this.token;\n  },\n\n  /**\n   * Gets the existing token, refreshing them if they are not yet loaded\n   * or have expired. Users should call this method before using {refresh},\n   * as this will not attempt to reload token when they are already\n   * loaded into the object.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means either token\n   *   do not need to be refreshed or refreshed token information has\n   *   been loaded into the object (as the `token` property).\n   *   @param err [Error] if an error occurred, this value will be filled\n   */\n  get: function get(callback) {\n    var self = this;\n    if (this.needsRefresh()) {\n      this.refresh(function(err) {\n        if (!err) self.expired = false; // reset expired flag\n        if (callback) callback(err);\n      });\n    } else if (callback) {\n      callback();\n    }\n  },\n\n  /**\n   * @!method  getPromise()\n   *   Returns a 'thenable' promise.\n   *   Gets the existing token, refreshing it if it's not yet loaded\n   *   or have expired. Users should call this method before using {refresh},\n   *   as this will not attempt to reload token when it's already\n   *   loaded into the object.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it means\n   *     either token does not need to be refreshed or refreshed token information\n   *     has been loaded into the object (as the `token` property).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled.\n   *   @return [Promise] A promise that represents the state of the `get` call.\n   *   @example Calling the `getPromise` method.\n   *     var promise = tokenProvider.getPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * @!method  refreshPromise()\n   *   Returns a 'thenable' promise.\n   *   Refreshes the token. Users should call {get} before attempting\n   *   to forcibly refresh token.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function()\n   *     Called if the promise is fulfilled. When this callback is called, it\n   *     means refreshed token information has been loaded into the object\n   *     (as the `token` property).\n   *   @callback rejectedCallback function(err)\n   *     Called if the promise is rejected.\n   *     @param err [Error] if an error occurred, this value will be filled.\n   *   @return [Promise] A promise that represents the state of the `refresh` call.\n   *   @example Calling the `refreshPromise` method.\n   *     var promise = tokenProvider.refreshPromise();\n   *     promise.then(function() { ... }, function(err) { ... });\n   */\n\n  /**\n   * Refreshes the token. Users should call {get} before attempting\n   * to forcibly refresh token.\n   *\n   * @callback callback function(err)\n   *   When this callback is called with no error, it means refreshed\n   *   token information has been loaded into the object (as the\n   *   `token` property).\n   *   @param err [Error] if an error occurred, this value will be filled\n   * @note Subclasses should override this class to reset the\n   *   {token} on the token object and then call the callback with\n   *   any error information.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    this.expired = false;\n    callback();\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  coalesceRefresh: function coalesceRefresh(callback, sync) {\n    var self = this;\n    if (self.refreshCallbacks.push(callback) === 1) {\n      self.load(function onLoad(err) {\n        AWS.util.arrayEach(self.refreshCallbacks, function(callback) {\n          if (sync) {\n            callback(err);\n          } else {\n            // callback could throw, so defer to ensure all callbacks are notified\n            AWS.util.defer(function () {\n              callback(err);\n            });\n          }\n        });\n        self.refreshCallbacks.length = 0;\n      });\n    }\n  },\n\n  /**\n   * @api private\n   * @param callback\n   */\n  load: function load(callback) {\n    callback();\n  }\n});\n\n/**\n * @api private\n */\nAWS.Token.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.getPromise = AWS.util.promisifyMethod('get', PromiseDependency);\n  this.prototype.refreshPromise = AWS.util.promisifyMethod('refresh', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.Token.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.getPromise;\n  delete this.prototype.refreshPromise;\n};\n\nAWS.util.addPromises(AWS.Token);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/token.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/token/sso_token_provider.js":
/*!******************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/token/sso_token_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar iniLoader = AWS.util.iniLoader;\n\n// Tracking refresh attempt to ensure refresh is not attempted more than once every 30 seconds.\nvar lastRefreshAttemptTime = 0;\n\n/**\n * Throws error is key is not present in token object.\n *\n * @param token [Object] Object to be validated.\n * @param key [String] The key to be validated on the object.\n */\nvar validateTokenKey = function validateTokenKey(token, key) {\n  if (!token[key]) {\n    throw AWS.util.error(\n      new Error('Key \"' + key + '\" not present in SSO Token'),\n      { code: 'SSOTokenProviderFailure' }\n    );\n  }\n};\n\n/**\n * Calls callback function with or without error based on provided times in case\n * of unsuccessful refresh.\n *\n * @param currentTime [number] current time in milliseconds since ECMAScript epoch.\n * @param tokenExpireTime [number] token expire time in milliseconds since ECMAScript epoch.\n * @param callback [Function] Callback to call in case of error.\n */\nvar refreshUnsuccessful = function refreshUnsuccessful(\n  currentTime,\n  tokenExpireTime,\n  callback\n) {\n  if (tokenExpireTime > currentTime) {\n    // Cached token is still valid, return.\n    callback(null);\n  } else {\n    // Token invalid, throw error requesting user to sso login.\n    throw AWS.util.error(\n      new Error('SSO Token refresh failed. Please log in using \"aws sso login\"'),\n      { code: 'SSOTokenProviderFailure' }\n    );\n  }\n};\n\n/**\n * Represents token loaded from disk derived from the AWS SSO device grant authorication flow.\n *\n * ## Using SSO Token Provider\n *\n * This provider is checked by default in the Node.js environment in TokenProviderChain.\n * To use the SSO Token Provider, simply add your SSO Start URL and Region to the\n * ~/.aws/config file in the following format:\n *\n *     [default]\n *     sso_start_url = https://d-abc123.awsapps.com/start\n *     sso_region = us-east-1\n *\n * ## Using custom profiles\n *\n * The SDK supports loading token for separate profiles. This can be done in two ways:\n *\n * 1. Set the `AWS_PROFILE` environment variable in your process prior to loading the SDK.\n * 2. Directly load the AWS.SSOTokenProvider:\n *\n * ```javascript\n * var ssoTokenProvider = new AWS.SSOTokenProvider({profile: 'myprofile'});\n * ```\n *\n * @!macro nobrowser\n */\nAWS.SSOTokenProvider = AWS.util.inherit(AWS.Token, {\n  /**\n   * Expiry window of five minutes.\n   */\n  expiryWindow: 5 * 60,\n\n  /**\n   * Creates a new token object from cached access token.\n   *\n   * @param options [map] a set of options\n   * @option options profile [String] (AWS_PROFILE env var or 'default')\n   *   the name of the profile to load.\n   * @option options callback [Function] (err) Token is eagerly loaded\n   *   by the constructor. When the callback is called with no error, the\n   *   token has been loaded successfully.\n   */\n  constructor: function SSOTokenProvider(options) {\n    AWS.Token.call(this);\n\n    options = options || {};\n\n    this.expired = true;\n    this.profile = options.profile || process.env.AWS_PROFILE || AWS.util.defaultProfile;\n    this.get(options.callback || AWS.util.fn.noop);\n  },\n\n  /**\n   * Reads sso_start_url from provided profile, and reads token from\n   * ~/.aws/sso/cache/<sha1-of-utf8-encoded-value-from-sso_start_url>.json\n   *\n   * Throws an error if required fields token and expiresAt are missing.\n   * Throws an error if token has expired and metadata to perform refresh is\n   * not available.\n   * Attempts to refresh the token if it's within 5 minutes before expiry time.\n   *\n   * @api private\n   */\n  load: function load(callback) {\n    var self = this;\n    var profiles = iniLoader.loadFrom({ isConfig: true });\n    var profile = profiles[this.profile] || {};\n\n    if (Object.keys(profile).length === 0) {\n      throw AWS.util.error(\n        new Error('Profile \"' + this.profile + '\" not found'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    } else if (!profile['sso_session']) {\n      throw AWS.util.error(\n        new Error('Profile \"' + this.profile + '\" is missing required property \"sso_session\".'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    }\n\n    var ssoSessionName = profile['sso_session'];\n    var ssoSessions = iniLoader.loadSsoSessionsFrom();\n    var ssoSession = ssoSessions[ssoSessionName];\n\n    if (!ssoSession) {\n      throw AWS.util.error(\n        new Error('Sso session \"' + ssoSessionName + '\" not found'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    } else if (!ssoSession['sso_start_url']) {\n      throw AWS.util.error(\n        new Error('Sso session \"' + this.profile + '\" is missing required property \"sso_start_url\".'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    } else if (!ssoSession['sso_region']) {\n      throw AWS.util.error(\n        new Error('Sso session \"' + this.profile + '\" is missing required property \"sso_region\".'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    }\n\n    var hasher = crypto.createHash('sha1');\n    var fileName = hasher.update(ssoSessionName).digest('hex') + '.json';\n    var cachePath = path.join(iniLoader.getHomeDir(), '.aws', 'sso', 'cache', fileName);\n    var tokenFromCache = JSON.parse(fs.readFileSync(cachePath));\n\n    if (!tokenFromCache) {\n      throw AWS.util.error(\n        new Error('Cached token not found. Please log in using \"aws sso login\"'\n          + ' for profile \"' + this.profile + '\".'),\n        { code: 'SSOTokenProviderFailure' }\n      );\n    }\n\n    validateTokenKey(tokenFromCache, 'accessToken');\n    validateTokenKey(tokenFromCache, 'expiresAt');\n\n    var currentTime = AWS.util.date.getDate().getTime();\n    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);\n    var tokenExpireTime = new Date(tokenFromCache['expiresAt']);\n\n    if (tokenExpireTime > adjustedTime) {\n      // Token is valid and not expired.\n      self.token = tokenFromCache.accessToken;\n      self.expireTime = tokenExpireTime;\n      self.expired = false;\n      callback(null);\n      return;\n    }\n\n    // Skip new refresh, if last refresh was done within 30 seconds.\n    if (currentTime - lastRefreshAttemptTime < 30 * 1000) {\n      refreshUnsuccessful(currentTime, tokenExpireTime, callback);\n      return;\n    }\n\n    // Token is in expiry window, refresh from SSOOIDC.createToken() call.\n    validateTokenKey(tokenFromCache, 'clientId');\n    validateTokenKey(tokenFromCache, 'clientSecret');\n    validateTokenKey(tokenFromCache, 'refreshToken');\n\n    if (!self.service || self.service.config.region !== ssoSession.sso_region) {\n      self.service = new AWS.SSOOIDC({ region: ssoSession.sso_region });\n    }\n\n    var params = {\n      clientId: tokenFromCache.clientId,\n      clientSecret: tokenFromCache.clientSecret,\n      refreshToken: tokenFromCache.refreshToken,\n      grantType: 'refresh_token',\n    };\n\n    lastRefreshAttemptTime = AWS.util.date.getDate().getTime();\n    self.service.createToken(params, function(err, data) {\n      if (err || !data) {\n        refreshUnsuccessful(currentTime, tokenExpireTime, callback);\n      } else {\n        try {\n          validateTokenKey(data, 'accessToken');\n          validateTokenKey(data, 'expiresIn');\n          self.expired = false;\n          self.token = data.accessToken;\n          self.expireTime = new Date(Date.now() + data.expiresIn * 1000);\n          callback(null);\n\n          try {\n            // Write updated token data to disk.\n            tokenFromCache.accessToken = data.accessToken;\n            tokenFromCache.expiresAt = self.expireTime.toISOString();\n            tokenFromCache.refreshToken = data.refreshToken;\n            fs.writeFileSync(cachePath, JSON.stringify(tokenFromCache, null, 2));\n          } catch (error) {\n            // Swallow error if unable to write token to file.\n          }\n        } catch (error) {\n          refreshUnsuccessful(currentTime, tokenExpireTime, callback);\n        }\n      }\n    });\n  },\n\n  /**\n   * Loads the cached access token from disk.\n   *\n   * @callback callback function(err)\n   *   Called after the AWS SSO process has been executed. When this\n   *   callback is called with no error, it means that the token information\n   *   has been loaded into the object (as the `token` property).\n   *   @param err [Error] if an error occurred, this value will be filled.\n   * @see get\n   */\n  refresh: function refresh(callback) {\n    iniLoader.clearCachedFiles();\n    this.coalesceRefresh(callback || AWS.util.fn.callback);\n  },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Rva2VuL3Nzb190b2tlbl9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0IsYUFBYSxtQkFBTyxDQUFDLHNCQUFRO0FBQzdCLFNBQVMsbUJBQU8sQ0FBQyxjQUFJO0FBQ3JCLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTtBQUN6Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1Q0FBdUMsK0JBQStCO0FBQ3RFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3Rva2VuL3Nzb190b2tlbl9wcm92aWRlci5qcz9jNjEyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBBV1MgPSByZXF1aXJlKCcuLi9jb3JlJyk7XG52YXIgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG52YXIgZnMgPSByZXF1aXJlKCdmcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgaW5pTG9hZGVyID0gQVdTLnV0aWwuaW5pTG9hZGVyO1xuXG4vLyBUcmFja2luZyByZWZyZXNoIGF0dGVtcHQgdG8gZW5zdXJlIHJlZnJlc2ggaXMgbm90IGF0dGVtcHRlZCBtb3JlIHRoYW4gb25jZSBldmVyeSAzMCBzZWNvbmRzLlxudmFyIGxhc3RSZWZyZXNoQXR0ZW1wdFRpbWUgPSAwO1xuXG4vKipcbiAqIFRocm93cyBlcnJvciBpcyBrZXkgaXMgbm90IHByZXNlbnQgaW4gdG9rZW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB0b2tlbiBbT2JqZWN0XSBPYmplY3QgdG8gYmUgdmFsaWRhdGVkLlxuICogQHBhcmFtIGtleSBbU3RyaW5nXSBUaGUga2V5IHRvIGJlIHZhbGlkYXRlZCBvbiB0aGUgb2JqZWN0LlxuICovXG52YXIgdmFsaWRhdGVUb2tlbktleSA9IGZ1bmN0aW9uIHZhbGlkYXRlVG9rZW5LZXkodG9rZW4sIGtleSkge1xuICBpZiAoIXRva2VuW2tleV0pIHtcbiAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgIG5ldyBFcnJvcignS2V5IFwiJyArIGtleSArICdcIiBub3QgcHJlc2VudCBpbiBTU08gVG9rZW4nKSxcbiAgICAgIHsgY29kZTogJ1NTT1Rva2VuUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBDYWxscyBjYWxsYmFjayBmdW5jdGlvbiB3aXRoIG9yIHdpdGhvdXQgZXJyb3IgYmFzZWQgb24gcHJvdmlkZWQgdGltZXMgaW4gY2FzZVxuICogb2YgdW5zdWNjZXNzZnVsIHJlZnJlc2guXG4gKlxuICogQHBhcmFtIGN1cnJlbnRUaW1lIFtudW1iZXJdIGN1cnJlbnQgdGltZSBpbiBtaWxsaXNlY29uZHMgc2luY2UgRUNNQVNjcmlwdCBlcG9jaC5cbiAqIEBwYXJhbSB0b2tlbkV4cGlyZVRpbWUgW251bWJlcl0gdG9rZW4gZXhwaXJlIHRpbWUgaW4gbWlsbGlzZWNvbmRzIHNpbmNlIEVDTUFTY3JpcHQgZXBvY2guXG4gKiBAcGFyYW0gY2FsbGJhY2sgW0Z1bmN0aW9uXSBDYWxsYmFjayB0byBjYWxsIGluIGNhc2Ugb2YgZXJyb3IuXG4gKi9cbnZhciByZWZyZXNoVW5zdWNjZXNzZnVsID0gZnVuY3Rpb24gcmVmcmVzaFVuc3VjY2Vzc2Z1bChcbiAgY3VycmVudFRpbWUsXG4gIHRva2VuRXhwaXJlVGltZSxcbiAgY2FsbGJhY2tcbikge1xuICBpZiAodG9rZW5FeHBpcmVUaW1lID4gY3VycmVudFRpbWUpIHtcbiAgICAvLyBDYWNoZWQgdG9rZW4gaXMgc3RpbGwgdmFsaWQsIHJldHVybi5cbiAgICBjYWxsYmFjayhudWxsKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBUb2tlbiBpbnZhbGlkLCB0aHJvdyBlcnJvciByZXF1ZXN0aW5nIHVzZXIgdG8gc3NvIGxvZ2luLlxuICAgIHRocm93IEFXUy51dGlsLmVycm9yKFxuICAgICAgbmV3IEVycm9yKCdTU08gVG9rZW4gcmVmcmVzaCBmYWlsZWQuIFBsZWFzZSBsb2cgaW4gdXNpbmcgXCJhd3Mgc3NvIGxvZ2luXCInKSxcbiAgICAgIHsgY29kZTogJ1NTT1Rva2VuUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRva2VuIGxvYWRlZCBmcm9tIGRpc2sgZGVyaXZlZCBmcm9tIHRoZSBBV1MgU1NPIGRldmljZSBncmFudCBhdXRob3JpY2F0aW9uIGZsb3cuXG4gKlxuICogIyMgVXNpbmcgU1NPIFRva2VuIFByb3ZpZGVyXG4gKlxuICogVGhpcyBwcm92aWRlciBpcyBjaGVja2VkIGJ5IGRlZmF1bHQgaW4gdGhlIE5vZGUuanMgZW52aXJvbm1lbnQgaW4gVG9rZW5Qcm92aWRlckNoYWluLlxuICogVG8gdXNlIHRoZSBTU08gVG9rZW4gUHJvdmlkZXIsIHNpbXBseSBhZGQgeW91ciBTU08gU3RhcnQgVVJMIGFuZCBSZWdpb24gdG8gdGhlXG4gKiB+Ly5hd3MvY29uZmlnIGZpbGUgaW4gdGhlIGZvbGxvd2luZyBmb3JtYXQ6XG4gKlxuICogICAgIFtkZWZhdWx0XVxuICogICAgIHNzb19zdGFydF91cmwgPSBodHRwczovL2QtYWJjMTIzLmF3c2FwcHMuY29tL3N0YXJ0XG4gKiAgICAgc3NvX3JlZ2lvbiA9IHVzLWVhc3QtMVxuICpcbiAqICMjIFVzaW5nIGN1c3RvbSBwcm9maWxlc1xuICpcbiAqIFRoZSBTREsgc3VwcG9ydHMgbG9hZGluZyB0b2tlbiBmb3Igc2VwYXJhdGUgcHJvZmlsZXMuIFRoaXMgY2FuIGJlIGRvbmUgaW4gdHdvIHdheXM6XG4gKlxuICogMS4gU2V0IHRoZSBgQVdTX1BST0ZJTEVgIGVudmlyb25tZW50IHZhcmlhYmxlIGluIHlvdXIgcHJvY2VzcyBwcmlvciB0byBsb2FkaW5nIHRoZSBTREsuXG4gKiAyLiBEaXJlY3RseSBsb2FkIHRoZSBBV1MuU1NPVG9rZW5Qcm92aWRlcjpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiB2YXIgc3NvVG9rZW5Qcm92aWRlciA9IG5ldyBBV1MuU1NPVG9rZW5Qcm92aWRlcih7cHJvZmlsZTogJ215cHJvZmlsZSd9KTtcbiAqIGBgYFxuICpcbiAqIEAhbWFjcm8gbm9icm93c2VyXG4gKi9cbkFXUy5TU09Ub2tlblByb3ZpZGVyID0gQVdTLnV0aWwuaW5oZXJpdChBV1MuVG9rZW4sIHtcbiAgLyoqXG4gICAqIEV4cGlyeSB3aW5kb3cgb2YgZml2ZSBtaW51dGVzLlxuICAgKi9cbiAgZXhwaXJ5V2luZG93OiA1ICogNjAsXG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgdG9rZW4gb2JqZWN0IGZyb20gY2FjaGVkIGFjY2VzcyB0b2tlbi5cbiAgICpcbiAgICogQHBhcmFtIG9wdGlvbnMgW21hcF0gYSBzZXQgb2Ygb3B0aW9uc1xuICAgKiBAb3B0aW9uIG9wdGlvbnMgcHJvZmlsZSBbU3RyaW5nXSAoQVdTX1BST0ZJTEUgZW52IHZhciBvciAnZGVmYXVsdCcpXG4gICAqICAgdGhlIG5hbWUgb2YgdGhlIHByb2ZpbGUgdG8gbG9hZC5cbiAgICogQG9wdGlvbiBvcHRpb25zIGNhbGxiYWNrIFtGdW5jdGlvbl0gKGVycikgVG9rZW4gaXMgZWFnZXJseSBsb2FkZWRcbiAgICogICBieSB0aGUgY29uc3RydWN0b3IuIFdoZW4gdGhlIGNhbGxiYWNrIGlzIGNhbGxlZCB3aXRoIG5vIGVycm9yLCB0aGVcbiAgICogICB0b2tlbiBoYXMgYmVlbiBsb2FkZWQgc3VjY2Vzc2Z1bGx5LlxuICAgKi9cbiAgY29uc3RydWN0b3I6IGZ1bmN0aW9uIFNTT1Rva2VuUHJvdmlkZXIob3B0aW9ucykge1xuICAgIEFXUy5Ub2tlbi5jYWxsKHRoaXMpO1xuXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgICB0aGlzLmV4cGlyZWQgPSB0cnVlO1xuICAgIHRoaXMucHJvZmlsZSA9IG9wdGlvbnMucHJvZmlsZSB8fCBwcm9jZXNzLmVudi5BV1NfUFJPRklMRSB8fCBBV1MudXRpbC5kZWZhdWx0UHJvZmlsZTtcbiAgICB0aGlzLmdldChvcHRpb25zLmNhbGxiYWNrIHx8IEFXUy51dGlsLmZuLm5vb3ApO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZWFkcyBzc29fc3RhcnRfdXJsIGZyb20gcHJvdmlkZWQgcHJvZmlsZSwgYW5kIHJlYWRzIHRva2VuIGZyb21cbiAgICogfi8uYXdzL3Nzby9jYWNoZS88c2hhMS1vZi11dGY4LWVuY29kZWQtdmFsdWUtZnJvbS1zc29fc3RhcnRfdXJsPi5qc29uXG4gICAqXG4gICAqIFRocm93cyBhbiBlcnJvciBpZiByZXF1aXJlZCBmaWVsZHMgdG9rZW4gYW5kIGV4cGlyZXNBdCBhcmUgbWlzc2luZy5cbiAgICogVGhyb3dzIGFuIGVycm9yIGlmIHRva2VuIGhhcyBleHBpcmVkIGFuZCBtZXRhZGF0YSB0byBwZXJmb3JtIHJlZnJlc2ggaXNcbiAgICogbm90IGF2YWlsYWJsZS5cbiAgICogQXR0ZW1wdHMgdG8gcmVmcmVzaCB0aGUgdG9rZW4gaWYgaXQncyB3aXRoaW4gNSBtaW51dGVzIGJlZm9yZSBleHBpcnkgdGltZS5cbiAgICpcbiAgICogQGFwaSBwcml2YXRlXG4gICAqL1xuICBsb2FkOiBmdW5jdGlvbiBsb2FkKGNhbGxiYWNrKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBwcm9maWxlcyA9IGluaUxvYWRlci5sb2FkRnJvbSh7IGlzQ29uZmlnOiB0cnVlIH0pO1xuICAgIHZhciBwcm9maWxlID0gcHJvZmlsZXNbdGhpcy5wcm9maWxlXSB8fCB7fTtcblxuICAgIGlmIChPYmplY3Qua2V5cyhwcm9maWxlKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IEFXUy51dGlsLmVycm9yKFxuICAgICAgICBuZXcgRXJyb3IoJ1Byb2ZpbGUgXCInICsgdGhpcy5wcm9maWxlICsgJ1wiIG5vdCBmb3VuZCcpLFxuICAgICAgICB7IGNvZGU6ICdTU09Ub2tlblByb3ZpZGVyRmFpbHVyZScgfVxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKCFwcm9maWxlWydzc29fc2Vzc2lvbiddKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdQcm9maWxlIFwiJyArIHRoaXMucHJvZmlsZSArICdcIiBpcyBtaXNzaW5nIHJlcXVpcmVkIHByb3BlcnR5IFwic3NvX3Nlc3Npb25cIi4nKSxcbiAgICAgICAgeyBjb2RlOiAnU1NPVG9rZW5Qcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgdmFyIHNzb1Nlc3Npb25OYW1lID0gcHJvZmlsZVsnc3NvX3Nlc3Npb24nXTtcbiAgICB2YXIgc3NvU2Vzc2lvbnMgPSBpbmlMb2FkZXIubG9hZFNzb1Nlc3Npb25zRnJvbSgpO1xuICAgIHZhciBzc29TZXNzaW9uID0gc3NvU2Vzc2lvbnNbc3NvU2Vzc2lvbk5hbWVdO1xuXG4gICAgaWYgKCFzc29TZXNzaW9uKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdTc28gc2Vzc2lvbiBcIicgKyBzc29TZXNzaW9uTmFtZSArICdcIiBub3QgZm91bmQnKSxcbiAgICAgICAgeyBjb2RlOiAnU1NPVG9rZW5Qcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICghc3NvU2Vzc2lvblsnc3NvX3N0YXJ0X3VybCddKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdTc28gc2Vzc2lvbiBcIicgKyB0aGlzLnByb2ZpbGUgKyAnXCIgaXMgbWlzc2luZyByZXF1aXJlZCBwcm9wZXJ0eSBcInNzb19zdGFydF91cmxcIi4nKSxcbiAgICAgICAgeyBjb2RlOiAnU1NPVG9rZW5Qcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICghc3NvU2Vzc2lvblsnc3NvX3JlZ2lvbiddKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdTc28gc2Vzc2lvbiBcIicgKyB0aGlzLnByb2ZpbGUgKyAnXCIgaXMgbWlzc2luZyByZXF1aXJlZCBwcm9wZXJ0eSBcInNzb19yZWdpb25cIi4nKSxcbiAgICAgICAgeyBjb2RlOiAnU1NPVG9rZW5Qcm92aWRlckZhaWx1cmUnIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgdmFyIGhhc2hlciA9IGNyeXB0by5jcmVhdGVIYXNoKCdzaGExJyk7XG4gICAgdmFyIGZpbGVOYW1lID0gaGFzaGVyLnVwZGF0ZShzc29TZXNzaW9uTmFtZSkuZGlnZXN0KCdoZXgnKSArICcuanNvbic7XG4gICAgdmFyIGNhY2hlUGF0aCA9IHBhdGguam9pbihpbmlMb2FkZXIuZ2V0SG9tZURpcigpLCAnLmF3cycsICdzc28nLCAnY2FjaGUnLCBmaWxlTmFtZSk7XG4gICAgdmFyIHRva2VuRnJvbUNhY2hlID0gSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoY2FjaGVQYXRoKSk7XG5cbiAgICBpZiAoIXRva2VuRnJvbUNhY2hlKSB7XG4gICAgICB0aHJvdyBBV1MudXRpbC5lcnJvcihcbiAgICAgICAgbmV3IEVycm9yKCdDYWNoZWQgdG9rZW4gbm90IGZvdW5kLiBQbGVhc2UgbG9nIGluIHVzaW5nIFwiYXdzIHNzbyBsb2dpblwiJ1xuICAgICAgICAgICsgJyBmb3IgcHJvZmlsZSBcIicgKyB0aGlzLnByb2ZpbGUgKyAnXCIuJyksXG4gICAgICAgIHsgY29kZTogJ1NTT1Rva2VuUHJvdmlkZXJGYWlsdXJlJyB9XG4gICAgICApO1xuICAgIH1cblxuICAgIHZhbGlkYXRlVG9rZW5LZXkodG9rZW5Gcm9tQ2FjaGUsICdhY2Nlc3NUb2tlbicpO1xuICAgIHZhbGlkYXRlVG9rZW5LZXkodG9rZW5Gcm9tQ2FjaGUsICdleHBpcmVzQXQnKTtcblxuICAgIHZhciBjdXJyZW50VGltZSA9IEFXUy51dGlsLmRhdGUuZ2V0RGF0ZSgpLmdldFRpbWUoKTtcbiAgICB2YXIgYWRqdXN0ZWRUaW1lID0gbmV3IERhdGUoY3VycmVudFRpbWUgKyB0aGlzLmV4cGlyeVdpbmRvdyAqIDEwMDApO1xuICAgIHZhciB0b2tlbkV4cGlyZVRpbWUgPSBuZXcgRGF0ZSh0b2tlbkZyb21DYWNoZVsnZXhwaXJlc0F0J10pO1xuXG4gICAgaWYgKHRva2VuRXhwaXJlVGltZSA+IGFkanVzdGVkVGltZSkge1xuICAgICAgLy8gVG9rZW4gaXMgdmFsaWQgYW5kIG5vdCBleHBpcmVkLlxuICAgICAgc2VsZi50b2tlbiA9IHRva2VuRnJvbUNhY2hlLmFjY2Vzc1Rva2VuO1xuICAgICAgc2VsZi5leHBpcmVUaW1lID0gdG9rZW5FeHBpcmVUaW1lO1xuICAgICAgc2VsZi5leHBpcmVkID0gZmFsc2U7XG4gICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTa2lwIG5ldyByZWZyZXNoLCBpZiBsYXN0IHJlZnJlc2ggd2FzIGRvbmUgd2l0aGluIDMwIHNlY29uZHMuXG4gICAgaWYgKGN1cnJlbnRUaW1lIC0gbGFzdFJlZnJlc2hBdHRlbXB0VGltZSA8IDMwICogMTAwMCkge1xuICAgICAgcmVmcmVzaFVuc3VjY2Vzc2Z1bChjdXJyZW50VGltZSwgdG9rZW5FeHBpcmVUaW1lLCBjYWxsYmFjayk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVG9rZW4gaXMgaW4gZXhwaXJ5IHdpbmRvdywgcmVmcmVzaCBmcm9tIFNTT09JREMuY3JlYXRlVG9rZW4oKSBjYWxsLlxuICAgIHZhbGlkYXRlVG9rZW5LZXkodG9rZW5Gcm9tQ2FjaGUsICdjbGllbnRJZCcpO1xuICAgIHZhbGlkYXRlVG9rZW5LZXkodG9rZW5Gcm9tQ2FjaGUsICdjbGllbnRTZWNyZXQnKTtcbiAgICB2YWxpZGF0ZVRva2VuS2V5KHRva2VuRnJvbUNhY2hlLCAncmVmcmVzaFRva2VuJyk7XG5cbiAgICBpZiAoIXNlbGYuc2VydmljZSB8fCBzZWxmLnNlcnZpY2UuY29uZmlnLnJlZ2lvbiAhPT0gc3NvU2Vzc2lvbi5zc29fcmVnaW9uKSB7XG4gICAgICBzZWxmLnNlcnZpY2UgPSBuZXcgQVdTLlNTT09JREMoeyByZWdpb246IHNzb1Nlc3Npb24uc3NvX3JlZ2lvbiB9KTtcbiAgICB9XG5cbiAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgY2xpZW50SWQ6IHRva2VuRnJvbUNhY2hlLmNsaWVudElkLFxuICAgICAgY2xpZW50U2VjcmV0OiB0b2tlbkZyb21DYWNoZS5jbGllbnRTZWNyZXQsXG4gICAgICByZWZyZXNoVG9rZW46IHRva2VuRnJvbUNhY2hlLnJlZnJlc2hUb2tlbixcbiAgICAgIGdyYW50VHlwZTogJ3JlZnJlc2hfdG9rZW4nLFxuICAgIH07XG5cbiAgICBsYXN0UmVmcmVzaEF0dGVtcHRUaW1lID0gQVdTLnV0aWwuZGF0ZS5nZXREYXRlKCkuZ2V0VGltZSgpO1xuICAgIHNlbGYuc2VydmljZS5jcmVhdGVUb2tlbihwYXJhbXMsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgaWYgKGVyciB8fCAhZGF0YSkge1xuICAgICAgICByZWZyZXNoVW5zdWNjZXNzZnVsKGN1cnJlbnRUaW1lLCB0b2tlbkV4cGlyZVRpbWUsIGNhbGxiYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdmFsaWRhdGVUb2tlbktleShkYXRhLCAnYWNjZXNzVG9rZW4nKTtcbiAgICAgICAgICB2YWxpZGF0ZVRva2VuS2V5KGRhdGEsICdleHBpcmVzSW4nKTtcbiAgICAgICAgICBzZWxmLmV4cGlyZWQgPSBmYWxzZTtcbiAgICAgICAgICBzZWxmLnRva2VuID0gZGF0YS5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICBzZWxmLmV4cGlyZVRpbWUgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgZGF0YS5leHBpcmVzSW4gKiAxMDAwKTtcbiAgICAgICAgICBjYWxsYmFjayhudWxsKTtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXcml0ZSB1cGRhdGVkIHRva2VuIGRhdGEgdG8gZGlzay5cbiAgICAgICAgICAgIHRva2VuRnJvbUNhY2hlLmFjY2Vzc1Rva2VuID0gZGF0YS5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAgIHRva2VuRnJvbUNhY2hlLmV4cGlyZXNBdCA9IHNlbGYuZXhwaXJlVGltZS50b0lTT1N0cmluZygpO1xuICAgICAgICAgICAgdG9rZW5Gcm9tQ2FjaGUucmVmcmVzaFRva2VuID0gZGF0YS5yZWZyZXNoVG9rZW47XG4gICAgICAgICAgICBmcy53cml0ZUZpbGVTeW5jKGNhY2hlUGF0aCwgSlNPTi5zdHJpbmdpZnkodG9rZW5Gcm9tQ2FjaGUsIG51bGwsIDIpKTtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gU3dhbGxvdyBlcnJvciBpZiB1bmFibGUgdG8gd3JpdGUgdG9rZW4gdG8gZmlsZS5cbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgcmVmcmVzaFVuc3VjY2Vzc2Z1bChjdXJyZW50VGltZSwgdG9rZW5FeHBpcmVUaW1lLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogTG9hZHMgdGhlIGNhY2hlZCBhY2Nlc3MgdG9rZW4gZnJvbSBkaXNrLlxuICAgKlxuICAgKiBAY2FsbGJhY2sgY2FsbGJhY2sgZnVuY3Rpb24oZXJyKVxuICAgKiAgIENhbGxlZCBhZnRlciB0aGUgQVdTIFNTTyBwcm9jZXNzIGhhcyBiZWVuIGV4ZWN1dGVkLiBXaGVuIHRoaXNcbiAgICogICBjYWxsYmFjayBpcyBjYWxsZWQgd2l0aCBubyBlcnJvciwgaXQgbWVhbnMgdGhhdCB0aGUgdG9rZW4gaW5mb3JtYXRpb25cbiAgICogICBoYXMgYmVlbiBsb2FkZWQgaW50byB0aGUgb2JqZWN0IChhcyB0aGUgYHRva2VuYCBwcm9wZXJ0eSkuXG4gICAqICAgQHBhcmFtIGVyciBbRXJyb3JdIGlmIGFuIGVycm9yIG9jY3VycmVkLCB0aGlzIHZhbHVlIHdpbGwgYmUgZmlsbGVkLlxuICAgKiBAc2VlIGdldFxuICAgKi9cbiAgcmVmcmVzaDogZnVuY3Rpb24gcmVmcmVzaChjYWxsYmFjaykge1xuICAgIGluaUxvYWRlci5jbGVhckNhY2hlZEZpbGVzKCk7XG4gICAgdGhpcy5jb2FsZXNjZVJlZnJlc2goY2FsbGJhY2sgfHwgQVdTLnV0aWwuZm4uY2FsbGJhY2spO1xuICB9LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/token/sso_token_provider.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/token/token_provider_chain.js":
/*!********************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/token/token_provider_chain.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n\n/**\n * Creates a token provider chain that searches for token in a list of\n * token providers specified by the {providers} property.\n *\n * By default, the chain will use the {defaultProviders} to resolve token.\n *\n * ## Setting Providers\n *\n * Each provider in the {providers} list should be a function that returns\n * a {AWS.Token} object, or a hardcoded token object. The function\n * form allows for delayed execution of the Token construction.\n *\n * ## Resolving Token from a Chain\n *\n * Call {resolve} to return the first valid token object that can be\n * loaded by the provider chain.\n *\n * For example, to resolve a chain with a custom provider that checks a file\n * on disk after the set of {defaultProviders}:\n *\n * ```javascript\n * var diskProvider = new FileTokenProvider('./token.json');\n * var chain = new AWS.TokenProviderChain();\n * chain.providers.push(diskProvider);\n * chain.resolve();\n * ```\n *\n * The above code will return the `diskProvider` object if the\n * file contains token and the `defaultProviders` do not contain\n * any token.\n *\n * @!attribute providers\n *   @return [Array<AWS.Token, Function>]\n *     a list of token objects or functions that return token\n *     objects. If the provider is a function, the function will be\n *     executed lazily when the provider needs to be checked for valid\n *     token. By default, this object will be set to the {defaultProviders}.\n *   @see defaultProviders\n */\nAWS.TokenProviderChain = AWS.util.inherit(AWS.Token, {\n\n  /**\n   * Creates a new TokenProviderChain with a default set of providers\n   * specified by {defaultProviders}.\n   */\n  constructor: function TokenProviderChain(providers) {\n    if (providers) {\n      this.providers = providers;\n    } else {\n      this.providers = AWS.TokenProviderChain.defaultProviders.slice(0);\n    }\n    this.resolveCallbacks = [];\n  },\n\n  /**\n   * @!method  resolvePromise()\n   *   Returns a 'thenable' promise.\n   *   Resolves the provider chain by searching for the first token in {providers}.\n   *\n   *   Two callbacks can be provided to the `then` method on the returned promise.\n   *   The first callback will be called if the promise is fulfilled, and the second\n   *   callback will be called if the promise is rejected.\n   *   @callback fulfilledCallback function(token)\n   *     Called if the promise is fulfilled and the provider resolves the chain\n   *     to a token object\n   *     @param token [AWS.Token] the token object resolved by the provider chain.\n   *   @callback rejectedCallback function(error)\n   *     Called if the promise is rejected.\n   *     @param err [Error] the error object returned if no token is found.\n   *   @return [Promise] A promise that represents the state of the `resolve` method call.\n   *   @example Calling the `resolvePromise` method.\n   *     var promise = chain.resolvePromise();\n   *     promise.then(function(token) { ... }, function(err) { ... });\n   */\n\n  /**\n   * Resolves the provider chain by searching for the first token in {providers}.\n   *\n   * @callback callback function(err, token)\n   *   Called when the provider resolves the chain to a token object\n   *   or null if no token can be found.\n   *\n   *   @param err [Error] the error object returned if no token is found.\n   *   @param token [AWS.Token] the token object resolved by the provider chain.\n   * @return [AWS.TokenProviderChain] the provider, for chaining.\n   */\n  resolve: function resolve(callback) {\n    var self = this;\n    if (self.providers.length === 0) {\n      callback(new Error('No providers'));\n      return self;\n    }\n\n    if (self.resolveCallbacks.push(callback) === 1) {\n      var index = 0;\n      var providers = self.providers.slice(0);\n\n      function resolveNext(err, token) {\n        if ((!err && token) || index === providers.length) {\n          AWS.util.arrayEach(self.resolveCallbacks, function (callback) {\n            callback(err, token);\n          });\n          self.resolveCallbacks.length = 0;\n          return;\n        }\n\n        var provider = providers[index++];\n        if (typeof provider === 'function') {\n          token = provider.call();\n        } else {\n          token = provider;\n        }\n\n        if (token.get) {\n          token.get(function (getErr) {\n            resolveNext(getErr, getErr ? null : token);\n          });\n        } else {\n          resolveNext(null, token);\n        }\n      }\n\n      resolveNext();\n    }\n\n    return self;\n  }\n});\n\n/**\n * The default set of providers used by a vanilla TokenProviderChain.\n *\n * In the browser:\n *\n * ```javascript\n * AWS.TokenProviderChain.defaultProviders = []\n * ```\n *\n * In Node.js:\n *\n * ```javascript\n * AWS.TokenProviderChain.defaultProviders = [\n *   function () { return new AWS.SSOTokenProvider(); },\n * ]\n * ```\n */\nAWS.TokenProviderChain.defaultProviders = [];\n\n/**\n * @api private\n */\nAWS.TokenProviderChain.addPromisesToClass = function addPromisesToClass(PromiseDependency) {\n  this.prototype.resolvePromise = AWS.util.promisifyMethod('resolve', PromiseDependency);\n};\n\n/**\n * @api private\n */\nAWS.TokenProviderChain.deletePromisesFromClass = function deletePromisesFromClass() {\n  delete this.prototype.resolvePromise;\n};\n\nAWS.util.addPromises(AWS.TokenProviderChain);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/token/token_provider_chain.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/util.js":
/*!**********************************************!*\
  !*** ../../node_modules/aws-sdk/lib/util.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint guard-for-in:0 */\nvar AWS;\n\n/**\n * A set of utility methods for use with the AWS SDK.\n *\n * @!attribute abort\n *   Return this value from an iterator function {each} or {arrayEach}\n *   to break out of the iteration.\n *   @example Breaking out of an iterator function\n *     AWS.util.each({a: 1, b: 2, c: 3}, function(key, value) {\n *       if (key == 'b') return AWS.util.abort;\n *     });\n *   @see each\n *   @see arrayEach\n * @api private\n */\nvar util = {\n  environment: 'nodejs',\n  engine: function engine() {\n    if (util.isBrowser() && typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      var engine = process.platform + '/' + process.version;\n      if (process.env.AWS_EXECUTION_ENV) {\n        engine += ' exec-env/' + process.env.AWS_EXECUTION_ENV;\n      }\n      return engine;\n    }\n  },\n\n  userAgent: function userAgent() {\n    var name = util.environment;\n    var agent = 'aws-sdk-' + name + '/' + (__webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\").VERSION);\n    if (name === 'nodejs') agent += ' ' + util.engine();\n    return agent;\n  },\n\n  uriEscape: function uriEscape(string) {\n    var output = encodeURIComponent(string);\n    output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n\n    // AWS percent-encodes some extra non-standard characters in a URI\n    output = output.replace(/[*]/g, function(ch) {\n      return '%' + ch.charCodeAt(0).toString(16).toUpperCase();\n    });\n\n    return output;\n  },\n\n  uriEscapePath: function uriEscapePath(string) {\n    var parts = [];\n    util.arrayEach(string.split('/'), function (part) {\n      parts.push(util.uriEscape(part));\n    });\n    return parts.join('/');\n  },\n\n  urlParse: function urlParse(url) {\n    return util.url.parse(url);\n  },\n\n  urlFormat: function urlFormat(url) {\n    return util.url.format(url);\n  },\n\n  queryStringParse: function queryStringParse(qs) {\n    return util.querystring.parse(qs);\n  },\n\n  queryParamsToString: function queryParamsToString(params) {\n    var items = [];\n    var escape = util.uriEscape;\n    var sortedKeys = Object.keys(params).sort();\n\n    util.arrayEach(sortedKeys, function(name) {\n      var value = params[name];\n      var ename = escape(name);\n      var result = ename + '=';\n      if (Array.isArray(value)) {\n        var vals = [];\n        util.arrayEach(value, function(item) { vals.push(escape(item)); });\n        result = ename + '=' + vals.sort().join('&' + ename + '=');\n      } else if (value !== undefined && value !== null) {\n        result = ename + '=' + escape(value);\n      }\n      items.push(result);\n    });\n\n    return items.join('&');\n  },\n\n  readFileSync: function readFileSync(path) {\n    if (util.isBrowser()) return null;\n    return (__webpack_require__(/*! fs */ \"fs\").readFileSync)(path, 'utf-8');\n  },\n\n  base64: {\n    encode: function encode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 encode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      var buf = util.buffer.toBuffer(string);\n      return buf.toString('base64');\n    },\n\n    decode: function decode64(string) {\n      if (typeof string === 'number') {\n        throw util.error(new Error('Cannot base64 decode number ' + string));\n      }\n      if (string === null || typeof string === 'undefined') {\n        return string;\n      }\n      return util.buffer.toBuffer(string, 'base64');\n    }\n\n  },\n\n  buffer: {\n    /**\n     * Buffer constructor for Node buffer and buffer pollyfill\n     */\n    toBuffer: function(data, encoding) {\n      return (typeof util.Buffer.from === 'function' && util.Buffer.from !== Uint8Array.from) ?\n        util.Buffer.from(data, encoding) : new util.Buffer(data, encoding);\n    },\n\n    alloc: function(size, fill, encoding) {\n      if (typeof size !== 'number') {\n        throw new Error('size passed to alloc must be a number.');\n      }\n      if (typeof util.Buffer.alloc === 'function') {\n        return util.Buffer.alloc(size, fill, encoding);\n      } else {\n        var buf = new util.Buffer(size);\n        if (fill !== undefined && typeof buf.fill === 'function') {\n          buf.fill(fill, undefined, undefined, encoding);\n        }\n        return buf;\n      }\n    },\n\n    toStream: function toStream(buffer) {\n      if (!util.Buffer.isBuffer(buffer)) buffer =  util.buffer.toBuffer(buffer);\n\n      var readable = new (util.stream.Readable)();\n      var pos = 0;\n      readable._read = function(size) {\n        if (pos >= buffer.length) return readable.push(null);\n\n        var end = pos + size;\n        if (end > buffer.length) end = buffer.length;\n        readable.push(buffer.slice(pos, end));\n        pos = end;\n      };\n\n      return readable;\n    },\n\n    /**\n     * Concatenates a list of Buffer objects.\n     */\n    concat: function(buffers) {\n      var length = 0,\n          offset = 0,\n          buffer = null, i;\n\n      for (i = 0; i < buffers.length; i++) {\n        length += buffers[i].length;\n      }\n\n      buffer = util.buffer.alloc(length);\n\n      for (i = 0; i < buffers.length; i++) {\n        buffers[i].copy(buffer, offset);\n        offset += buffers[i].length;\n      }\n\n      return buffer;\n    }\n  },\n\n  string: {\n    byteLength: function byteLength(string) {\n      if (string === null || string === undefined) return 0;\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n\n      if (typeof string.byteLength === 'number') {\n        return string.byteLength;\n      } else if (typeof string.length === 'number') {\n        return string.length;\n      } else if (typeof string.size === 'number') {\n        return string.size;\n      } else if (typeof string.path === 'string') {\n        return (__webpack_require__(/*! fs */ \"fs\").lstatSync)(string.path).size;\n      } else {\n        throw util.error(new Error('Cannot determine length of ' + string),\n          { object: string });\n      }\n    },\n\n    upperFirst: function upperFirst(string) {\n      return string[0].toUpperCase() + string.substr(1);\n    },\n\n    lowerFirst: function lowerFirst(string) {\n      return string[0].toLowerCase() + string.substr(1);\n    }\n  },\n\n  ini: {\n    parse: function string(ini) {\n      var currentSection, map = {};\n      util.arrayEach(ini.split(/\\r?\\n/), function(line) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim(); // remove comments and trim\n        var isSection = line[0] === '[' && line[line.length - 1] === ']';\n        if (isSection) {\n          currentSection = line.substring(1, line.length - 1);\n          if (currentSection === '__proto__' || currentSection.split(/\\s/)[1] === '__proto__') {\n            throw util.error(\n              new Error('Cannot load profile name \\'' + currentSection + '\\' from shared ini file.')\n            );\n          }\n        } else if (currentSection) {\n          var indexOfEqualsSign = line.indexOf('=');\n          var start = 0;\n          var end = line.length - 1;\n          var isAssignment =\n            indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n\n          if (isAssignment) {\n            var name = line.substring(0, indexOfEqualsSign).trim();\n            var value = line.substring(indexOfEqualsSign + 1).trim();\n\n            map[currentSection] = map[currentSection] || {};\n            map[currentSection][name] = value;\n          }\n        }\n      });\n\n      return map;\n    }\n  },\n\n  fn: {\n    noop: function() {},\n    callback: function (err) { if (err) throw err; },\n\n    /**\n     * Turn a synchronous function into as \"async\" function by making it call\n     * a callback. The underlying function is called with all but the last argument,\n     * which is treated as the callback. The callback is passed passed a first argument\n     * of null on success to mimick standard node callbacks.\n     */\n    makeAsync: function makeAsync(fn, expectedArgs) {\n      if (expectedArgs && expectedArgs <= fn.length) {\n        return fn;\n      }\n\n      return function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        var callback = args.pop();\n        var result = fn.apply(null, args);\n        callback(result);\n      };\n    }\n  },\n\n  /**\n   * Date and time utility functions.\n   */\n  date: {\n\n    /**\n     * @return [Date] the current JavaScript date object. Since all\n     *   AWS services rely on this date object, you can override\n     *   this function to provide a special time value to AWS service\n     *   requests.\n     */\n    getDate: function getDate() {\n      if (!AWS) AWS = __webpack_require__(/*! ./core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\n      if (AWS.config.systemClockOffset) { // use offset when non-zero\n        return new Date(new Date().getTime() + AWS.config.systemClockOffset);\n      } else {\n        return new Date();\n      }\n    },\n\n    /**\n     * @return [String] the date in ISO-8601 format\n     */\n    iso8601: function iso8601(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z');\n    },\n\n    /**\n     * @return [String] the date in RFC 822 format\n     */\n    rfc822: function rfc822(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.toUTCString();\n    },\n\n    /**\n     * @return [Integer] the UNIX timestamp value for the current time\n     */\n    unixTimestamp: function unixTimestamp(date) {\n      if (date === undefined) { date = util.date.getDate(); }\n      return date.getTime() / 1000;\n    },\n\n    /**\n     * @param [String,number,Date] date\n     * @return [Date]\n     */\n    from: function format(date) {\n      if (typeof date === 'number') {\n        return new Date(date * 1000); // unix timestamp\n      } else {\n        return new Date(date);\n      }\n    },\n\n    /**\n     * Given a Date or date-like value, this function formats the\n     * date into a string of the requested value.\n     * @param [String,number,Date] date\n     * @param [String] formatter Valid formats are:\n     #   * 'iso8601'\n     #   * 'rfc822'\n     #   * 'unixTimestamp'\n     * @return [String]\n     */\n    format: function format(date, formatter) {\n      if (!formatter) formatter = 'iso8601';\n      return util.date[formatter](util.date.from(date));\n    },\n\n    parseTimestamp: function parseTimestamp(value) {\n      if (typeof value === 'number') { // unix timestamp (number)\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d+$/)) { // unix timestamp\n        return new Date(value * 1000);\n      } else if (value.match(/^\\d{4}/)) { // iso8601\n        return new Date(value);\n      } else if (value.match(/^\\w{3},/)) { // rfc822\n        return new Date(value);\n      } else {\n        throw util.error(\n          new Error('unhandled timestamp format: ' + value),\n          {code: 'TimestampParserError'});\n      }\n    }\n\n  },\n\n  crypto: {\n    crc32Table: [\n     0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,\n     0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,\n     0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,\n     0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n     0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,\n     0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\n     0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,\n     0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,\n     0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,\n     0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,\n     0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n     0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,\n     0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,\n     0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,\n     0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,\n     0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\n     0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,\n     0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n     0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,\n     0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,\n     0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,\n     0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,\n     0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,\n     0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,\n     0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n     0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,\n     0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\n     0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,\n     0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,\n     0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,\n     0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,\n     0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n     0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,\n     0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,\n     0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,\n     0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,\n     0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\n     0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,\n     0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n     0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,\n     0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,\n     0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,\n     0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,\n     0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,\n     0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,\n     0x2D02EF8D],\n\n    crc32: function crc32(data) {\n      var tbl = util.crypto.crc32Table;\n      var crc = 0 ^ -1;\n\n      if (typeof data === 'string') {\n        data = util.buffer.toBuffer(data);\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        var code = data.readUInt8(i);\n        crc = (crc >>> 8) ^ tbl[(crc ^ code) & 0xFF];\n      }\n      return (crc ^ -1) >>> 0;\n    },\n\n    hmac: function hmac(key, string, digest, fn) {\n      if (!digest) digest = 'binary';\n      if (digest === 'buffer') { digest = undefined; }\n      if (!fn) fn = 'sha256';\n      if (typeof string === 'string') string = util.buffer.toBuffer(string);\n      return util.crypto.lib.createHmac(fn, key).update(string).digest(digest);\n    },\n\n    md5: function md5(data, digest, callback) {\n      return util.crypto.hash('md5', data, digest, callback);\n    },\n\n    sha256: function sha256(data, digest, callback) {\n      return util.crypto.hash('sha256', data, digest, callback);\n    },\n\n    hash: function(algorithm, data, digest, callback) {\n      var hash = util.crypto.createHash(algorithm);\n      if (!digest) { digest = 'binary'; }\n      if (digest === 'buffer') { digest = undefined; }\n      if (typeof data === 'string') data = util.buffer.toBuffer(data);\n      var sliceFn = util.arraySliceFn(data);\n      var isBuffer = util.Buffer.isBuffer(data);\n      //Identifying objects with an ArrayBuffer as buffers\n      if (util.isBrowser() && typeof ArrayBuffer !== 'undefined' && data && data.buffer instanceof ArrayBuffer) isBuffer = true;\n\n      if (callback && typeof data === 'object' &&\n          typeof data.on === 'function' && !isBuffer) {\n        data.on('data', function(chunk) { hash.update(chunk); });\n        data.on('error', function(err) { callback(err); });\n        data.on('end', function() { callback(null, hash.digest(digest)); });\n      } else if (callback && sliceFn && !isBuffer &&\n                 typeof FileReader !== 'undefined') {\n        // this might be a File/Blob\n        var index = 0, size = 1024 * 512;\n        var reader = new FileReader();\n        reader.onerror = function() {\n          callback(new Error('Failed to read data.'));\n        };\n        reader.onload = function() {\n          var buf = new util.Buffer(new Uint8Array(reader.result));\n          hash.update(buf);\n          index += buf.length;\n          reader._continueReading();\n        };\n        reader._continueReading = function() {\n          if (index >= data.size) {\n            callback(null, hash.digest(digest));\n            return;\n          }\n\n          var back = index + size;\n          if (back > data.size) back = data.size;\n          reader.readAsArrayBuffer(sliceFn.call(data, index, back));\n        };\n\n        reader._continueReading();\n      } else {\n        if (util.isBrowser() && typeof data === 'object' && !isBuffer) {\n          data = new util.Buffer(new Uint8Array(data));\n        }\n        var out = hash.update(data).digest(digest);\n        if (callback) callback(null, out);\n        return out;\n      }\n    },\n\n    toHex: function toHex(data) {\n      var out = [];\n      for (var i = 0; i < data.length; i++) {\n        out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));\n      }\n      return out.join('');\n    },\n\n    createHash: function createHash(algorithm) {\n      return util.crypto.lib.createHash(algorithm);\n    }\n\n  },\n\n  /** @!ignore */\n\n  /* Abort constant */\n  abort: {},\n\n  each: function each(object, iterFunction) {\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        var ret = iterFunction.call(this, key, object[key]);\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  arrayEach: function arrayEach(array, iterFunction) {\n    for (var idx in array) {\n      if (Object.prototype.hasOwnProperty.call(array, idx)) {\n        var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));\n        if (ret === util.abort) break;\n      }\n    }\n  },\n\n  update: function update(obj1, obj2) {\n    util.each(obj2, function iterator(key, item) {\n      obj1[key] = item;\n    });\n    return obj1;\n  },\n\n  merge: function merge(obj1, obj2) {\n    return util.update(util.copy(obj1), obj2);\n  },\n\n  copy: function copy(object) {\n    if (object === null || object === undefined) return object;\n    var dupe = {};\n    // jshint forin:false\n    for (var key in object) {\n      dupe[key] = object[key];\n    }\n    return dupe;\n  },\n\n  isEmpty: function isEmpty(obj) {\n    for (var prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  arraySliceFn: function arraySliceFn(obj) {\n    var fn = obj.slice || obj.webkitSlice || obj.mozSlice;\n    return typeof fn === 'function' ? fn : null;\n  },\n\n  isType: function isType(obj, type) {\n    // handle cross-\"frame\" objects\n    if (typeof type === 'function') type = util.typeName(type);\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  },\n\n  typeName: function typeName(type) {\n    if (Object.prototype.hasOwnProperty.call(type, 'name')) return type.name;\n    var str = type.toString();\n    var match = str.match(/^\\s*function (.+)\\(/);\n    return match ? match[1] : str;\n  },\n\n  error: function error(err, options) {\n    var originalError = null;\n    if (typeof err.message === 'string' && err.message !== '') {\n      if (typeof options === 'string' || (options && options.message)) {\n        originalError = util.copy(err);\n        originalError.message = err.message;\n      }\n    }\n    err.message = err.message || null;\n\n    if (typeof options === 'string') {\n      err.message = options;\n    } else if (typeof options === 'object' && options !== null) {\n      util.update(err, options);\n      if (options.message)\n        err.message = options.message;\n      if (options.code || options.name)\n        err.code = options.code || options.name;\n      if (options.stack)\n        err.stack = options.stack;\n    }\n\n    if (typeof Object.defineProperty === 'function') {\n      Object.defineProperty(err, 'name', {writable: true, enumerable: false});\n      Object.defineProperty(err, 'message', {enumerable: true});\n    }\n\n    err.name = String(options && options.name || err.name || err.code || 'Error');\n    err.time = new Date();\n\n    if (originalError) {\n      err.originalError = originalError;\n    }\n\n\n    for (var key in options || {}) {\n      if (key[0] === '[' && key[key.length - 1] === ']') {\n        key = key.slice(1, -1);\n        if (key === 'code' || key === 'message') {\n          continue;\n        }\n        err['[' + key + ']'] = 'See error.' + key + ' for details.';\n        Object.defineProperty(err, key, {\n          value: err[key] || (options && options[key]) || (originalError && originalError[key]),\n          enumerable: false,\n          writable: true\n        });\n      }\n    }\n\n    return err;\n  },\n\n  /**\n   * @api private\n   */\n  inherit: function inherit(klass, features) {\n    var newObject = null;\n    if (features === undefined) {\n      features = klass;\n      klass = Object;\n      newObject = {};\n    } else {\n      var ctor = function ConstructorWrapper() {};\n      ctor.prototype = klass.prototype;\n      newObject = new ctor();\n    }\n\n    // constructor not supplied, create pass-through ctor\n    if (features.constructor === Object) {\n      features.constructor = function() {\n        if (klass !== Object) {\n          return klass.apply(this, arguments);\n        }\n      };\n    }\n\n    features.constructor.prototype = newObject;\n    util.update(features.constructor.prototype, features);\n    features.constructor.__super__ = klass;\n    return features.constructor;\n  },\n\n  /**\n   * @api private\n   */\n  mixin: function mixin() {\n    var klass = arguments[0];\n    for (var i = 1; i < arguments.length; i++) {\n      // jshint forin:false\n      for (var prop in arguments[i].prototype) {\n        var fn = arguments[i].prototype[prop];\n        if (prop !== 'constructor') {\n          klass.prototype[prop] = fn;\n        }\n      }\n    }\n    return klass;\n  },\n\n  /**\n   * @api private\n   */\n  hideProperties: function hideProperties(obj, props) {\n    if (typeof Object.defineProperty !== 'function') return;\n\n    util.arrayEach(props, function (key) {\n      Object.defineProperty(obj, key, {\n        enumerable: false, writable: true, configurable: true });\n    });\n  },\n\n  /**\n   * @api private\n   */\n  property: function property(obj, name, value, enumerable, isValue) {\n    var opts = {\n      configurable: true,\n      enumerable: enumerable !== undefined ? enumerable : true\n    };\n    if (typeof value === 'function' && !isValue) {\n      opts.get = value;\n    }\n    else {\n      opts.value = value; opts.writable = true;\n    }\n\n    Object.defineProperty(obj, name, opts);\n  },\n\n  /**\n   * @api private\n   */\n  memoizedProperty: function memoizedProperty(obj, name, get, enumerable) {\n    var cachedValue = null;\n\n    // build enumerable attribute for each value with lazy accessor.\n    util.property(obj, name, function() {\n      if (cachedValue === null) {\n        cachedValue = get();\n      }\n      return cachedValue;\n    }, enumerable);\n  },\n\n  /**\n   * TODO Remove in major version revision\n   * This backfill populates response data without the\n   * top-level payload name.\n   *\n   * @api private\n   */\n  hoistPayloadMember: function hoistPayloadMember(resp) {\n    var req = resp.request;\n    var operationName = req.operation;\n    var operation = req.service.api.operations[operationName];\n    var output = operation.output;\n    if (output.payload && !operation.hasEventOutput) {\n      var payloadMember = output.members[output.payload];\n      var responsePayload = resp.data[output.payload];\n      if (payloadMember.type === 'structure') {\n        util.each(responsePayload, function(key, value) {\n          util.property(resp.data, key, value, false);\n        });\n      }\n    }\n  },\n\n  /**\n   * Compute SHA-256 checksums of streams\n   *\n   * @api private\n   */\n  computeSha256: function computeSha256(body, done) {\n    if (util.isNode()) {\n      var Stream = util.stream.Stream;\n      var fs = __webpack_require__(/*! fs */ \"fs\");\n      if (typeof Stream === 'function' && body instanceof Stream) {\n        if (typeof body.path === 'string') { // assume file object\n          var settings = {};\n          if (typeof body.start === 'number') {\n            settings.start = body.start;\n          }\n          if (typeof body.end === 'number') {\n            settings.end = body.end;\n          }\n          body = fs.createReadStream(body.path, settings);\n        } else { // TODO support other stream types\n          return done(new Error('Non-file stream objects are ' +\n                                'not supported with SigV4'));\n        }\n      }\n    }\n\n    util.crypto.sha256(body, 'hex', function(err, sha) {\n      if (err) done(err);\n      else done(null, sha);\n    });\n  },\n\n  /**\n   * @api private\n   */\n  isClockSkewed: function isClockSkewed(serverTime) {\n    if (serverTime) {\n      util.property(AWS.config, 'isClockSkewed',\n        Math.abs(new Date().getTime() - serverTime) >= 300000, false);\n      return AWS.config.isClockSkewed;\n    }\n  },\n\n  applyClockOffset: function applyClockOffset(serverTime) {\n    if (serverTime)\n      AWS.config.systemClockOffset = serverTime - new Date().getTime();\n  },\n\n  /**\n   * @api private\n   */\n  extractRequestId: function extractRequestId(resp) {\n    var requestId = resp.httpResponse.headers['x-amz-request-id'] ||\n                     resp.httpResponse.headers['x-amzn-requestid'];\n\n    if (!requestId && resp.data && resp.data.ResponseMetadata) {\n      requestId = resp.data.ResponseMetadata.RequestId;\n    }\n\n    if (requestId) {\n      resp.requestId = requestId;\n    }\n\n    if (resp.error) {\n      resp.error.requestId = requestId;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  addPromises: function addPromises(constructors, PromiseDependency) {\n    var deletePromises = false;\n    if (PromiseDependency === undefined && AWS && AWS.config) {\n      PromiseDependency = AWS.config.getPromisesDependency();\n    }\n    if (PromiseDependency === undefined && typeof Promise !== 'undefined') {\n      PromiseDependency = Promise;\n    }\n    if (typeof PromiseDependency !== 'function') deletePromises = true;\n    if (!Array.isArray(constructors)) constructors = [constructors];\n\n    for (var ind = 0; ind < constructors.length; ind++) {\n      var constructor = constructors[ind];\n      if (deletePromises) {\n        if (constructor.deletePromisesFromClass) {\n          constructor.deletePromisesFromClass();\n        }\n      } else if (constructor.addPromisesToClass) {\n        constructor.addPromisesToClass(PromiseDependency);\n      }\n    }\n  },\n\n  /**\n   * @api private\n   * Return a function that will return a promise whose fate is decided by the\n   * callback behavior of the given method with `methodName`. The method to be\n   * promisified should conform to node.js convention of accepting a callback as\n   * last argument and calling that callback with error as the first argument\n   * and success value on the second argument.\n   */\n  promisifyMethod: function promisifyMethod(methodName, PromiseDependency) {\n    return function promise() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      return new PromiseDependency(function(resolve, reject) {\n        args.push(function(err, data) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(data);\n          }\n        });\n        self[methodName].apply(self, args);\n      });\n    };\n  },\n\n  /**\n   * @api private\n   */\n  isDualstackAvailable: function isDualstackAvailable(service) {\n    if (!service) return false;\n    var metadata = __webpack_require__(/*! ../apis/metadata.json */ \"(rsc)/../../node_modules/aws-sdk/apis/metadata.json\");\n    if (typeof service !== 'string') service = service.serviceIdentifier;\n    if (typeof service !== 'string' || !metadata.hasOwnProperty(service)) return false;\n    return !!metadata[service].dualstackAvailable;\n  },\n\n  /**\n   * @api private\n   */\n  calculateRetryDelay: function calculateRetryDelay(retryCount, retryDelayOptions, err) {\n    if (!retryDelayOptions) retryDelayOptions = {};\n    var customBackoff = retryDelayOptions.customBackoff || null;\n    if (typeof customBackoff === 'function') {\n      return customBackoff(retryCount, err);\n    }\n    var base = typeof retryDelayOptions.base === 'number' ? retryDelayOptions.base : 100;\n    var delay = Math.random() * (Math.pow(2, retryCount) * base);\n    return delay;\n  },\n\n  /**\n   * @api private\n   */\n  handleRequestWithRetries: function handleRequestWithRetries(httpRequest, options, cb) {\n    if (!options) options = {};\n    var http = AWS.HttpClient.getInstance();\n    var httpOptions = options.httpOptions || {};\n    var retryCount = 0;\n\n    var errCallback = function(err) {\n      var maxRetries = options.maxRetries || 0;\n      if (err && err.code === 'TimeoutError') err.retryable = true;\n\n      // Call `calculateRetryDelay()` only when relevant, see #3401\n      if (err && err.retryable && retryCount < maxRetries) {\n        var delay = util.calculateRetryDelay(retryCount, options.retryDelayOptions, err);\n        if (delay >= 0) {\n          retryCount++;\n          setTimeout(sendRequest, delay + (err.retryAfter || 0));\n          return;\n        }\n      }\n      cb(err);\n    };\n\n    var sendRequest = function() {\n      var data = '';\n      http.handleRequest(httpRequest, httpOptions, function(httpResponse) {\n        httpResponse.on('data', function(chunk) { data += chunk.toString(); });\n        httpResponse.on('end', function() {\n          var statusCode = httpResponse.statusCode;\n          if (statusCode < 300) {\n            cb(null, data);\n          } else {\n            var retryAfter = parseInt(httpResponse.headers['retry-after'], 10) * 1000 || 0;\n            var err = util.error(new Error(),\n              {\n                statusCode: statusCode,\n                retryable: statusCode >= 500 || statusCode === 429\n              }\n            );\n            if (retryAfter && err.retryable) err.retryAfter = retryAfter;\n            errCallback(err);\n          }\n        });\n      }, errCallback);\n    };\n\n    AWS.util.defer(sendRequest);\n  },\n\n  /**\n   * @api private\n   */\n  uuid: {\n    v4: function uuidV4() {\n      return (__webpack_require__(/*! uuid */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/index.js\").v4)();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  convertPayloadToString: function convertPayloadToString(resp) {\n    var req = resp.request;\n    var operation = req.operation;\n    var rules = req.service.api.operations[operation].output || {};\n    if (rules.payload && resp.data[rules.payload]) {\n      resp.data[rules.payload] = resp.data[rules.payload].toString();\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defer: function defer(callback) {\n    if (typeof process === 'object' && typeof process.nextTick === 'function') {\n      process.nextTick(callback);\n    } else if (typeof setImmediate === 'function') {\n      setImmediate(callback);\n    } else {\n      setTimeout(callback, 0);\n    }\n  },\n\n  /**\n   * @api private\n   */\n  getRequestPayloadShape: function getRequestPayloadShape(req) {\n    var operations = req.service.api.operations;\n    if (!operations) return undefined;\n    var operation = (operations || {})[req.operation];\n    if (!operation || !operation.input || !operation.input.payload) return undefined;\n    return operation.input.members[operation.input.payload];\n  },\n\n  getProfilesFromSharedConfig: function getProfilesFromSharedConfig(iniLoader, filename) {\n    var profiles = {};\n    var profilesFromConfig = {};\n    if (process.env[util.configOptInEnv]) {\n      var profilesFromConfig = iniLoader.loadFrom({\n        isConfig: true,\n        filename: process.env[util.sharedConfigFileEnv]\n      });\n    }\n    var profilesFromCreds= {};\n    try {\n      var profilesFromCreds = iniLoader.loadFrom({\n        filename: filename ||\n          (process.env[util.configOptInEnv] && process.env[util.sharedCredentialsFileEnv])\n      });\n    } catch (error) {\n      // if using config, assume it is fully descriptive without a credentials file:\n      if (!process.env[util.configOptInEnv]) throw error;\n    }\n    for (var i = 0, profileNames = Object.keys(profilesFromConfig); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromConfig[profileNames[i]]);\n    }\n    for (var i = 0, profileNames = Object.keys(profilesFromCreds); i < profileNames.length; i++) {\n      profiles[profileNames[i]] = objectAssign(profiles[profileNames[i]] || {}, profilesFromCreds[profileNames[i]]);\n    }\n    return profiles;\n\n    /**\n     * Roughly the semantics of `Object.assign(target, source)`\n     */\n    function objectAssign(target, source) {\n      for (var i = 0, keys = Object.keys(source); i < keys.length; i++) {\n        target[keys[i]] = source[keys[i]];\n      }\n      return target;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  ARN: {\n    validate: function validateARN(str) {\n      return str && str.indexOf('arn:') === 0 && str.split(':').length >= 6;\n    },\n    parse: function parseARN(arn) {\n      var matched = arn.split(':');\n      return {\n        partition: matched[1],\n        service: matched[2],\n        region: matched[3],\n        accountId: matched[4],\n        resource: matched.slice(5).join(':')\n      };\n    },\n    build: function buildARN(arnObject) {\n      if (\n        arnObject.service === undefined ||\n        arnObject.region === undefined ||\n        arnObject.accountId === undefined ||\n        arnObject.resource === undefined\n      ) throw util.error(new Error('Input ARN object is invalid'));\n      return 'arn:'+ (arnObject.partition || 'aws') + ':' + arnObject.service +\n        ':' + arnObject.region + ':' + arnObject.accountId + ':' + arnObject.resource;\n    }\n  },\n\n  /**\n   * @api private\n   */\n  defaultProfile: 'default',\n\n  /**\n   * @api private\n   */\n  configOptInEnv: 'AWS_SDK_LOAD_CONFIG',\n\n  /**\n   * @api private\n   */\n  sharedCredentialsFileEnv: 'AWS_SHARED_CREDENTIALS_FILE',\n\n  /**\n   * @api private\n   */\n  sharedConfigFileEnv: 'AWS_CONFIG_FILE',\n\n  /**\n   * @api private\n   */\n  imdsDisabledEnv: 'AWS_EC2_METADATA_DISABLED'\n};\n\n/**\n * @api private\n */\nmodule.exports = util;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/util.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/builder.js":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/builder.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var util = __webpack_require__(/*! ../util */ \"(rsc)/../../node_modules/aws-sdk/lib/util.js\");\nvar XmlNode = (__webpack_require__(/*! ./xml-node */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/xml-node.js\").XmlNode);\nvar XmlText = (__webpack_require__(/*! ./xml-text */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/xml-text.js\").XmlText);\n\nfunction XmlBuilder() { }\n\nXmlBuilder.prototype.toXML = function(params, shape, rootElement, noEmpty) {\n  var xml = new XmlNode(rootElement);\n  applyNamespaces(xml, shape, true);\n  serialize(xml, params, shape);\n  return xml.children.length > 0 || noEmpty ? xml.toString() : '';\n};\n\nfunction serialize(xml, value, shape) {\n  switch (shape.type) {\n    case 'structure': return serializeStructure(xml, value, shape);\n    case 'map': return serializeMap(xml, value, shape);\n    case 'list': return serializeList(xml, value, shape);\n    default: return serializeScalar(xml, value, shape);\n  }\n}\n\nfunction serializeStructure(xml, params, shape) {\n  util.arrayEach(shape.memberNames, function(memberName) {\n    var memberShape = shape.members[memberName];\n    if (memberShape.location !== 'body') return;\n\n    var value = params[memberName];\n    var name = memberShape.name;\n    if (value !== undefined && value !== null) {\n      if (memberShape.isXmlAttribute) {\n        xml.addAttribute(name, value);\n      } else if (memberShape.flattened) {\n        serialize(xml, value, memberShape);\n      } else {\n        var element = new XmlNode(name);\n        xml.addChildNode(element);\n        applyNamespaces(element, memberShape);\n        serialize(element, value, memberShape);\n      }\n    }\n  });\n}\n\nfunction serializeMap(xml, map, shape) {\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n\n  util.each(map, function(key, value) {\n    var entry = new XmlNode(shape.flattened ? shape.name : 'entry');\n    xml.addChildNode(entry);\n\n    var entryKey = new XmlNode(xmlKey);\n    var entryValue = new XmlNode(xmlValue);\n    entry.addChildNode(entryKey);\n    entry.addChildNode(entryValue);\n\n    serialize(entryKey, key, shape.key);\n    serialize(entryValue, value, shape.value);\n  });\n}\n\nfunction serializeList(xml, list, shape) {\n  if (shape.flattened) {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || shape.name;\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  } else {\n    util.arrayEach(list, function(value) {\n      var name = shape.member.name || 'member';\n      var element = new XmlNode(name);\n      xml.addChildNode(element);\n      serialize(element, value, shape.member);\n    });\n  }\n}\n\nfunction serializeScalar(xml, value, shape) {\n  xml.addChildNode(\n    new XmlText(shape.toWireFormat(value))\n  );\n}\n\nfunction applyNamespaces(xml, shape, isRoot) {\n  var uri, prefix = 'xmlns';\n  if (shape.xmlNamespaceUri) {\n    uri = shape.xmlNamespaceUri;\n    if (shape.xmlNamespacePrefix) prefix += ':' + shape.xmlNamespacePrefix;\n  } else if (isRoot && shape.api.xmlNamespaceUri) {\n    uri = shape.api.xmlNamespaceUri;\n  }\n\n  if (uri) xml.addAttribute(prefix, uri);\n}\n\n/**\n * @api private\n */\nmodule.exports = XmlBuilder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC9idWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLFdBQVcsbUJBQU8sQ0FBQyw2REFBUztBQUM1QixjQUFjLHVHQUE2QjtBQUMzQyxjQUFjLHVHQUE2Qjs7QUFFM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi94bWwvYnVpbGRlci5qcz8wNTMyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB1dGlsID0gcmVxdWlyZSgnLi4vdXRpbCcpO1xudmFyIFhtbE5vZGUgPSByZXF1aXJlKCcuL3htbC1ub2RlJykuWG1sTm9kZTtcbnZhciBYbWxUZXh0ID0gcmVxdWlyZSgnLi94bWwtdGV4dCcpLlhtbFRleHQ7XG5cbmZ1bmN0aW9uIFhtbEJ1aWxkZXIoKSB7IH1cblxuWG1sQnVpbGRlci5wcm90b3R5cGUudG9YTUwgPSBmdW5jdGlvbihwYXJhbXMsIHNoYXBlLCByb290RWxlbWVudCwgbm9FbXB0eSkge1xuICB2YXIgeG1sID0gbmV3IFhtbE5vZGUocm9vdEVsZW1lbnQpO1xuICBhcHBseU5hbWVzcGFjZXMoeG1sLCBzaGFwZSwgdHJ1ZSk7XG4gIHNlcmlhbGl6ZSh4bWwsIHBhcmFtcywgc2hhcGUpO1xuICByZXR1cm4geG1sLmNoaWxkcmVuLmxlbmd0aCA+IDAgfHwgbm9FbXB0eSA/IHhtbC50b1N0cmluZygpIDogJyc7XG59O1xuXG5mdW5jdGlvbiBzZXJpYWxpemUoeG1sLCB2YWx1ZSwgc2hhcGUpIHtcbiAgc3dpdGNoIChzaGFwZS50eXBlKSB7XG4gICAgY2FzZSAnc3RydWN0dXJlJzogcmV0dXJuIHNlcmlhbGl6ZVN0cnVjdHVyZSh4bWwsIHZhbHVlLCBzaGFwZSk7XG4gICAgY2FzZSAnbWFwJzogcmV0dXJuIHNlcmlhbGl6ZU1hcCh4bWwsIHZhbHVlLCBzaGFwZSk7XG4gICAgY2FzZSAnbGlzdCc6IHJldHVybiBzZXJpYWxpemVMaXN0KHhtbCwgdmFsdWUsIHNoYXBlKTtcbiAgICBkZWZhdWx0OiByZXR1cm4gc2VyaWFsaXplU2NhbGFyKHhtbCwgdmFsdWUsIHNoYXBlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVTdHJ1Y3R1cmUoeG1sLCBwYXJhbXMsIHNoYXBlKSB7XG4gIHV0aWwuYXJyYXlFYWNoKHNoYXBlLm1lbWJlck5hbWVzLCBmdW5jdGlvbihtZW1iZXJOYW1lKSB7XG4gICAgdmFyIG1lbWJlclNoYXBlID0gc2hhcGUubWVtYmVyc1ttZW1iZXJOYW1lXTtcbiAgICBpZiAobWVtYmVyU2hhcGUubG9jYXRpb24gIT09ICdib2R5JykgcmV0dXJuO1xuXG4gICAgdmFyIHZhbHVlID0gcGFyYW1zW21lbWJlck5hbWVdO1xuICAgIHZhciBuYW1lID0gbWVtYmVyU2hhcGUubmFtZTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgaWYgKG1lbWJlclNoYXBlLmlzWG1sQXR0cmlidXRlKSB7XG4gICAgICAgIHhtbC5hZGRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICAgICAgfSBlbHNlIGlmIChtZW1iZXJTaGFwZS5mbGF0dGVuZWQpIHtcbiAgICAgICAgc2VyaWFsaXplKHhtbCwgdmFsdWUsIG1lbWJlclNoYXBlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBlbGVtZW50ID0gbmV3IFhtbE5vZGUobmFtZSk7XG4gICAgICAgIHhtbC5hZGRDaGlsZE5vZGUoZWxlbWVudCk7XG4gICAgICAgIGFwcGx5TmFtZXNwYWNlcyhlbGVtZW50LCBtZW1iZXJTaGFwZSk7XG4gICAgICAgIHNlcmlhbGl6ZShlbGVtZW50LCB2YWx1ZSwgbWVtYmVyU2hhcGUpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZU1hcCh4bWwsIG1hcCwgc2hhcGUpIHtcbiAgdmFyIHhtbEtleSA9IHNoYXBlLmtleS5uYW1lIHx8ICdrZXknO1xuICB2YXIgeG1sVmFsdWUgPSBzaGFwZS52YWx1ZS5uYW1lIHx8ICd2YWx1ZSc7XG5cbiAgdXRpbC5lYWNoKG1hcCwgZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHZhciBlbnRyeSA9IG5ldyBYbWxOb2RlKHNoYXBlLmZsYXR0ZW5lZCA/IHNoYXBlLm5hbWUgOiAnZW50cnknKTtcbiAgICB4bWwuYWRkQ2hpbGROb2RlKGVudHJ5KTtcblxuICAgIHZhciBlbnRyeUtleSA9IG5ldyBYbWxOb2RlKHhtbEtleSk7XG4gICAgdmFyIGVudHJ5VmFsdWUgPSBuZXcgWG1sTm9kZSh4bWxWYWx1ZSk7XG4gICAgZW50cnkuYWRkQ2hpbGROb2RlKGVudHJ5S2V5KTtcbiAgICBlbnRyeS5hZGRDaGlsZE5vZGUoZW50cnlWYWx1ZSk7XG5cbiAgICBzZXJpYWxpemUoZW50cnlLZXksIGtleSwgc2hhcGUua2V5KTtcbiAgICBzZXJpYWxpemUoZW50cnlWYWx1ZSwgdmFsdWUsIHNoYXBlLnZhbHVlKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZUxpc3QoeG1sLCBsaXN0LCBzaGFwZSkge1xuICBpZiAoc2hhcGUuZmxhdHRlbmVkKSB7XG4gICAgdXRpbC5hcnJheUVhY2gobGlzdCwgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHZhciBuYW1lID0gc2hhcGUubWVtYmVyLm5hbWUgfHwgc2hhcGUubmFtZTtcbiAgICAgIHZhciBlbGVtZW50ID0gbmV3IFhtbE5vZGUobmFtZSk7XG4gICAgICB4bWwuYWRkQ2hpbGROb2RlKGVsZW1lbnQpO1xuICAgICAgc2VyaWFsaXplKGVsZW1lbnQsIHZhbHVlLCBzaGFwZS5tZW1iZXIpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHV0aWwuYXJyYXlFYWNoKGxpc3QsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB2YXIgbmFtZSA9IHNoYXBlLm1lbWJlci5uYW1lIHx8ICdtZW1iZXInO1xuICAgICAgdmFyIGVsZW1lbnQgPSBuZXcgWG1sTm9kZShuYW1lKTtcbiAgICAgIHhtbC5hZGRDaGlsZE5vZGUoZWxlbWVudCk7XG4gICAgICBzZXJpYWxpemUoZWxlbWVudCwgdmFsdWUsIHNoYXBlLm1lbWJlcik7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc2VyaWFsaXplU2NhbGFyKHhtbCwgdmFsdWUsIHNoYXBlKSB7XG4gIHhtbC5hZGRDaGlsZE5vZGUoXG4gICAgbmV3IFhtbFRleHQoc2hhcGUudG9XaXJlRm9ybWF0KHZhbHVlKSlcbiAgKTtcbn1cblxuZnVuY3Rpb24gYXBwbHlOYW1lc3BhY2VzKHhtbCwgc2hhcGUsIGlzUm9vdCkge1xuICB2YXIgdXJpLCBwcmVmaXggPSAneG1sbnMnO1xuICBpZiAoc2hhcGUueG1sTmFtZXNwYWNlVXJpKSB7XG4gICAgdXJpID0gc2hhcGUueG1sTmFtZXNwYWNlVXJpO1xuICAgIGlmIChzaGFwZS54bWxOYW1lc3BhY2VQcmVmaXgpIHByZWZpeCArPSAnOicgKyBzaGFwZS54bWxOYW1lc3BhY2VQcmVmaXg7XG4gIH0gZWxzZSBpZiAoaXNSb290ICYmIHNoYXBlLmFwaS54bWxOYW1lc3BhY2VVcmkpIHtcbiAgICB1cmkgPSBzaGFwZS5hcGkueG1sTmFtZXNwYWNlVXJpO1xuICB9XG5cbiAgaWYgKHVyaSkgeG1sLmFkZEF0dHJpYnV0ZShwcmVmaXgsIHVyaSk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gWG1sQnVpbGRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/builder.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/escape-attribute.js":
/*!**************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/escape-attribute.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("/**\n * Escapes characters that can not be in an XML attribute.\n */\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeAttribute: escapeAttribute\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC9lc2NhcGUtYXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHdCQUF3QixzQkFBc0Isc0JBQXNCLHdCQUF3QjtBQUNqSTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIveG1sL2VzY2FwZS1hdHRyaWJ1dGUuanM/NGU5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVzY2FwZXMgY2hhcmFjdGVycyB0aGF0IGNhbiBub3QgYmUgaW4gYW4gWE1MIGF0dHJpYnV0ZS5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlQXR0cmlidXRlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoLyYvZywgJyZhbXA7JykucmVwbGFjZSgvJy9nLCAnJmFwb3M7JykucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKS5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7Jyk7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGVzY2FwZUF0dHJpYnV0ZTogZXNjYXBlQXR0cmlidXRlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/escape-attribute.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/escape-element.js":
/*!************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/escape-element.js ***!
  \************************************************************/
/***/ ((module) => {

eval("/**\n * Escapes characters that can not be in an XML element.\n */\nfunction escapeElement(value) {\n    return value.replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\\r/g, '&#x0D;')\n                .replace(/\\n/g, '&#x0A;')\n                .replace(/\\u0085/g, '&#x85;')\n                .replace(/\\u2028/, '&#x2028;');\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    escapeElement: escapeElement\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC9lc2NhcGUtZWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxvQ0FBb0M7QUFDcEMsb0NBQW9DO0FBQ3BDLHVDQUF1QztBQUN2Qyx1Q0FBdUM7QUFDdkMsMkNBQTJDO0FBQzNDLDRDQUE0QztBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIveG1sL2VzY2FwZS1lbGVtZW50LmpzP2ZlNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFc2NhcGVzIGNoYXJhY3RlcnMgdGhhdCBjYW4gbm90IGJlIGluIGFuIFhNTCBlbGVtZW50LlxuICovXG5mdW5jdGlvbiBlc2NhcGVFbGVtZW50KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvPC9nLCAnJmx0OycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXHIvZywgJyYjeDBEOycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcbi9nLCAnJiN4MEE7JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFx1MDA4NS9nLCAnJiN4ODU7JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFx1MjAyOC8sICcmI3gyMDI4OycpO1xufVxuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBlc2NhcGVFbGVtZW50OiBlc2NhcGVFbGVtZW50XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/escape-element.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/node_parser.js":
/*!*********************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/node_parser.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var AWS = __webpack_require__(/*! ../core */ \"(rsc)/../../node_modules/aws-sdk/lib/core.js\");\nvar util = AWS.util;\nvar Shape = AWS.Model.Shape;\n\nvar xml2js = __webpack_require__(/*! xml2js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/xml2js.js\");\n\n/**\n * @api private\n */\nvar options = {  // options passed to xml2js parser\n  explicitCharkey: false, // undocumented\n  trim: false,            // trim the leading/trailing whitespace from text nodes\n  normalize: false,       // trim interior whitespace inside text nodes\n  explicitRoot: false,    // return the root node in the resulting object?\n  emptyTag: null,         // the default value for empty nodes\n  explicitArray: true,    // always put child nodes in an array\n  ignoreAttrs: false,     // ignore attributes, only create text nodes\n  mergeAttrs: false,      // merge attributes and child elements\n  validator: null         // a callable validator\n};\n\nfunction NodeXmlParser() { }\n\nNodeXmlParser.prototype.parse = function(xml, shape) {\n  shape = shape || {};\n\n  var result = null;\n  var error = null;\n\n  var parser = new xml2js.Parser(options);\n  parser.parseString(xml, function (e, r) {\n    error = e;\n    result = r;\n  });\n\n  if (result) {\n    var data = parseXml(result, shape);\n    if (result.ResponseMetadata) {\n      data.ResponseMetadata = parseXml(result.ResponseMetadata[0], {});\n    }\n    return data;\n  } else if (error) {\n    throw util.error(error, {code: 'XMLParserError', retryable: true});\n  } else { // empty xml document\n    return parseXml({}, shape);\n  }\n};\n\nfunction parseXml(xml, shape) {\n  switch (shape.type) {\n    case 'structure': return parseStructure(xml, shape);\n    case 'map': return parseMap(xml, shape);\n    case 'list': return parseList(xml, shape);\n    case undefined: case null: return parseUnknown(xml);\n    default: return parseScalar(xml, shape);\n  }\n}\n\nfunction parseStructure(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  util.each(shape.members, function(memberName, memberShape) {\n    var xmlName = memberShape.name;\n    if (Object.prototype.hasOwnProperty.call(xml, xmlName) && Array.isArray(xml[xmlName])) {\n      var xmlChild = xml[xmlName];\n      if (!memberShape.flattened) xmlChild = xmlChild[0];\n\n      data[memberName] = parseXml(xmlChild, memberShape);\n    } else if (memberShape.isXmlAttribute &&\n               xml.$ && Object.prototype.hasOwnProperty.call(xml.$, xmlName)) {\n      data[memberName] = parseScalar(xml.$[xmlName], memberShape);\n    } else if (memberShape.type === 'list' && !shape.api.xmlNoDefaultLists) {\n      data[memberName] = memberShape.defaultValue;\n    }\n  });\n\n  return data;\n}\n\nfunction parseMap(xml, shape) {\n  var data = {};\n  if (xml === null) return data;\n\n  var xmlKey = shape.key.name || 'key';\n  var xmlValue = shape.value.name || 'value';\n  var iterable = shape.flattened ? xml : xml.entry;\n\n  if (Array.isArray(iterable)) {\n    util.arrayEach(iterable, function(child) {\n      data[child[xmlKey][0]] = parseXml(child[xmlValue][0], shape.value);\n    });\n  }\n\n  return data;\n}\n\nfunction parseList(xml, shape) {\n  var data = [];\n  var name = shape.member.name || 'member';\n  if (shape.flattened) {\n    util.arrayEach(xml, function(xmlChild) {\n      data.push(parseXml(xmlChild, shape.member));\n    });\n  } else if (xml && Array.isArray(xml[name])) {\n    util.arrayEach(xml[name], function(child) {\n      data.push(parseXml(child, shape.member));\n    });\n  }\n\n  return data;\n}\n\nfunction parseScalar(text, shape) {\n  if (text && text.$ && text.$.encoding === 'base64') {\n    shape = new Shape.create({type: text.$.encoding});\n  }\n  if (text && text._) text = text._;\n\n  if (typeof shape.toType === 'function') {\n    return shape.toType(text);\n  } else {\n    return text;\n  }\n}\n\nfunction parseUnknown(xml) {\n  if (xml === undefined || xml === null) return '';\n  if (typeof xml === 'string') return xml;\n\n  // parse a list\n  if (Array.isArray(xml)) {\n    var arr = [];\n    for (i = 0; i < xml.length; i++) {\n      arr.push(parseXml(xml[i], {}));\n    }\n    return arr;\n  }\n\n  // empty object\n  var keys = Object.keys(xml), i;\n  if (keys.length === 0 || (keys.length === 1 && keys[0] === '$')) {\n    return {};\n  }\n\n  // object, parse as structure\n  var data = {};\n  for (i = 0; i < keys.length; i++) {\n    var key = keys[i], value = xml[key];\n    if (key === '$') continue;\n    if (value.length > 1) { // this member is a list\n      data[key] = parseList(value, {member: {}});\n    } else { // this member is a single item\n      data[key] = parseXml(value[0], {});\n    }\n  }\n  return data;\n}\n\n/**\n * @api private\n */\nmodule.exports = NodeXmlParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC9ub2RlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsNkRBQVM7QUFDM0I7QUFDQTs7QUFFQSxhQUFhLG1CQUFPLENBQUMsa0ZBQVE7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0EsSUFBSTtBQUNKLDZCQUE2Qix3Q0FBd0M7QUFDckUsSUFBSSxPQUFPO0FBQ1gsc0JBQXNCO0FBQ3RCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4QkFBOEIsc0JBQXNCO0FBQ3BEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLGlCQUFpQjtBQUMvQjtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCLG9DQUFvQyxXQUFXO0FBQy9DLE1BQU0sT0FBTztBQUNiLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL2xpYi94bWwvbm9kZV9wYXJzZXIuanM/MzgwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQVdTID0gcmVxdWlyZSgnLi4vY29yZScpO1xudmFyIHV0aWwgPSBBV1MudXRpbDtcbnZhciBTaGFwZSA9IEFXUy5Nb2RlbC5TaGFwZTtcblxudmFyIHhtbDJqcyA9IHJlcXVpcmUoJ3htbDJqcycpO1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG52YXIgb3B0aW9ucyA9IHsgIC8vIG9wdGlvbnMgcGFzc2VkIHRvIHhtbDJqcyBwYXJzZXJcbiAgZXhwbGljaXRDaGFya2V5OiBmYWxzZSwgLy8gdW5kb2N1bWVudGVkXG4gIHRyaW06IGZhbHNlLCAgICAgICAgICAgIC8vIHRyaW0gdGhlIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVzcGFjZSBmcm9tIHRleHQgbm9kZXNcbiAgbm9ybWFsaXplOiBmYWxzZSwgICAgICAgLy8gdHJpbSBpbnRlcmlvciB3aGl0ZXNwYWNlIGluc2lkZSB0ZXh0IG5vZGVzXG4gIGV4cGxpY2l0Um9vdDogZmFsc2UsICAgIC8vIHJldHVybiB0aGUgcm9vdCBub2RlIGluIHRoZSByZXN1bHRpbmcgb2JqZWN0P1xuICBlbXB0eVRhZzogbnVsbCwgICAgICAgICAvLyB0aGUgZGVmYXVsdCB2YWx1ZSBmb3IgZW1wdHkgbm9kZXNcbiAgZXhwbGljaXRBcnJheTogdHJ1ZSwgICAgLy8gYWx3YXlzIHB1dCBjaGlsZCBub2RlcyBpbiBhbiBhcnJheVxuICBpZ25vcmVBdHRyczogZmFsc2UsICAgICAvLyBpZ25vcmUgYXR0cmlidXRlcywgb25seSBjcmVhdGUgdGV4dCBub2Rlc1xuICBtZXJnZUF0dHJzOiBmYWxzZSwgICAgICAvLyBtZXJnZSBhdHRyaWJ1dGVzIGFuZCBjaGlsZCBlbGVtZW50c1xuICB2YWxpZGF0b3I6IG51bGwgICAgICAgICAvLyBhIGNhbGxhYmxlIHZhbGlkYXRvclxufTtcblxuZnVuY3Rpb24gTm9kZVhtbFBhcnNlcigpIHsgfVxuXG5Ob2RlWG1sUGFyc2VyLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uKHhtbCwgc2hhcGUpIHtcbiAgc2hhcGUgPSBzaGFwZSB8fCB7fTtcblxuICB2YXIgcmVzdWx0ID0gbnVsbDtcbiAgdmFyIGVycm9yID0gbnVsbDtcblxuICB2YXIgcGFyc2VyID0gbmV3IHhtbDJqcy5QYXJzZXIob3B0aW9ucyk7XG4gIHBhcnNlci5wYXJzZVN0cmluZyh4bWwsIGZ1bmN0aW9uIChlLCByKSB7XG4gICAgZXJyb3IgPSBlO1xuICAgIHJlc3VsdCA9IHI7XG4gIH0pO1xuXG4gIGlmIChyZXN1bHQpIHtcbiAgICB2YXIgZGF0YSA9IHBhcnNlWG1sKHJlc3VsdCwgc2hhcGUpO1xuICAgIGlmIChyZXN1bHQuUmVzcG9uc2VNZXRhZGF0YSkge1xuICAgICAgZGF0YS5SZXNwb25zZU1ldGFkYXRhID0gcGFyc2VYbWwocmVzdWx0LlJlc3BvbnNlTWV0YWRhdGFbMF0sIHt9KTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH0gZWxzZSBpZiAoZXJyb3IpIHtcbiAgICB0aHJvdyB1dGlsLmVycm9yKGVycm9yLCB7Y29kZTogJ1hNTFBhcnNlckVycm9yJywgcmV0cnlhYmxlOiB0cnVlfSk7XG4gIH0gZWxzZSB7IC8vIGVtcHR5IHhtbCBkb2N1bWVudFxuICAgIHJldHVybiBwYXJzZVhtbCh7fSwgc2hhcGUpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBwYXJzZVhtbCh4bWwsIHNoYXBlKSB7XG4gIHN3aXRjaCAoc2hhcGUudHlwZSkge1xuICAgIGNhc2UgJ3N0cnVjdHVyZSc6IHJldHVybiBwYXJzZVN0cnVjdHVyZSh4bWwsIHNoYXBlKTtcbiAgICBjYXNlICdtYXAnOiByZXR1cm4gcGFyc2VNYXAoeG1sLCBzaGFwZSk7XG4gICAgY2FzZSAnbGlzdCc6IHJldHVybiBwYXJzZUxpc3QoeG1sLCBzaGFwZSk7XG4gICAgY2FzZSB1bmRlZmluZWQ6IGNhc2UgbnVsbDogcmV0dXJuIHBhcnNlVW5rbm93bih4bWwpO1xuICAgIGRlZmF1bHQ6IHJldHVybiBwYXJzZVNjYWxhcih4bWwsIHNoYXBlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZVN0cnVjdHVyZSh4bWwsIHNoYXBlKSB7XG4gIHZhciBkYXRhID0ge307XG4gIGlmICh4bWwgPT09IG51bGwpIHJldHVybiBkYXRhO1xuXG4gIHV0aWwuZWFjaChzaGFwZS5tZW1iZXJzLCBmdW5jdGlvbihtZW1iZXJOYW1lLCBtZW1iZXJTaGFwZSkge1xuICAgIHZhciB4bWxOYW1lID0gbWVtYmVyU2hhcGUubmFtZTtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHhtbCwgeG1sTmFtZSkgJiYgQXJyYXkuaXNBcnJheSh4bWxbeG1sTmFtZV0pKSB7XG4gICAgICB2YXIgeG1sQ2hpbGQgPSB4bWxbeG1sTmFtZV07XG4gICAgICBpZiAoIW1lbWJlclNoYXBlLmZsYXR0ZW5lZCkgeG1sQ2hpbGQgPSB4bWxDaGlsZFswXTtcblxuICAgICAgZGF0YVttZW1iZXJOYW1lXSA9IHBhcnNlWG1sKHhtbENoaWxkLCBtZW1iZXJTaGFwZSk7XG4gICAgfSBlbHNlIGlmIChtZW1iZXJTaGFwZS5pc1htbEF0dHJpYnV0ZSAmJlxuICAgICAgICAgICAgICAgeG1sLiQgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHhtbC4kLCB4bWxOYW1lKSkge1xuICAgICAgZGF0YVttZW1iZXJOYW1lXSA9IHBhcnNlU2NhbGFyKHhtbC4kW3htbE5hbWVdLCBtZW1iZXJTaGFwZSk7XG4gICAgfSBlbHNlIGlmIChtZW1iZXJTaGFwZS50eXBlID09PSAnbGlzdCcgJiYgIXNoYXBlLmFwaS54bWxOb0RlZmF1bHRMaXN0cykge1xuICAgICAgZGF0YVttZW1iZXJOYW1lXSA9IG1lbWJlclNoYXBlLmRlZmF1bHRWYWx1ZTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBwYXJzZU1hcCh4bWwsIHNoYXBlKSB7XG4gIHZhciBkYXRhID0ge307XG4gIGlmICh4bWwgPT09IG51bGwpIHJldHVybiBkYXRhO1xuXG4gIHZhciB4bWxLZXkgPSBzaGFwZS5rZXkubmFtZSB8fCAna2V5JztcbiAgdmFyIHhtbFZhbHVlID0gc2hhcGUudmFsdWUubmFtZSB8fCAndmFsdWUnO1xuICB2YXIgaXRlcmFibGUgPSBzaGFwZS5mbGF0dGVuZWQgPyB4bWwgOiB4bWwuZW50cnk7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaXRlcmFibGUpKSB7XG4gICAgdXRpbC5hcnJheUVhY2goaXRlcmFibGUsIGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICBkYXRhW2NoaWxkW3htbEtleV1bMF1dID0gcGFyc2VYbWwoY2hpbGRbeG1sVmFsdWVdWzBdLCBzaGFwZS52YWx1ZSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gcGFyc2VMaXN0KHhtbCwgc2hhcGUpIHtcbiAgdmFyIGRhdGEgPSBbXTtcbiAgdmFyIG5hbWUgPSBzaGFwZS5tZW1iZXIubmFtZSB8fCAnbWVtYmVyJztcbiAgaWYgKHNoYXBlLmZsYXR0ZW5lZCkge1xuICAgIHV0aWwuYXJyYXlFYWNoKHhtbCwgZnVuY3Rpb24oeG1sQ2hpbGQpIHtcbiAgICAgIGRhdGEucHVzaChwYXJzZVhtbCh4bWxDaGlsZCwgc2hhcGUubWVtYmVyKSk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoeG1sICYmIEFycmF5LmlzQXJyYXkoeG1sW25hbWVdKSkge1xuICAgIHV0aWwuYXJyYXlFYWNoKHhtbFtuYW1lXSwgZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgIGRhdGEucHVzaChwYXJzZVhtbChjaGlsZCwgc2hhcGUubWVtYmVyKSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gcGFyc2VTY2FsYXIodGV4dCwgc2hhcGUpIHtcbiAgaWYgKHRleHQgJiYgdGV4dC4kICYmIHRleHQuJC5lbmNvZGluZyA9PT0gJ2Jhc2U2NCcpIHtcbiAgICBzaGFwZSA9IG5ldyBTaGFwZS5jcmVhdGUoe3R5cGU6IHRleHQuJC5lbmNvZGluZ30pO1xuICB9XG4gIGlmICh0ZXh0ICYmIHRleHQuXykgdGV4dCA9IHRleHQuXztcblxuICBpZiAodHlwZW9mIHNoYXBlLnRvVHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBzaGFwZS50b1R5cGUodGV4dCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gcGFyc2VVbmtub3duKHhtbCkge1xuICBpZiAoeG1sID09PSB1bmRlZmluZWQgfHwgeG1sID09PSBudWxsKSByZXR1cm4gJyc7XG4gIGlmICh0eXBlb2YgeG1sID09PSAnc3RyaW5nJykgcmV0dXJuIHhtbDtcblxuICAvLyBwYXJzZSBhIGxpc3RcbiAgaWYgKEFycmF5LmlzQXJyYXkoeG1sKSkge1xuICAgIHZhciBhcnIgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgeG1sLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnIucHVzaChwYXJzZVhtbCh4bWxbaV0sIHt9KSk7XG4gICAgfVxuICAgIHJldHVybiBhcnI7XG4gIH1cblxuICAvLyBlbXB0eSBvYmplY3RcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh4bWwpLCBpO1xuICBpZiAoa2V5cy5sZW5ndGggPT09IDAgfHwgKGtleXMubGVuZ3RoID09PSAxICYmIGtleXNbMF0gPT09ICckJykpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICAvLyBvYmplY3QsIHBhcnNlIGFzIHN0cnVjdHVyZVxuICB2YXIgZGF0YSA9IHt9O1xuICBmb3IgKGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldLCB2YWx1ZSA9IHhtbFtrZXldO1xuICAgIGlmIChrZXkgPT09ICckJykgY29udGludWU7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA+IDEpIHsgLy8gdGhpcyBtZW1iZXIgaXMgYSBsaXN0XG4gICAgICBkYXRhW2tleV0gPSBwYXJzZUxpc3QodmFsdWUsIHttZW1iZXI6IHt9fSk7XG4gICAgfSBlbHNlIHsgLy8gdGhpcyBtZW1iZXIgaXMgYSBzaW5nbGUgaXRlbVxuICAgICAgZGF0YVtrZXldID0gcGFyc2VYbWwodmFsdWVbMF0sIHt9KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8qKlxuICogQGFwaSBwcml2YXRlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gTm9kZVhtbFBhcnNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/node_parser.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/xml-node.js":
/*!******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/xml-node.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var escapeAttribute = (__webpack_require__(/*! ./escape-attribute */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/escape-attribute.js\").escapeAttribute);\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n    if (children === void 0) { children = []; }\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n};\nXmlNode.prototype.toString = function () {\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = '<' + this.name;\n    // add attributes\n    var attributes = this.attributes;\n    for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n        var attributeName = attributeNames[i];\n        var attribute = attributes[attributeName];\n        if (typeof attribute !== 'undefined' && attribute !== null) {\n            xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n        }\n    }\n    return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) { return c.toString(); }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlNode: XmlNode\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC94bWwtbm9kZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsK0hBQTZDOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCwyQkFBMkI7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUZBQW1GLHNCQUFzQjtBQUN6Rzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9saWIveG1sL3htbC1ub2RlLmpzPzFhZDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGVzY2FwZUF0dHJpYnV0ZSA9IHJlcXVpcmUoJy4vZXNjYXBlLWF0dHJpYnV0ZScpLmVzY2FwZUF0dHJpYnV0ZTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFuIFhNTCBub2RlLlxuICogQGFwaSBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIFhtbE5vZGUobmFtZSwgY2hpbGRyZW4pIHtcbiAgICBpZiAoY2hpbGRyZW4gPT09IHZvaWQgMCkgeyBjaGlsZHJlbiA9IFtdOyB9XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG4gICAgdGhpcy5hdHRyaWJ1dGVzID0ge307XG59XG5YbWxOb2RlLnByb3RvdHlwZS5hZGRBdHRyaWJ1dGUgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICB0aGlzLmF0dHJpYnV0ZXNbbmFtZV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbn07XG5YbWxOb2RlLnByb3RvdHlwZS5hZGRDaGlsZE5vZGUgPSBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICB0aGlzLmNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgIHJldHVybiB0aGlzO1xufTtcblhtbE5vZGUucHJvdG90eXBlLnJlbW92ZUF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMuYXR0cmlidXRlc1tuYW1lXTtcbiAgICByZXR1cm4gdGhpcztcbn07XG5YbWxOb2RlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFzQ2hpbGRyZW4gPSBCb29sZWFuKHRoaXMuY2hpbGRyZW4ubGVuZ3RoKTtcbiAgICB2YXIgeG1sVGV4dCA9ICc8JyArIHRoaXMubmFtZTtcbiAgICAvLyBhZGQgYXR0cmlidXRlc1xuICAgIHZhciBhdHRyaWJ1dGVzID0gdGhpcy5hdHRyaWJ1dGVzO1xuICAgIGZvciAodmFyIGkgPSAwLCBhdHRyaWJ1dGVOYW1lcyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpOyBpIDwgYXR0cmlidXRlTmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGF0dHJpYnV0ZU5hbWUgPSBhdHRyaWJ1dGVOYW1lc1tpXTtcbiAgICAgICAgdmFyIGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV07XG4gICAgICAgIGlmICh0eXBlb2YgYXR0cmlidXRlICE9PSAndW5kZWZpbmVkJyAmJiBhdHRyaWJ1dGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHhtbFRleHQgKz0gJyAnICsgYXR0cmlidXRlTmFtZSArICc9XFxcIicgKyBlc2NhcGVBdHRyaWJ1dGUoJycgKyBhdHRyaWJ1dGUpICsgJ1xcXCInO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB4bWxUZXh0ICs9ICFoYXNDaGlsZHJlbiA/ICcvPicgOiAnPicgKyB0aGlzLmNoaWxkcmVuLm1hcChmdW5jdGlvbiAoYykgeyByZXR1cm4gYy50b1N0cmluZygpOyB9KS5qb2luKCcnKSArICc8LycgKyB0aGlzLm5hbWUgKyAnPic7XG59O1xuXG4vKipcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBYbWxOb2RlOiBYbWxOb2RlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/xml-node.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/xml/xml-text.js":
/*!******************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/xml/xml-text.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var escapeElement = (__webpack_require__(/*! ./escape-element */ \"(rsc)/../../node_modules/aws-sdk/lib/xml/escape-element.js\").escapeElement);\n\n/**\n * Represents an XML text value.\n * @api private\n */\nfunction XmlText(value) {\n    this.value = value;\n}\n\nXmlText.prototype.toString = function () {\n    return escapeElement('' + this.value);\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n    XmlText: XmlText\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC94bWwtdGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IseUhBQXlDOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbGliL3htbC94bWwtdGV4dC5qcz82OWQ3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBlc2NhcGVFbGVtZW50ID0gcmVxdWlyZSgnLi9lc2NhcGUtZWxlbWVudCcpLmVzY2FwZUVsZW1lbnQ7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhbiBYTUwgdGV4dCB2YWx1ZS5cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBYbWxUZXh0KHZhbHVlKSB7XG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xufVxuXG5YbWxUZXh0LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZXNjYXBlRWxlbWVudCgnJyArIHRoaXMudmFsdWUpO1xufTtcblxuLyoqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgWG1sVGV4dDogWG1sVGV4dFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/lib/xml/xml-text.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js":
/*!************************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nvar _default = bytesToUuid;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ieXRlc1RvVXVpZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTs7QUFFZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUF1Qjs7QUFFdkI7QUFDQTs7QUFFQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ieXRlc1RvVXVpZC5qcz8yOTA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbnZhciBieXRlVG9IZXggPSBbXTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXhbaV0gPSAoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpO1xufVxuXG5mdW5jdGlvbiBieXRlc1RvVXVpZChidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IG9mZnNldCB8fCAwO1xuICB2YXIgYnRoID0gYnl0ZVRvSGV4OyAvLyBqb2luIHVzZWQgdG8gZml4IG1lbW9yeSBpc3N1ZSBjYXVzZWQgYnkgY29uY2F0ZW5hdGlvbjogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzE3NSNjNFxuXG4gIHJldHVybiBbYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCAnLScsIGJ0aFtidWZbaSsrXV0sIGJ0aFtidWZbaSsrXV0sICctJywgYnRoW2J1ZltpKytdXSwgYnRoW2J1ZltpKytdXSwgJy0nLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dLCBidGhbYnVmW2krK11dXS5qb2luKCcnKTtcbn1cblxudmFyIF9kZWZhdWx0ID0gYnl0ZXNUb1V1aWQ7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"v1\", ({\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n}));\nObject.defineProperty(exports, \"v3\", ({\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n}));\nObject.defineProperty(exports, \"v4\", ({\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n}));\nObject.defineProperty(exports, \"v5\", ({\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n}));\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v1.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v1.js\"));\n\nvar _v2 = _interopRequireDefault(__webpack_require__(/*! ./v3.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v3.js\"));\n\nvar _v3 = _interopRequireDefault(__webpack_require__(/*! ./v4.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v4.js\"));\n\nvar _v4 = _interopRequireDefault(__webpack_require__(/*! ./v5.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixzQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixzQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixzQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRixzQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7O0FBRUYsZ0NBQWdDLG1CQUFPLENBQUMsOEVBQVM7O0FBRWpELGlDQUFpQyxtQkFBTyxDQUFDLDhFQUFTOztBQUVsRCxpQ0FBaUMsbUJBQU8sQ0FBQyw4RUFBUzs7QUFFbEQsaUNBQWlDLG1CQUFPLENBQUMsOEVBQVM7O0FBRWxELHVDQUF1Qyx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2luZGV4LmpzPzA4MjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2MVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInYzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92Mi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInY0XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92My5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInY1XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92NC5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MS5qc1wiKSk7XG5cbnZhciBfdjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3YzLmpzXCIpKTtcblxudmFyIF92MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjQuanNcIikpO1xuXG52YXIgX3Y0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92NS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/md5.js":
/*!****************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/md5.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9tZDUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7O0FBRWYscUNBQXFDLG1CQUFPLENBQUMsc0JBQVE7O0FBRXJELHVDQUF1Qyx1Q0FBdUM7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvbWQ1LmpzPzZhNWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfY3J5cHRvID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiY3J5cHRvXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gbWQ1KGJ5dGVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBieXRlcyA9PT0gJ3N0cmluZycpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzLCAndXRmOCcpO1xuICB9XG5cbiAgcmV0dXJuIF9jcnlwdG8uZGVmYXVsdC5jcmVhdGVIYXNoKCdtZDUnKS51cGRhdGUoYnl0ZXMpLmRpZ2VzdCgpO1xufVxuXG52YXIgX2RlZmF1bHQgPSBtZDU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/md5.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/rng.js":
/*!****************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/rng.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = rng;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rng() {\n  return _crypto.default.randomBytes(16);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ybmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7O0FBRWYscUNBQXFDLG1CQUFPLENBQUMsc0JBQVE7O0FBRXJELHVDQUF1Qyx1Q0FBdUM7O0FBRTlFO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3Qvcm5nLmpzP2FiZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBybmc7XG5cbnZhciBfY3J5cHRvID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiY3J5cHRvXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcm5nKCkge1xuICByZXR1cm4gX2NyeXB0by5kZWZhdWx0LnJhbmRvbUJ5dGVzKDE2KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/rng.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/sha1.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/sha1.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9zaGExLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlOztBQUVmLHFDQUFxQyxtQkFBTyxDQUFDLHNCQUFROztBQUVyRCx1Q0FBdUMsdUNBQXVDOztBQUU5RTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3NoYTEuanM/YWEwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9jcnlwdG8gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjcnlwdG9cIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBieXRlcyA9PT0gJ3N0cmluZycpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzLCAndXRmOCcpO1xuICB9XG5cbiAgcmV0dXJuIF9jcnlwdG8uZGVmYXVsdC5jcmVhdGVIYXNoKCdzaGExJykudXBkYXRlKGJ5dGVzKS5kaWdlc3QoKTtcbn1cblxudmFyIF9kZWZhdWx0ID0gc2hhMTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/sha1.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v1.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/v1.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/rng.js\"));\n\nvar _bytesToUuid = _interopRequireDefault(__webpack_require__(/*! ./bytesToUuid.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : (0, _bytesToUuid.default)(b);\n}\n\nvar _default = v1;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTs7QUFFZixrQ0FBa0MsbUJBQU8sQ0FBQyxnRkFBVTs7QUFFcEQsMENBQTBDLG1CQUFPLENBQUMsZ0dBQWtCOztBQUVwRSx1Q0FBdUMsdUNBQXVDOztBQUU5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWU7OztBQUdmO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGO0FBQ2hGO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7OztBQUdBLGtGQUFrRjtBQUNsRjs7QUFFQSw0RUFBNEU7O0FBRTVFLDhEQUE4RDs7QUFFOUQ7QUFDQTtBQUNBLElBQUk7QUFDSjs7O0FBR0E7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esd0JBQXdCOztBQUV4QiwyQkFBMkI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCOztBQUV0QjtBQUNBO0FBQ0EsdUJBQXVCOztBQUV2QixvQ0FBb0M7O0FBRXBDLDhCQUE4Qjs7QUFFOUIsa0NBQWtDOztBQUVsQyw0QkFBNEI7O0FBRTVCLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MS5qcz8zMzUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JuZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcm5nLmpzXCIpKTtcblxudmFyIF9ieXRlc1RvVXVpZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vYnl0ZXNUb1V1aWQuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG52YXIgX25vZGVJZDtcblxudmFyIF9jbG9ja3NlcTsgLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG5cblxudmFyIF9sYXN0TVNlY3MgPSAwO1xudmFyIF9sYXN0TlNlY3MgPSAwOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkIGZvciBBUEkgZGV0YWlsc1xuXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgW107XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICB2YXIgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICB2YXIgc2VlZEJ5dGVzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IF9ybmcuZGVmYXVsdCkoKTtcblxuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbc2VlZEJ5dGVzWzBdIHwgMHgwMSwgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1dO1xuICAgIH1cblxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfSAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cblxuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgLy8gUGVyIDQuMi4xLjIsIHVzZSBjb3VudCBvZiB1dWlkJ3MgZ2VuZXJhdGVkIGR1cmluZyB0aGUgY3VycmVudCBjbG9ja1xuICAvLyBjeWNsZSB0byBzaW11bGF0ZSBoaWdoZXIgcmVzb2x1dGlvbiBjbG9ja1xuXG4gIHZhciBuc2VjcyA9IG9wdGlvbnMubnNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNlY3MgOiBfbGFzdE5TZWNzICsgMTsgLy8gVGltZSBzaW5jZSBsYXN0IHV1aWQgY3JlYXRpb24gKGluIG1zZWNzKVxuXG4gIHZhciBkdCA9IG1zZWNzIC0gX2xhc3RNU2VjcyArIChuc2VjcyAtIF9sYXN0TlNlY3MpIC8gMTAwMDA7IC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9IC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcblxuXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9IC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcblxuXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInV1aWQudjEoKTogQ2FuJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjXCIpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxOyAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcblxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDsgLy8gYHRpbWVfbG93YFxuXG4gIHZhciB0bCA9ICgobXNlY3MgJiAweGZmZmZmZmYpICogMTAwMDAgKyBuc2VjcykgJSAweDEwMDAwMDAwMDtcbiAgYltpKytdID0gdGwgPj4+IDI0ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDE2ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bCAmIDB4ZmY7IC8vIGB0aW1lX21pZGBcblxuICB2YXIgdG1oID0gbXNlY3MgLyAweDEwMDAwMDAwMCAqIDEwMDAwICYgMHhmZmZmZmZmO1xuICBiW2krK10gPSB0bWggPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bWggJiAweGZmOyAvLyBgdGltZV9oaWdoX2FuZF92ZXJzaW9uYFxuXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMjQgJiAweGYgfCAweDEwOyAvLyBpbmNsdWRlIHZlcnNpb25cblxuICBiW2krK10gPSB0bWggPj4+IDE2ICYgMHhmZjsgLy8gYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgIChQZXIgNC4yLjIgLSBpbmNsdWRlIHZhcmlhbnQpXG5cbiAgYltpKytdID0gY2xvY2tzZXEgPj4+IDggfCAweDgwOyAvLyBgY2xvY2tfc2VxX2xvd2BcblxuICBiW2krK10gPSBjbG9ja3NlcSAmIDB4ZmY7IC8vIGBub2RlYFxuXG4gIGZvciAodmFyIG4gPSAwOyBuIDwgNjsgKytuKSB7XG4gICAgYltpICsgbl0gPSBub2RlW25dO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZiA/IGJ1ZiA6ICgwLCBfYnl0ZXNUb1V1aWQuZGVmYXVsdCkoYik7XG59XG5cbnZhciBfZGVmYXVsdCA9IHYxO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v1.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v3.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/v3.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v35.js\"));\n\nvar _md = _interopRequireDefault(__webpack_require__(/*! ./md5.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92My5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTs7QUFFZixnQ0FBZ0MsbUJBQU8sQ0FBQyxnRkFBVTs7QUFFbEQsaUNBQWlDLG1CQUFPLENBQUMsZ0ZBQVU7O0FBRW5ELHVDQUF1Qyx1Q0FBdUM7O0FBRTlFO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjMuanM/YzQ2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MzUuanNcIikpO1xuXG52YXIgX21kID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9tZDUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5jb25zdCB2MyA9ICgwLCBfdi5kZWZhdWx0KSgndjMnLCAweDMwLCBfbWQuZGVmYXVsdCk7XG52YXIgX2RlZmF1bHQgPSB2MztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v3.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v35.js":
/*!****************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/v35.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _bytesToUuid = _interopRequireDefault(__webpack_require__(/*! ./bytesToUuid.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = new Array(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  var generateUUID = function (value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n    if (typeof value == 'string') value = stringToBytes(value);\n    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3\n\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || (0, _bytesToUuid.default)(bytes);\n  }; // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name;\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92MzUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZixXQUFXLEdBQUcsV0FBVzs7QUFFekIsMENBQTBDLG1CQUFPLENBQUMsZ0dBQWtCOztBQUVwRSx1Q0FBdUMsdUNBQXVDOztBQUU5RTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsRUFBRTtBQUM5QjtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDOztBQUUzQzs7QUFFQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVc7QUFDWDtBQUNBLFdBQVc7O0FBRVg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOElBQThJOztBQUU5STtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsVUFBVTtBQUNsQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOzs7QUFHTDtBQUNBO0FBQ0EsSUFBSSxlQUFlOzs7QUFHbkI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3YzNS5qcz8wYTY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5leHBvcnRzLlVSTCA9IGV4cG9ydHMuRE5TID0gdm9pZCAwO1xuXG52YXIgX2J5dGVzVG9VdWlkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ieXRlc1RvVXVpZC5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIHV1aWRUb0J5dGVzKHV1aWQpIHtcbiAgLy8gTm90ZTogV2UgYXNzdW1lIHdlJ3JlIGJlaW5nIHBhc3NlZCBhIHZhbGlkIHV1aWQgc3RyaW5nXG4gIHZhciBieXRlcyA9IFtdO1xuICB1dWlkLnJlcGxhY2UoL1thLWZBLUYwLTldezJ9L2csIGZ1bmN0aW9uIChoZXgpIHtcbiAgICBieXRlcy5wdXNoKHBhcnNlSW50KGhleCwgMTYpKTtcbiAgfSk7XG4gIHJldHVybiBieXRlcztcbn1cblxuZnVuY3Rpb24gc3RyaW5nVG9CeXRlcyhzdHIpIHtcbiAgc3RyID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpOyAvLyBVVEY4IGVzY2FwZVxuXG4gIHZhciBieXRlcyA9IG5ldyBBcnJheShzdHIubGVuZ3RoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGJ5dGVzW2ldID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gIH1cblxuICByZXR1cm4gYnl0ZXM7XG59XG5cbmNvbnN0IEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0cy5ETlMgPSBETlM7XG5jb25zdCBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydHMuVVJMID0gVVJMO1xuXG5mdW5jdGlvbiBfZGVmYXVsdChuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICB2YXIgZ2VuZXJhdGVVVUlEID0gZnVuY3Rpb24gKHZhbHVlLCBuYW1lc3BhY2UsIGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIG9mZiA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB2YWx1ZSA9IHN0cmluZ1RvQnl0ZXModmFsdWUpO1xuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlID09ICdzdHJpbmcnKSBuYW1lc3BhY2UgPSB1dWlkVG9CeXRlcyhuYW1lc3BhY2UpO1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHRocm93IFR5cGVFcnJvcigndmFsdWUgbXVzdCBiZSBhbiBhcnJheSBvZiBieXRlcycpO1xuICAgIGlmICghQXJyYXkuaXNBcnJheShuYW1lc3BhY2UpIHx8IG5hbWVzcGFjZS5sZW5ndGggIT09IDE2KSB0aHJvdyBUeXBlRXJyb3IoJ25hbWVzcGFjZSBtdXN0IGJlIHV1aWQgc3RyaW5nIG9yIGFuIEFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzJyk7IC8vIFBlciA0LjNcblxuICAgIHZhciBieXRlcyA9IGhhc2hmdW5jKG5hbWVzcGFjZS5jb25jYXQodmFsdWUpKTtcbiAgICBieXRlc1s2XSA9IGJ5dGVzWzZdICYgMHgwZiB8IHZlcnNpb247XG4gICAgYnl0ZXNbOF0gPSBieXRlc1s4XSAmIDB4M2YgfCAweDgwO1xuXG4gICAgaWYgKGJ1Zikge1xuICAgICAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwgMTY7ICsraWR4KSB7XG4gICAgICAgIGJ1ZltvZmYgKyBpZHhdID0gYnl0ZXNbaWR4XTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYnVmIHx8ICgwLCBfYnl0ZXNUb1V1aWQuZGVmYXVsdCkoYnl0ZXMpO1xuICB9OyAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lO1xuICB9IGNhdGNoIChlcnIpIHt9IC8vIEZvciBDb21tb25KUyBkZWZhdWx0IGV4cG9ydCBzdXBwb3J0XG5cblxuICBnZW5lcmF0ZVVVSUQuRE5TID0gRE5TO1xuICBnZW5lcmF0ZVVVSUQuVVJMID0gVVJMO1xuICByZXR1cm4gZ2VuZXJhdGVVVUlEO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v35.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v4.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/v4.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/rng.js\"));\n\nvar _bytesToUuid = _interopRequireDefault(__webpack_require__(/*! ./bytesToUuid.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || (0, _bytesToUuid.default)(rnds);\n}\n\nvar _default = v4;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTs7QUFFZixrQ0FBa0MsbUJBQU8sQ0FBQyxnRkFBVTs7QUFFcEQsMENBQTBDLG1CQUFPLENBQUMsZ0dBQWtCOztBQUVwRSx1Q0FBdUMsdUNBQXVDOztBQUU5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdFQUFnRTs7O0FBR2hFO0FBQ0EsbUNBQW1DOztBQUVuQztBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L3Y0LmpzPzFhMTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcm5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ybmcuanNcIikpO1xuXG52YXIgX2J5dGVzVG9VdWlkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ieXRlc1RvVXVpZC5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIHZhciBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PSAnc3RyaW5nJykge1xuICAgIGJ1ZiA9IG9wdGlvbnMgPT09ICdiaW5hcnknID8gbmV3IEFycmF5KDE2KSA6IG51bGw7XG4gICAgb3B0aW9ucyA9IG51bGw7XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICB2YXIgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBfcm5nLmRlZmF1bHQpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBmb3IgKHZhciBpaSA9IDA7IGlpIDwgMTY7ICsraWkpIHtcbiAgICAgIGJ1ZltpICsgaWldID0gcm5kc1tpaV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJ1ZiB8fCAoMCwgX2J5dGVzVG9VdWlkLmRlZmF1bHQpKHJuZHMpO1xufVxuXG52YXIgX2RlZmF1bHQgPSB2NDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v4.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v5.js":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/uuid/dist/v5.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v35.js\"));\n\nvar _sha = _interopRequireDefault(__webpack_require__(/*! ./sha1.js */ \"(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTs7QUFFZixnQ0FBZ0MsbUJBQU8sQ0FBQyxnRkFBVTs7QUFFbEQsa0NBQWtDLG1CQUFPLENBQUMsa0ZBQVc7O0FBRXJELHVDQUF1Qyx1Q0FBdUM7O0FBRTlFO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjUuanM/OTdmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MzUuanNcIikpO1xuXG52YXIgX3NoYSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2hhMS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmNvbnN0IHY1ID0gKDAsIF92LmRlZmF1bHQpKCd2NScsIDB4NTAsIF9zaGEuZGVmYXVsdCk7XG52YXIgX2RlZmF1bHQgPSB2NTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/uuid/dist/v5.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/bom.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/bom.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIvYm9tLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZ0JBQWdCO0FBQ2xCO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMveG1sMmpzL2xpYi9ib20uanM/ODdiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgZXhwb3J0cy5zdHJpcEJPTSA9IGZ1bmN0aW9uKHN0cikge1xuICAgIGlmIChzdHJbMF0gPT09ICdcXHVGRUZGJykge1xuICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcoMSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzdHI7XG4gICAgfVxuICB9O1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/bom.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/builder.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/builder.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = __webpack_require__(/*! xmlbuilder */ \"(rsc)/../../node_modules/xmlbuilder/lib/index.js\");\n\n  defaults = (__webpack_require__(/*! ./defaults */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js\").defaults);\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIvYnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjs7QUFFaEIsWUFBWSxtQkFBTyxDQUFDLG9FQUFZOztBQUVoQyxhQUFhLHdIQUE4Qjs7QUFFM0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxlQUFlO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7O0FBRUEsR0FBRzs7QUFFSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIvYnVpbGRlci5qcz85YzEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuICB2YXIgYnVpbGRlciwgZGVmYXVsdHMsIGVzY2FwZUNEQVRBLCByZXF1aXJlc0NEQVRBLCB3cmFwQ0RBVEEsXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGJ1aWxkZXIgPSByZXF1aXJlKCd4bWxidWlsZGVyJyk7XG5cbiAgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJykuZGVmYXVsdHM7XG5cbiAgcmVxdWlyZXNDREFUQSA9IGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gXCJzdHJpbmdcIiAmJiAoZW50cnkuaW5kZXhPZignJicpID49IDAgfHwgZW50cnkuaW5kZXhPZignPicpID49IDAgfHwgZW50cnkuaW5kZXhPZignPCcpID49IDApO1xuICB9O1xuXG4gIHdyYXBDREFUQSA9IGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgcmV0dXJuIFwiPCFbQ0RBVEFbXCIgKyAoZXNjYXBlQ0RBVEEoZW50cnkpKSArIFwiXV0+XCI7XG4gIH07XG5cbiAgZXNjYXBlQ0RBVEEgPSBmdW5jdGlvbihlbnRyeSkge1xuICAgIHJldHVybiBlbnRyeS5yZXBsYWNlKCddXT4nLCAnXV1dXT48IVtDREFUQVs+Jyk7XG4gIH07XG5cbiAgZXhwb3J0cy5CdWlsZGVyID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIEJ1aWxkZXIob3B0cykge1xuICAgICAgdmFyIGtleSwgcmVmLCB2YWx1ZTtcbiAgICAgIHRoaXMub3B0aW9ucyA9IHt9O1xuICAgICAgcmVmID0gZGVmYXVsdHNbXCIwLjJcIl07XG4gICAgICBmb3IgKGtleSBpbiByZWYpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwocmVmLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgdmFsdWUgPSByZWZba2V5XTtcbiAgICAgICAgdGhpcy5vcHRpb25zW2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIGZvciAoa2V5IGluIG9wdHMpIHtcbiAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwob3B0cywga2V5KSkgY29udGludWU7XG4gICAgICAgIHZhbHVlID0gb3B0c1trZXldO1xuICAgICAgICB0aGlzLm9wdGlvbnNba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIEJ1aWxkZXIucHJvdG90eXBlLmJ1aWxkT2JqZWN0ID0gZnVuY3Rpb24ocm9vdE9iaikge1xuICAgICAgdmFyIGF0dHJrZXksIGNoYXJrZXksIHJlbmRlciwgcm9vdEVsZW1lbnQsIHJvb3ROYW1lO1xuICAgICAgYXR0cmtleSA9IHRoaXMub3B0aW9ucy5hdHRya2V5O1xuICAgICAgY2hhcmtleSA9IHRoaXMub3B0aW9ucy5jaGFya2V5O1xuICAgICAgaWYgKChPYmplY3Qua2V5cyhyb290T2JqKS5sZW5ndGggPT09IDEpICYmICh0aGlzLm9wdGlvbnMucm9vdE5hbWUgPT09IGRlZmF1bHRzWycwLjInXS5yb290TmFtZSkpIHtcbiAgICAgICAgcm9vdE5hbWUgPSBPYmplY3Qua2V5cyhyb290T2JqKVswXTtcbiAgICAgICAgcm9vdE9iaiA9IHJvb3RPYmpbcm9vdE5hbWVdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcm9vdE5hbWUgPSB0aGlzLm9wdGlvbnMucm9vdE5hbWU7XG4gICAgICB9XG4gICAgICByZW5kZXIgPSAoZnVuY3Rpb24oX3RoaXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKGVsZW1lbnQsIG9iaikge1xuICAgICAgICAgIHZhciBhdHRyLCBjaGlsZCwgZW50cnksIGluZGV4LCBrZXksIHZhbHVlO1xuICAgICAgICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKF90aGlzLm9wdGlvbnMuY2RhdGEgJiYgcmVxdWlyZXNDREFUQShvYmopKSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQucmF3KHdyYXBDREFUQShvYmopKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGVsZW1lbnQudHh0KG9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgICAgIGZvciAoaW5kZXggaW4gb2JqKSB7XG4gICAgICAgICAgICAgIGlmICghaGFzUHJvcC5jYWxsKG9iaiwgaW5kZXgpKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgY2hpbGQgPSBvYmpbaW5kZXhdO1xuICAgICAgICAgICAgICBmb3IgKGtleSBpbiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGVudHJ5ID0gY2hpbGRba2V5XTtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gcmVuZGVyKGVsZW1lbnQuZWxlKGtleSksIGVudHJ5KS51cCgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoa2V5IGluIG9iaikge1xuICAgICAgICAgICAgICBpZiAoIWhhc1Byb3AuY2FsbChvYmosIGtleSkpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICBjaGlsZCA9IG9ialtrZXldO1xuICAgICAgICAgICAgICBpZiAoa2V5ID09PSBhdHRya2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgZm9yIChhdHRyIGluIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gY2hpbGRbYXR0cl07XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LmF0dChhdHRyLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gY2hhcmtleSkge1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmNkYXRhICYmIHJlcXVpcmVzQ0RBVEEoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5yYXcod3JhcENEQVRBKGNoaWxkKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnR4dChjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChpbmRleCBpbiBjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoY2hpbGQsIGluZGV4KSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICBlbnRyeSA9IGNoaWxkW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5vcHRpb25zLmNkYXRhICYmIHJlcXVpcmVzQ0RBVEEoZW50cnkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSkucmF3KHdyYXBDREFUQShlbnRyeSkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSwgZW50cnkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSByZW5kZXIoZWxlbWVudC5lbGUoa2V5KSwgZW50cnkpLnVwKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjaGlsZCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSByZW5kZXIoZWxlbWVudC5lbGUoa2V5KSwgY2hpbGQpLnVwKCk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ3N0cmluZycgJiYgX3RoaXMub3B0aW9ucy5jZGF0YSAmJiByZXF1aXJlc0NEQVRBKGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IGVsZW1lbnQuZWxlKGtleSkucmF3KHdyYXBDREFUQShjaGlsZCkpLnVwKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGlmIChjaGlsZCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gJyc7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5lbGUoa2V5LCBjaGlsZC50b1N0cmluZygpKS51cCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgfTtcbiAgICAgIH0pKHRoaXMpO1xuICAgICAgcm9vdEVsZW1lbnQgPSBidWlsZGVyLmNyZWF0ZShyb290TmFtZSwgdGhpcy5vcHRpb25zLnhtbGRlYywgdGhpcy5vcHRpb25zLmRvY3R5cGUsIHtcbiAgICAgICAgaGVhZGxlc3M6IHRoaXMub3B0aW9ucy5oZWFkbGVzcyxcbiAgICAgICAgYWxsb3dTdXJyb2dhdGVDaGFyczogdGhpcy5vcHRpb25zLmFsbG93U3Vycm9nYXRlQ2hhcnNcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlbmRlcihyb290RWxlbWVudCwgcm9vdE9iaikuZW5kKHRoaXMub3B0aW9ucy5yZW5kZXJPcHRzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIEJ1aWxkZXI7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/builder.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIvZGVmYXVsdHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLEVBQUUsZ0JBQWdCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMveG1sMmpzL2xpYi9kZWZhdWx0cy5qcz9jYWE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIGV4cG9ydHMuZGVmYXVsdHMgPSB7XG4gICAgXCIwLjFcIjoge1xuICAgICAgZXhwbGljaXRDaGFya2V5OiBmYWxzZSxcbiAgICAgIHRyaW06IHRydWUsXG4gICAgICBub3JtYWxpemU6IHRydWUsXG4gICAgICBub3JtYWxpemVUYWdzOiBmYWxzZSxcbiAgICAgIGF0dHJrZXk6IFwiQFwiLFxuICAgICAgY2hhcmtleTogXCIjXCIsXG4gICAgICBleHBsaWNpdEFycmF5OiBmYWxzZSxcbiAgICAgIGlnbm9yZUF0dHJzOiBmYWxzZSxcbiAgICAgIG1lcmdlQXR0cnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRSb290OiBmYWxzZSxcbiAgICAgIHZhbGlkYXRvcjogbnVsbCxcbiAgICAgIHhtbG5zOiBmYWxzZSxcbiAgICAgIGV4cGxpY2l0Q2hpbGRyZW46IGZhbHNlLFxuICAgICAgY2hpbGRrZXk6ICdAQCcsXG4gICAgICBjaGFyc0FzQ2hpbGRyZW46IGZhbHNlLFxuICAgICAgaW5jbHVkZVdoaXRlQ2hhcnM6IGZhbHNlLFxuICAgICAgYXN5bmM6IGZhbHNlLFxuICAgICAgc3RyaWN0OiB0cnVlLFxuICAgICAgYXR0ck5hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgYXR0clZhbHVlUHJvY2Vzc29yczogbnVsbCxcbiAgICAgIHRhZ05hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgdmFsdWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgZW1wdHlUYWc6ICcnXG4gICAgfSxcbiAgICBcIjAuMlwiOiB7XG4gICAgICBleHBsaWNpdENoYXJrZXk6IGZhbHNlLFxuICAgICAgdHJpbTogZmFsc2UsXG4gICAgICBub3JtYWxpemU6IGZhbHNlLFxuICAgICAgbm9ybWFsaXplVGFnczogZmFsc2UsXG4gICAgICBhdHRya2V5OiBcIiRcIixcbiAgICAgIGNoYXJrZXk6IFwiX1wiLFxuICAgICAgZXhwbGljaXRBcnJheTogdHJ1ZSxcbiAgICAgIGlnbm9yZUF0dHJzOiBmYWxzZSxcbiAgICAgIG1lcmdlQXR0cnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRSb290OiB0cnVlLFxuICAgICAgdmFsaWRhdG9yOiBudWxsLFxuICAgICAgeG1sbnM6IGZhbHNlLFxuICAgICAgZXhwbGljaXRDaGlsZHJlbjogZmFsc2UsXG4gICAgICBwcmVzZXJ2ZUNoaWxkcmVuT3JkZXI6IGZhbHNlLFxuICAgICAgY2hpbGRrZXk6ICckJCcsXG4gICAgICBjaGFyc0FzQ2hpbGRyZW46IGZhbHNlLFxuICAgICAgaW5jbHVkZVdoaXRlQ2hhcnM6IGZhbHNlLFxuICAgICAgYXN5bmM6IGZhbHNlLFxuICAgICAgc3RyaWN0OiB0cnVlLFxuICAgICAgYXR0ck5hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgYXR0clZhbHVlUHJvY2Vzc29yczogbnVsbCxcbiAgICAgIHRhZ05hbWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgdmFsdWVQcm9jZXNzb3JzOiBudWxsLFxuICAgICAgcm9vdE5hbWU6ICdyb290JyxcbiAgICAgIHhtbGRlYzoge1xuICAgICAgICAndmVyc2lvbic6ICcxLjAnLFxuICAgICAgICAnZW5jb2RpbmcnOiAnVVRGLTgnLFxuICAgICAgICAnc3RhbmRhbG9uZSc6IHRydWVcbiAgICAgIH0sXG4gICAgICBkb2N0eXBlOiBudWxsLFxuICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAncHJldHR5JzogdHJ1ZSxcbiAgICAgICAgJ2luZGVudCc6ICcgICcsXG4gICAgICAgICduZXdsaW5lJzogJ1xcbidcbiAgICAgIH0sXG4gICAgICBoZWFkbGVzczogZmFsc2UsXG4gICAgICBjaHVua1NpemU6IDEwMDAwLFxuICAgICAgZW1wdHlUYWc6ICcnLFxuICAgICAgY2RhdGE6IGZhbHNlXG4gICAgfVxuICB9O1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/parser.js":
/*!********************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/parser.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, defineProperty, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = __webpack_require__(/*! sax */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/node_modules/sax/lib/sax.js\");\n\n  events = __webpack_require__(/*! events */ \"events\");\n\n  bom = __webpack_require__(/*! ./bom */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/bom.js\");\n\n  processors = __webpack_require__(/*! ./processors */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/processors.js\");\n\n  setImmediate = (__webpack_require__(/*! timers */ \"timers\").setImmediate);\n\n  defaults = (__webpack_require__(/*! ./defaults */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js\").defaults);\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  defineProperty = function(obj, key, value) {\n    var descriptor;\n    descriptor = Object.create(null);\n    descriptor.value = value;\n    descriptor.writable = true;\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return Object.defineProperty(obj, key, descriptor);\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return defineProperty(obj, key, newValue);\n        } else {\n          return defineProperty(obj, key, [newValue]);\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          defineProperty(obj, key, [obj[key]]);\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                defineProperty(obj[attrkey], processedKey, newValue);\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            if (typeof _this.options.emptyTag === 'function') {\n              obj = _this.options.emptyTag();\n            } else {\n              obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n            }\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                defineProperty(objClone, key, obj[key]);\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              defineProperty(obj, nodeName, old);\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/parser.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/processors.js":
/*!************************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/processors.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIvcHJvY2Vzc29ycy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxFQUFFLGlCQUFpQjtBQUNuQjtBQUNBOztBQUVBLEVBQUUsMEJBQTBCO0FBQzVCO0FBQ0E7O0FBRUEsRUFBRSxtQkFBbUI7QUFDckI7QUFDQTs7QUFFQSxFQUFFLG9CQUFvQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUscUJBQXFCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0Btb25vZXhwby9uZXh0Ly4uLy4uL25vZGVfbW9kdWxlcy9hd3Mtc2RrL25vZGVfbW9kdWxlcy94bWwyanMvbGliL3Byb2Nlc3NvcnMuanM/Mzg0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIHByZWZpeE1hdGNoO1xuXG4gIHByZWZpeE1hdGNoID0gbmV3IFJlZ0V4cCgvKD8heG1sbnMpXi4qOi8pO1xuXG4gIGV4cG9ydHMubm9ybWFsaXplID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpO1xuICB9O1xuXG4gIGV4cG9ydHMuZmlyc3RDaGFyTG93ZXJDYXNlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIHN0ci5zbGljZSgxKTtcbiAgfTtcblxuICBleHBvcnRzLnN0cmlwUHJlZml4ID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKHByZWZpeE1hdGNoLCAnJyk7XG4gIH07XG5cbiAgZXhwb3J0cy5wYXJzZU51bWJlcnMgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoIWlzTmFOKHN0cikpIHtcbiAgICAgIHN0ciA9IHN0ciAlIDEgPT09IDAgPyBwYXJzZUludChzdHIsIDEwKSA6IHBhcnNlRmxvYXQoc3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbiAgfTtcblxuICBleHBvcnRzLnBhcnNlQm9vbGVhbnMgPSBmdW5jdGlvbihzdHIpIHtcbiAgICBpZiAoL14oPzp0cnVlfGZhbHNlKSQvaS50ZXN0KHN0cikpIHtcbiAgICAgIHN0ciA9IHN0ci50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH07XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/processors.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/xml2js.js":
/*!********************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/lib/xml2js.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = __webpack_require__(/*! ./defaults */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/defaults.js\");\n\n  builder = __webpack_require__(/*! ./builder */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/builder.js\");\n\n  parser = __webpack_require__(/*! ./parser */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/parser.js\");\n\n  processors = __webpack_require__(/*! ./processors */ \"(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/processors.js\");\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9saWIveG1sMmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDBCQUEwQiwyREFBMkQsa0JBQWtCLDRCQUE0QixtQ0FBbUMsOEJBQThCLG9DQUFvQyxlQUFlO0FBQzlSLGdCQUFnQjs7QUFFaEIsYUFBYSxtQkFBTyxDQUFDLHdGQUFZOztBQUVqQyxZQUFZLG1CQUFPLENBQUMsc0ZBQVc7O0FBRS9CLFdBQVcsbUJBQU8sQ0FBQyxvRkFBVTs7QUFFN0IsZUFBZSxtQkFBTyxDQUFDLDRGQUFjOztBQUVyQyxFQUFFLGdCQUFnQjs7QUFFbEIsRUFBRSxrQkFBa0I7O0FBRXBCLEVBQUUsdUJBQXVCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxHQUFHOztBQUVILEVBQUUsZUFBZTs7QUFFakIsRUFBRSxjQUFjOztBQUVoQixFQUFFLG1CQUFtQjs7QUFFckIsRUFBRSwwQkFBMEI7O0FBRTVCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMveG1sMmpzL2xpYi94bWwyanMuanM/YjdjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgdmFyIGJ1aWxkZXIsIGRlZmF1bHRzLCBwYXJzZXIsIHByb2Nlc3NvcnMsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuICBidWlsZGVyID0gcmVxdWlyZSgnLi9idWlsZGVyJyk7XG5cbiAgcGFyc2VyID0gcmVxdWlyZSgnLi9wYXJzZXInKTtcblxuICBwcm9jZXNzb3JzID0gcmVxdWlyZSgnLi9wcm9jZXNzb3JzJyk7XG5cbiAgZXhwb3J0cy5kZWZhdWx0cyA9IGRlZmF1bHRzLmRlZmF1bHRzO1xuXG4gIGV4cG9ydHMucHJvY2Vzc29ycyA9IHByb2Nlc3NvcnM7XG5cbiAgZXhwb3J0cy5WYWxpZGF0aW9uRXJyb3IgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChWYWxpZGF0aW9uRXJyb3IsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gVmFsaWRhdGlvbkVycm9yKG1lc3NhZ2UpIHtcbiAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIFZhbGlkYXRpb25FcnJvcjtcblxuICB9KShFcnJvcik7XG5cbiAgZXhwb3J0cy5CdWlsZGVyID0gYnVpbGRlci5CdWlsZGVyO1xuXG4gIGV4cG9ydHMuUGFyc2VyID0gcGFyc2VyLlBhcnNlcjtcblxuICBleHBvcnRzLnBhcnNlU3RyaW5nID0gcGFyc2VyLnBhcnNlU3RyaW5nO1xuXG4gIGV4cG9ydHMucGFyc2VTdHJpbmdQcm9taXNlID0gcGFyc2VyLnBhcnNlU3RyaW5nUHJvbWlzZTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/lib/xml2js.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/node_modules/sax/lib/sax.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/node_modules/xml2js/node_modules/sax/lib/sax.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = (__webpack_require__(/*! stream */ \"stream\").Stream)\n  } catch (ex) {\n    Stream = function () {}\n  }\n  if (!Stream) Stream = function () {}\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = (__webpack_require__(/*! string_decoder */ \"string_decoder\").StringDecoder)\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            if (parser.opt.unparsedEntities) {\n              var parsedEntity = parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n              parser.write(parsedEntity)\n            } else {\n              parser[buffer] += parseEntity(parser)\n              parser.entity = ''\n              parser.state = returnState\n            }\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default: /* istanbul ignore next */ {\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n        }\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})( false ? 0 : exports)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvbm9kZV9tb2R1bGVzL3htbDJqcy9ub2RlX21vZHVsZXMvc2F4L2xpYi9zYXguanMiLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQyxrQkFBa0I7QUFDbkIsd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLE9BQU87QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3Q0FBd0MsT0FBTztBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0EsMEJBQTBCLG1CQUFtQixhQUFhO0FBQzFELHlCQUF5Qix5QkFBeUI7QUFDbEQseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQSxhQUFhLG9EQUF3QjtBQUNyQyxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsMkVBQXVDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qjs7QUFFN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELE9BQU87QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELG1CQUFtQjtBQUNwRSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBLFlBQVksT0FBTyxzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDLEVBQUUsTUFBOEIsR0FBRyxDQUFhLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay9ub2RlX21vZHVsZXMveG1sMmpzL25vZGVfbW9kdWxlcy9zYXgvbGliL3NheC5qcz83MWYwIl0sInNvdXJjZXNDb250ZW50IjpbIjsoZnVuY3Rpb24gKHNheCkgeyAvLyB3cmFwcGVyIGZvciBub24tbm9kZSBlbnZzXG4gIHNheC5wYXJzZXIgPSBmdW5jdGlvbiAoc3RyaWN0LCBvcHQpIHsgcmV0dXJuIG5ldyBTQVhQYXJzZXIoc3RyaWN0LCBvcHQpIH1cbiAgc2F4LlNBWFBhcnNlciA9IFNBWFBhcnNlclxuICBzYXguU0FYU3RyZWFtID0gU0FYU3RyZWFtXG4gIHNheC5jcmVhdGVTdHJlYW0gPSBjcmVhdGVTdHJlYW1cblxuICAvLyBXaGVuIHdlIHBhc3MgdGhlIE1BWF9CVUZGRVJfTEVOR1RIIHBvc2l0aW9uLCBzdGFydCBjaGVja2luZyBmb3IgYnVmZmVyIG92ZXJydW5zLlxuICAvLyBXaGVuIHdlIGNoZWNrLCBzY2hlZHVsZSB0aGUgbmV4dCBjaGVjayBmb3IgTUFYX0JVRkZFUl9MRU5HVEggLSAobWF4KGJ1ZmZlciBsZW5ndGhzKSksXG4gIC8vIHNpbmNlIHRoYXQncyB0aGUgZWFybGllc3QgdGhhdCBhIGJ1ZmZlciBvdmVycnVuIGNvdWxkIG9jY3VyLiAgVGhpcyB3YXksIGNoZWNrcyBhcmVcbiAgLy8gYXMgcmFyZSBhcyByZXF1aXJlZCwgYnV0IGFzIG9mdGVuIGFzIG5lY2Vzc2FyeSB0byBlbnN1cmUgbmV2ZXIgY3Jvc3NpbmcgdGhpcyBib3VuZC5cbiAgLy8gRnVydGhlcm1vcmUsIGJ1ZmZlcnMgYXJlIG9ubHkgdGVzdGVkIGF0IG1vc3Qgb25jZSBwZXIgd3JpdGUoKSwgc28gcGFzc2luZyBhIHZlcnlcbiAgLy8gbGFyZ2Ugc3RyaW5nIGludG8gd3JpdGUoKSBtaWdodCBoYXZlIHVuZGVzaXJhYmxlIGVmZmVjdHMsIGJ1dCB0aGlzIGlzIG1hbmFnZWFibGUgYnlcbiAgLy8gdGhlIGNhbGxlciwgc28gaXQgaXMgYXNzdW1lZCB0byBiZSBzYWZlLiAgVGh1cywgYSBjYWxsIHRvIHdyaXRlKCkgbWF5LCBpbiB0aGUgZXh0cmVtZVxuICAvLyBlZGdlIGNhc2UsIHJlc3VsdCBpbiBjcmVhdGluZyBhdCBtb3N0IG9uZSBjb21wbGV0ZSBjb3B5IG9mIHRoZSBzdHJpbmcgcGFzc2VkIGluLlxuICAvLyBTZXQgdG8gSW5maW5pdHkgdG8gaGF2ZSB1bmxpbWl0ZWQgYnVmZmVycy5cbiAgc2F4Lk1BWF9CVUZGRVJfTEVOR1RIID0gNjQgKiAxMDI0XG5cbiAgdmFyIGJ1ZmZlcnMgPSBbXG4gICAgJ2NvbW1lbnQnLCAnc2dtbERlY2wnLCAndGV4dE5vZGUnLCAndGFnTmFtZScsICdkb2N0eXBlJyxcbiAgICAncHJvY0luc3ROYW1lJywgJ3Byb2NJbnN0Qm9keScsICdlbnRpdHknLCAnYXR0cmliTmFtZScsXG4gICAgJ2F0dHJpYlZhbHVlJywgJ2NkYXRhJywgJ3NjcmlwdCdcbiAgXVxuXG4gIHNheC5FVkVOVFMgPSBbXG4gICAgJ3RleHQnLFxuICAgICdwcm9jZXNzaW5naW5zdHJ1Y3Rpb24nLFxuICAgICdzZ21sZGVjbGFyYXRpb24nLFxuICAgICdkb2N0eXBlJyxcbiAgICAnY29tbWVudCcsXG4gICAgJ29wZW50YWdzdGFydCcsXG4gICAgJ2F0dHJpYnV0ZScsXG4gICAgJ29wZW50YWcnLFxuICAgICdjbG9zZXRhZycsXG4gICAgJ29wZW5jZGF0YScsXG4gICAgJ2NkYXRhJyxcbiAgICAnY2xvc2VjZGF0YScsXG4gICAgJ2Vycm9yJyxcbiAgICAnZW5kJyxcbiAgICAncmVhZHknLFxuICAgICdzY3JpcHQnLFxuICAgICdvcGVubmFtZXNwYWNlJyxcbiAgICAnY2xvc2VuYW1lc3BhY2UnXG4gIF1cblxuICBmdW5jdGlvbiBTQVhQYXJzZXIgKHN0cmljdCwgb3B0KSB7XG4gICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFNBWFBhcnNlcikpIHtcbiAgICAgIHJldHVybiBuZXcgU0FYUGFyc2VyKHN0cmljdCwgb3B0KVxuICAgIH1cblxuICAgIHZhciBwYXJzZXIgPSB0aGlzXG4gICAgY2xlYXJCdWZmZXJzKHBhcnNlcilcbiAgICBwYXJzZXIucSA9IHBhcnNlci5jID0gJydcbiAgICBwYXJzZXIuYnVmZmVyQ2hlY2tQb3NpdGlvbiA9IHNheC5NQVhfQlVGRkVSX0xFTkdUSFxuICAgIHBhcnNlci5vcHQgPSBvcHQgfHwge31cbiAgICBwYXJzZXIub3B0Lmxvd2VyY2FzZSA9IHBhcnNlci5vcHQubG93ZXJjYXNlIHx8IHBhcnNlci5vcHQubG93ZXJjYXNldGFnc1xuICAgIHBhcnNlci5sb29zZUNhc2UgPSBwYXJzZXIub3B0Lmxvd2VyY2FzZSA/ICd0b0xvd2VyQ2FzZScgOiAndG9VcHBlckNhc2UnXG4gICAgcGFyc2VyLnRhZ3MgPSBbXVxuICAgIHBhcnNlci5jbG9zZWQgPSBwYXJzZXIuY2xvc2VkUm9vdCA9IHBhcnNlci5zYXdSb290ID0gZmFsc2VcbiAgICBwYXJzZXIudGFnID0gcGFyc2VyLmVycm9yID0gbnVsbFxuICAgIHBhcnNlci5zdHJpY3QgPSAhIXN0cmljdFxuICAgIHBhcnNlci5ub3NjcmlwdCA9ICEhKHN0cmljdCB8fCBwYXJzZXIub3B0Lm5vc2NyaXB0KVxuICAgIHBhcnNlci5zdGF0ZSA9IFMuQkVHSU5cbiAgICBwYXJzZXIuc3RyaWN0RW50aXRpZXMgPSBwYXJzZXIub3B0LnN0cmljdEVudGl0aWVzXG4gICAgcGFyc2VyLkVOVElUSUVTID0gcGFyc2VyLnN0cmljdEVudGl0aWVzID8gT2JqZWN0LmNyZWF0ZShzYXguWE1MX0VOVElUSUVTKSA6IE9iamVjdC5jcmVhdGUoc2F4LkVOVElUSUVTKVxuICAgIHBhcnNlci5hdHRyaWJMaXN0ID0gW11cblxuICAgIC8vIG5hbWVzcGFjZXMgZm9ybSBhIHByb3RvdHlwZSBjaGFpbi5cbiAgICAvLyBpdCBhbHdheXMgcG9pbnRzIGF0IHRoZSBjdXJyZW50IHRhZyxcbiAgICAvLyB3aGljaCBwcm90b3MgdG8gaXRzIHBhcmVudCB0YWcuXG4gICAgaWYgKHBhcnNlci5vcHQueG1sbnMpIHtcbiAgICAgIHBhcnNlci5ucyA9IE9iamVjdC5jcmVhdGUocm9vdE5TKVxuICAgIH1cblxuICAgIC8vIG1vc3RseSBqdXN0IGZvciBlcnJvciByZXBvcnRpbmdcbiAgICBwYXJzZXIudHJhY2tQb3NpdGlvbiA9IHBhcnNlci5vcHQucG9zaXRpb24gIT09IGZhbHNlXG4gICAgaWYgKHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICBwYXJzZXIucG9zaXRpb24gPSBwYXJzZXIubGluZSA9IHBhcnNlci5jb2x1bW4gPSAwXG4gICAgfVxuICAgIGVtaXQocGFyc2VyLCAnb25yZWFkeScpXG4gIH1cblxuICBpZiAoIU9iamVjdC5jcmVhdGUpIHtcbiAgICBPYmplY3QuY3JlYXRlID0gZnVuY3Rpb24gKG8pIHtcbiAgICAgIGZ1bmN0aW9uIEYgKCkge31cbiAgICAgIEYucHJvdG90eXBlID0gb1xuICAgICAgdmFyIG5ld2YgPSBuZXcgRigpXG4gICAgICByZXR1cm4gbmV3ZlxuICAgIH1cbiAgfVxuXG4gIGlmICghT2JqZWN0LmtleXMpIHtcbiAgICBPYmplY3Qua2V5cyA9IGZ1bmN0aW9uIChvKSB7XG4gICAgICB2YXIgYSA9IFtdXG4gICAgICBmb3IgKHZhciBpIGluIG8pIGlmIChvLmhhc093blByb3BlcnR5KGkpKSBhLnB1c2goaSlcbiAgICAgIHJldHVybiBhXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2tCdWZmZXJMZW5ndGggKHBhcnNlcikge1xuICAgIHZhciBtYXhBbGxvd2VkID0gTWF0aC5tYXgoc2F4Lk1BWF9CVUZGRVJfTEVOR1RILCAxMClcbiAgICB2YXIgbWF4QWN0dWFsID0gMFxuICAgIGZvciAodmFyIGkgPSAwLCBsID0gYnVmZmVycy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIHZhciBsZW4gPSBwYXJzZXJbYnVmZmVyc1tpXV0ubGVuZ3RoXG4gICAgICBpZiAobGVuID4gbWF4QWxsb3dlZCkge1xuICAgICAgICAvLyBUZXh0L2NkYXRhIG5vZGVzIGNhbiBnZXQgYmlnLCBhbmQgc2luY2UgdGhleSdyZSBidWZmZXJlZCxcbiAgICAgICAgLy8gd2UgY2FuIGdldCBoZXJlIHVuZGVyIG5vcm1hbCBjb25kaXRpb25zLlxuICAgICAgICAvLyBBdm9pZCBpc3N1ZXMgYnkgZW1pdHRpbmcgdGhlIHRleHQgbm9kZSBub3csXG4gICAgICAgIC8vIHNvIGF0IGxlYXN0IGl0IHdvbid0IGdldCBhbnkgYmlnZ2VyLlxuICAgICAgICBzd2l0Y2ggKGJ1ZmZlcnNbaV0pIHtcbiAgICAgICAgICBjYXNlICd0ZXh0Tm9kZSc6XG4gICAgICAgICAgICBjbG9zZVRleHQocGFyc2VyKVxuICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgIGNhc2UgJ2NkYXRhJzpcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2RhdGEnLCBwYXJzZXIuY2RhdGEpXG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgPSAnJ1xuICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgIGNhc2UgJ3NjcmlwdCc6XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbnNjcmlwdCcsIHBhcnNlci5zY3JpcHQpXG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ID0gJydcbiAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgZXJyb3IocGFyc2VyLCAnTWF4IGJ1ZmZlciBsZW5ndGggZXhjZWVkZWQ6ICcgKyBidWZmZXJzW2ldKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBtYXhBY3R1YWwgPSBNYXRoLm1heChtYXhBY3R1YWwsIGxlbilcbiAgICB9XG4gICAgLy8gc2NoZWR1bGUgdGhlIG5leHQgY2hlY2sgZm9yIHRoZSBlYXJsaWVzdCBwb3NzaWJsZSBidWZmZXIgb3ZlcnJ1bi5cbiAgICB2YXIgbSA9IHNheC5NQVhfQlVGRkVSX0xFTkdUSCAtIG1heEFjdHVhbFxuICAgIHBhcnNlci5idWZmZXJDaGVja1Bvc2l0aW9uID0gbSArIHBhcnNlci5wb3NpdGlvblxuICB9XG5cbiAgZnVuY3Rpb24gY2xlYXJCdWZmZXJzIChwYXJzZXIpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGJ1ZmZlcnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBwYXJzZXJbYnVmZmVyc1tpXV0gPSAnJ1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZsdXNoQnVmZmVycyAocGFyc2VyKSB7XG4gICAgY2xvc2VUZXh0KHBhcnNlcilcbiAgICBpZiAocGFyc2VyLmNkYXRhICE9PSAnJykge1xuICAgICAgZW1pdE5vZGUocGFyc2VyLCAnb25jZGF0YScsIHBhcnNlci5jZGF0YSlcbiAgICAgIHBhcnNlci5jZGF0YSA9ICcnXG4gICAgfVxuICAgIGlmIChwYXJzZXIuc2NyaXB0ICE9PSAnJykge1xuICAgICAgZW1pdE5vZGUocGFyc2VyLCAnb25zY3JpcHQnLCBwYXJzZXIuc2NyaXB0KVxuICAgICAgcGFyc2VyLnNjcmlwdCA9ICcnXG4gICAgfVxuICB9XG5cbiAgU0FYUGFyc2VyLnByb3RvdHlwZSA9IHtcbiAgICBlbmQ6IGZ1bmN0aW9uICgpIHsgZW5kKHRoaXMpIH0sXG4gICAgd3JpdGU6IHdyaXRlLFxuICAgIHJlc3VtZTogZnVuY3Rpb24gKCkgeyB0aGlzLmVycm9yID0gbnVsbDsgcmV0dXJuIHRoaXMgfSxcbiAgICBjbG9zZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy53cml0ZShudWxsKSB9LFxuICAgIGZsdXNoOiBmdW5jdGlvbiAoKSB7IGZsdXNoQnVmZmVycyh0aGlzKSB9XG4gIH1cblxuICB2YXIgU3RyZWFtXG4gIHRyeSB7XG4gICAgU3RyZWFtID0gcmVxdWlyZSgnc3RyZWFtJykuU3RyZWFtXG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgU3RyZWFtID0gZnVuY3Rpb24gKCkge31cbiAgfVxuICBpZiAoIVN0cmVhbSkgU3RyZWFtID0gZnVuY3Rpb24gKCkge31cblxuICB2YXIgc3RyZWFtV3JhcHMgPSBzYXguRVZFTlRTLmZpbHRlcihmdW5jdGlvbiAoZXYpIHtcbiAgICByZXR1cm4gZXYgIT09ICdlcnJvcicgJiYgZXYgIT09ICdlbmQnXG4gIH0pXG5cbiAgZnVuY3Rpb24gY3JlYXRlU3RyZWFtIChzdHJpY3QsIG9wdCkge1xuICAgIHJldHVybiBuZXcgU0FYU3RyZWFtKHN0cmljdCwgb3B0KVxuICB9XG5cbiAgZnVuY3Rpb24gU0FYU3RyZWFtIChzdHJpY3QsIG9wdCkge1xuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTQVhTdHJlYW0pKSB7XG4gICAgICByZXR1cm4gbmV3IFNBWFN0cmVhbShzdHJpY3QsIG9wdClcbiAgICB9XG5cbiAgICBTdHJlYW0uYXBwbHkodGhpcylcblxuICAgIHRoaXMuX3BhcnNlciA9IG5ldyBTQVhQYXJzZXIoc3RyaWN0LCBvcHQpXG4gICAgdGhpcy53cml0YWJsZSA9IHRydWVcbiAgICB0aGlzLnJlYWRhYmxlID0gdHJ1ZVxuXG4gICAgdmFyIG1lID0gdGhpc1xuXG4gICAgdGhpcy5fcGFyc2VyLm9uZW5kID0gZnVuY3Rpb24gKCkge1xuICAgICAgbWUuZW1pdCgnZW5kJylcbiAgICB9XG5cbiAgICB0aGlzLl9wYXJzZXIub25lcnJvciA9IGZ1bmN0aW9uIChlcikge1xuICAgICAgbWUuZW1pdCgnZXJyb3InLCBlcilcblxuICAgICAgLy8gaWYgZGlkbid0IHRocm93LCB0aGVuIG1lYW5zIGVycm9yIHdhcyBoYW5kbGVkLlxuICAgICAgLy8gZ28gYWhlYWQgYW5kIGNsZWFyIGVycm9yLCBzbyB3ZSBjYW4gd3JpdGUgYWdhaW4uXG4gICAgICBtZS5fcGFyc2VyLmVycm9yID0gbnVsbFxuICAgIH1cblxuICAgIHRoaXMuX2RlY29kZXIgPSBudWxsXG5cbiAgICBzdHJlYW1XcmFwcy5mb3JFYWNoKGZ1bmN0aW9uIChldikge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG1lLCAnb24nICsgZXYsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG1lLl9wYXJzZXJbJ29uJyArIGV2XVxuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChoKSB7XG4gICAgICAgICAgaWYgKCFoKSB7XG4gICAgICAgICAgICBtZS5yZW1vdmVBbGxMaXN0ZW5lcnMoZXYpXG4gICAgICAgICAgICBtZS5fcGFyc2VyWydvbicgKyBldl0gPSBoXG4gICAgICAgICAgICByZXR1cm4gaFxuICAgICAgICAgIH1cbiAgICAgICAgICBtZS5vbihldiwgaClcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3RyZWFtLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogU0FYU3RyZWFtXG4gICAgfVxuICB9KVxuXG4gIFNBWFN0cmVhbS5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgQnVmZmVyID09PSAnZnVuY3Rpb24nICYmXG4gICAgICB0eXBlb2YgQnVmZmVyLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmXG4gICAgICBCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHtcbiAgICAgIGlmICghdGhpcy5fZGVjb2Rlcikge1xuICAgICAgICB2YXIgU0QgPSByZXF1aXJlKCdzdHJpbmdfZGVjb2RlcicpLlN0cmluZ0RlY29kZXJcbiAgICAgICAgdGhpcy5fZGVjb2RlciA9IG5ldyBTRCgndXRmOCcpXG4gICAgICB9XG4gICAgICBkYXRhID0gdGhpcy5fZGVjb2Rlci53cml0ZShkYXRhKVxuICAgIH1cblxuICAgIHRoaXMuX3BhcnNlci53cml0ZShkYXRhLnRvU3RyaW5nKCkpXG4gICAgdGhpcy5lbWl0KCdkYXRhJywgZGF0YSlcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbiAoY2h1bmspIHtcbiAgICBpZiAoY2h1bmsgJiYgY2h1bmsubGVuZ3RoKSB7XG4gICAgICB0aGlzLndyaXRlKGNodW5rKVxuICAgIH1cbiAgICB0aGlzLl9wYXJzZXIuZW5kKClcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgU0FYU3RyZWFtLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIChldiwgaGFuZGxlcikge1xuICAgIHZhciBtZSA9IHRoaXNcbiAgICBpZiAoIW1lLl9wYXJzZXJbJ29uJyArIGV2XSAmJiBzdHJlYW1XcmFwcy5pbmRleE9mKGV2KSAhPT0gLTEpIHtcbiAgICAgIG1lLl9wYXJzZXJbJ29uJyArIGV2XSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gW2FyZ3VtZW50c1swXV0gOiBBcnJheS5hcHBseShudWxsLCBhcmd1bWVudHMpXG4gICAgICAgIGFyZ3Muc3BsaWNlKDAsIDAsIGV2KVxuICAgICAgICBtZS5lbWl0LmFwcGx5KG1lLCBhcmdzKVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBTdHJlYW0ucHJvdG90eXBlLm9uLmNhbGwobWUsIGV2LCBoYW5kbGVyKVxuICB9XG5cbiAgLy8gdGhpcyByZWFsbHkgbmVlZHMgdG8gYmUgcmVwbGFjZWQgd2l0aCBjaGFyYWN0ZXIgY2xhc3Nlcy5cbiAgLy8gWE1MIGFsbG93cyBhbGwgbWFubmVyIG9mIHJpZGljdWxvdXMgbnVtYmVycyBhbmQgZGlnaXRzLlxuICB2YXIgQ0RBVEEgPSAnW0NEQVRBWydcbiAgdmFyIERPQ1RZUEUgPSAnRE9DVFlQRSdcbiAgdmFyIFhNTF9OQU1FU1BBQ0UgPSAnaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlJ1xuICB2YXIgWE1MTlNfTkFNRVNQQUNFID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvJ1xuICB2YXIgcm9vdE5TID0geyB4bWw6IFhNTF9OQU1FU1BBQ0UsIHhtbG5zOiBYTUxOU19OQU1FU1BBQ0UgfVxuXG4gIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy14bWwvI05ULU5hbWVTdGFydENoYXJcbiAgLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiB3b3JrcyBvbiBzdHJpbmdzLCBhIHNpbmdsZSBjaGFyYWN0ZXIgYXQgYSB0aW1lXG4gIC8vIGFzIHN1Y2gsIGl0IGNhbm5vdCBldmVyIHN1cHBvcnQgYXN0cmFsLXBsYW5lIGNoYXJhY3RlcnMgKDEwMDAwLUVGRkZGKVxuICAvLyB3aXRob3V0IGEgc2lnbmlmaWNhbnQgYnJlYWtpbmcgY2hhbmdlIHRvIGVpdGhlciB0aGlzICBwYXJzZXIsIG9yIHRoZVxuICAvLyBKYXZhU2NyaXB0IGxhbmd1YWdlLiAgSW1wbGVtZW50YXRpb24gb2YgYW4gZW1vamktY2FwYWJsZSB4bWwgcGFyc2VyXG4gIC8vIGlzIGxlZnQgYXMgYW4gZXhlcmNpc2UgZm9yIHRoZSByZWFkZXIuXG4gIHZhciBuYW1lU3RhcnQgPSAvWzpfQS1aYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXS9cblxuICB2YXIgbmFtZUJvZHkgPSAvWzpfQS1aYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MC5cXGQtXS9cblxuICB2YXIgZW50aXR5U3RhcnQgPSAvWyM6X0EtWmEtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF0vXG4gIHZhciBlbnRpdHlCb2R5ID0gL1sjOl9BLVphLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwLlxcZC1dL1xuXG4gIGZ1bmN0aW9uIGlzV2hpdGVzcGFjZSAoYykge1xuICAgIHJldHVybiBjID09PSAnICcgfHwgYyA9PT0gJ1xcbicgfHwgYyA9PT0gJ1xccicgfHwgYyA9PT0gJ1xcdCdcbiAgfVxuXG4gIGZ1bmN0aW9uIGlzUXVvdGUgKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gJ1wiJyB8fCBjID09PSAnXFwnJ1xuICB9XG5cbiAgZnVuY3Rpb24gaXNBdHRyaWJFbmQgKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gJz4nIHx8IGlzV2hpdGVzcGFjZShjKVxuICB9XG5cbiAgZnVuY3Rpb24gaXNNYXRjaCAocmVnZXgsIGMpIHtcbiAgICByZXR1cm4gcmVnZXgudGVzdChjKVxuICB9XG5cbiAgZnVuY3Rpb24gbm90TWF0Y2ggKHJlZ2V4LCBjKSB7XG4gICAgcmV0dXJuICFpc01hdGNoKHJlZ2V4LCBjKVxuICB9XG5cbiAgdmFyIFMgPSAwXG4gIHNheC5TVEFURSA9IHtcbiAgICBCRUdJTjogUysrLCAvLyBsZWFkaW5nIGJ5dGUgb3JkZXIgbWFyayBvciB3aGl0ZXNwYWNlXG4gICAgQkVHSU5fV0hJVEVTUEFDRTogUysrLCAvLyBsZWFkaW5nIHdoaXRlc3BhY2VcbiAgICBURVhUOiBTKyssIC8vIGdlbmVyYWwgc3R1ZmZcbiAgICBURVhUX0VOVElUWTogUysrLCAvLyAmYW1wIGFuZCBzdWNoLlxuICAgIE9QRU5fV0FLQTogUysrLCAvLyA8XG4gICAgU0dNTF9ERUNMOiBTKyssIC8vIDwhQkxBUkdcbiAgICBTR01MX0RFQ0xfUVVPVEVEOiBTKyssIC8vIDwhQkxBUkcgZm9vIFwiYmFyXG4gICAgRE9DVFlQRTogUysrLCAvLyA8IURPQ1RZUEVcbiAgICBET0NUWVBFX1FVT1RFRDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcbiAgICBET0NUWVBFX0RURDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcIiBbIC4uLlxuICAgIERPQ1RZUEVfRFREX1FVT1RFRDogUysrLCAvLyA8IURPQ1RZUEUgXCIvL2JsYWhcIiBbIFwiZm9vXG4gICAgQ09NTUVOVF9TVEFSVElORzogUysrLCAvLyA8IS1cbiAgICBDT01NRU5UOiBTKyssIC8vIDwhLS1cbiAgICBDT01NRU5UX0VORElORzogUysrLCAvLyA8IS0tIGJsYWggLVxuICAgIENPTU1FTlRfRU5ERUQ6IFMrKywgLy8gPCEtLSBibGFoIC0tXG4gICAgQ0RBVEE6IFMrKywgLy8gPCFbQ0RBVEFbIHNvbWV0aGluZ1xuICAgIENEQVRBX0VORElORzogUysrLCAvLyBdXG4gICAgQ0RBVEFfRU5ESU5HXzI6IFMrKywgLy8gXV1cbiAgICBQUk9DX0lOU1Q6IFMrKywgLy8gPD9oaVxuICAgIFBST0NfSU5TVF9CT0RZOiBTKyssIC8vIDw/aGkgdGhlcmVcbiAgICBQUk9DX0lOU1RfRU5ESU5HOiBTKyssIC8vIDw/aGkgXCJ0aGVyZVwiID9cbiAgICBPUEVOX1RBRzogUysrLCAvLyA8c3Ryb25nXG4gICAgT1BFTl9UQUdfU0xBU0g6IFMrKywgLy8gPHN0cm9uZyAvXG4gICAgQVRUUklCOiBTKyssIC8vIDxhXG4gICAgQVRUUklCX05BTUU6IFMrKywgLy8gPGEgZm9vXG4gICAgQVRUUklCX05BTUVfU0FXX1dISVRFOiBTKyssIC8vIDxhIGZvbyBfXG4gICAgQVRUUklCX1ZBTFVFOiBTKyssIC8vIDxhIGZvbz1cbiAgICBBVFRSSUJfVkFMVUVfUVVPVEVEOiBTKyssIC8vIDxhIGZvbz1cImJhclxuICAgIEFUVFJJQl9WQUxVRV9DTE9TRUQ6IFMrKywgLy8gPGEgZm9vPVwiYmFyXCJcbiAgICBBVFRSSUJfVkFMVUVfVU5RVU9URUQ6IFMrKywgLy8gPGEgZm9vPWJhclxuICAgIEFUVFJJQl9WQUxVRV9FTlRJVFlfUTogUysrLCAvLyA8Zm9vIGJhcj1cIiZxdW90O1wiXG4gICAgQVRUUklCX1ZBTFVFX0VOVElUWV9VOiBTKyssIC8vIDxmb28gYmFyPSZxdW90XG4gICAgQ0xPU0VfVEFHOiBTKyssIC8vIDwvYVxuICAgIENMT1NFX1RBR19TQVdfV0hJVEU6IFMrKywgLy8gPC9hICAgPlxuICAgIFNDUklQVDogUysrLCAvLyA8c2NyaXB0PiAuLi5cbiAgICBTQ1JJUFRfRU5ESU5HOiBTKysgLy8gPHNjcmlwdD4gLi4uIDxcbiAgfVxuXG4gIHNheC5YTUxfRU5USVRJRVMgPSB7XG4gICAgJ2FtcCc6ICcmJyxcbiAgICAnZ3QnOiAnPicsXG4gICAgJ2x0JzogJzwnLFxuICAgICdxdW90JzogJ1wiJyxcbiAgICAnYXBvcyc6IFwiJ1wiXG4gIH1cblxuICBzYXguRU5USVRJRVMgPSB7XG4gICAgJ2FtcCc6ICcmJyxcbiAgICAnZ3QnOiAnPicsXG4gICAgJ2x0JzogJzwnLFxuICAgICdxdW90JzogJ1wiJyxcbiAgICAnYXBvcyc6IFwiJ1wiLFxuICAgICdBRWxpZyc6IDE5OCxcbiAgICAnQWFjdXRlJzogMTkzLFxuICAgICdBY2lyYyc6IDE5NCxcbiAgICAnQWdyYXZlJzogMTkyLFxuICAgICdBcmluZyc6IDE5NyxcbiAgICAnQXRpbGRlJzogMTk1LFxuICAgICdBdW1sJzogMTk2LFxuICAgICdDY2VkaWwnOiAxOTksXG4gICAgJ0VUSCc6IDIwOCxcbiAgICAnRWFjdXRlJzogMjAxLFxuICAgICdFY2lyYyc6IDIwMixcbiAgICAnRWdyYXZlJzogMjAwLFxuICAgICdFdW1sJzogMjAzLFxuICAgICdJYWN1dGUnOiAyMDUsXG4gICAgJ0ljaXJjJzogMjA2LFxuICAgICdJZ3JhdmUnOiAyMDQsXG4gICAgJ0l1bWwnOiAyMDcsXG4gICAgJ050aWxkZSc6IDIwOSxcbiAgICAnT2FjdXRlJzogMjExLFxuICAgICdPY2lyYyc6IDIxMixcbiAgICAnT2dyYXZlJzogMjEwLFxuICAgICdPc2xhc2gnOiAyMTYsXG4gICAgJ090aWxkZSc6IDIxMyxcbiAgICAnT3VtbCc6IDIxNCxcbiAgICAnVEhPUk4nOiAyMjIsXG4gICAgJ1VhY3V0ZSc6IDIxOCxcbiAgICAnVWNpcmMnOiAyMTksXG4gICAgJ1VncmF2ZSc6IDIxNyxcbiAgICAnVXVtbCc6IDIyMCxcbiAgICAnWWFjdXRlJzogMjIxLFxuICAgICdhYWN1dGUnOiAyMjUsXG4gICAgJ2FjaXJjJzogMjI2LFxuICAgICdhZWxpZyc6IDIzMCxcbiAgICAnYWdyYXZlJzogMjI0LFxuICAgICdhcmluZyc6IDIyOSxcbiAgICAnYXRpbGRlJzogMjI3LFxuICAgICdhdW1sJzogMjI4LFxuICAgICdjY2VkaWwnOiAyMzEsXG4gICAgJ2VhY3V0ZSc6IDIzMyxcbiAgICAnZWNpcmMnOiAyMzQsXG4gICAgJ2VncmF2ZSc6IDIzMixcbiAgICAnZXRoJzogMjQwLFxuICAgICdldW1sJzogMjM1LFxuICAgICdpYWN1dGUnOiAyMzcsXG4gICAgJ2ljaXJjJzogMjM4LFxuICAgICdpZ3JhdmUnOiAyMzYsXG4gICAgJ2l1bWwnOiAyMzksXG4gICAgJ250aWxkZSc6IDI0MSxcbiAgICAnb2FjdXRlJzogMjQzLFxuICAgICdvY2lyYyc6IDI0NCxcbiAgICAnb2dyYXZlJzogMjQyLFxuICAgICdvc2xhc2gnOiAyNDgsXG4gICAgJ290aWxkZSc6IDI0NSxcbiAgICAnb3VtbCc6IDI0NixcbiAgICAnc3psaWcnOiAyMjMsXG4gICAgJ3Rob3JuJzogMjU0LFxuICAgICd1YWN1dGUnOiAyNTAsXG4gICAgJ3VjaXJjJzogMjUxLFxuICAgICd1Z3JhdmUnOiAyNDksXG4gICAgJ3V1bWwnOiAyNTIsXG4gICAgJ3lhY3V0ZSc6IDI1MyxcbiAgICAneXVtbCc6IDI1NSxcbiAgICAnY29weSc6IDE2OSxcbiAgICAncmVnJzogMTc0LFxuICAgICduYnNwJzogMTYwLFxuICAgICdpZXhjbCc6IDE2MSxcbiAgICAnY2VudCc6IDE2MixcbiAgICAncG91bmQnOiAxNjMsXG4gICAgJ2N1cnJlbic6IDE2NCxcbiAgICAneWVuJzogMTY1LFxuICAgICdicnZiYXInOiAxNjYsXG4gICAgJ3NlY3QnOiAxNjcsXG4gICAgJ3VtbCc6IDE2OCxcbiAgICAnb3JkZic6IDE3MCxcbiAgICAnbGFxdW8nOiAxNzEsXG4gICAgJ25vdCc6IDE3MixcbiAgICAnc2h5JzogMTczLFxuICAgICdtYWNyJzogMTc1LFxuICAgICdkZWcnOiAxNzYsXG4gICAgJ3BsdXNtbic6IDE3NyxcbiAgICAnc3VwMSc6IDE4NSxcbiAgICAnc3VwMic6IDE3OCxcbiAgICAnc3VwMyc6IDE3OSxcbiAgICAnYWN1dGUnOiAxODAsXG4gICAgJ21pY3JvJzogMTgxLFxuICAgICdwYXJhJzogMTgyLFxuICAgICdtaWRkb3QnOiAxODMsXG4gICAgJ2NlZGlsJzogMTg0LFxuICAgICdvcmRtJzogMTg2LFxuICAgICdyYXF1byc6IDE4NyxcbiAgICAnZnJhYzE0JzogMTg4LFxuICAgICdmcmFjMTInOiAxODksXG4gICAgJ2ZyYWMzNCc6IDE5MCxcbiAgICAnaXF1ZXN0JzogMTkxLFxuICAgICd0aW1lcyc6IDIxNSxcbiAgICAnZGl2aWRlJzogMjQ3LFxuICAgICdPRWxpZyc6IDMzOCxcbiAgICAnb2VsaWcnOiAzMzksXG4gICAgJ1NjYXJvbic6IDM1MixcbiAgICAnc2Nhcm9uJzogMzUzLFxuICAgICdZdW1sJzogMzc2LFxuICAgICdmbm9mJzogNDAyLFxuICAgICdjaXJjJzogNzEwLFxuICAgICd0aWxkZSc6IDczMixcbiAgICAnQWxwaGEnOiA5MTMsXG4gICAgJ0JldGEnOiA5MTQsXG4gICAgJ0dhbW1hJzogOTE1LFxuICAgICdEZWx0YSc6IDkxNixcbiAgICAnRXBzaWxvbic6IDkxNyxcbiAgICAnWmV0YSc6IDkxOCxcbiAgICAnRXRhJzogOTE5LFxuICAgICdUaGV0YSc6IDkyMCxcbiAgICAnSW90YSc6IDkyMSxcbiAgICAnS2FwcGEnOiA5MjIsXG4gICAgJ0xhbWJkYSc6IDkyMyxcbiAgICAnTXUnOiA5MjQsXG4gICAgJ051JzogOTI1LFxuICAgICdYaSc6IDkyNixcbiAgICAnT21pY3Jvbic6IDkyNyxcbiAgICAnUGknOiA5MjgsXG4gICAgJ1Jobyc6IDkyOSxcbiAgICAnU2lnbWEnOiA5MzEsXG4gICAgJ1RhdSc6IDkzMixcbiAgICAnVXBzaWxvbic6IDkzMyxcbiAgICAnUGhpJzogOTM0LFxuICAgICdDaGknOiA5MzUsXG4gICAgJ1BzaSc6IDkzNixcbiAgICAnT21lZ2EnOiA5MzcsXG4gICAgJ2FscGhhJzogOTQ1LFxuICAgICdiZXRhJzogOTQ2LFxuICAgICdnYW1tYSc6IDk0NyxcbiAgICAnZGVsdGEnOiA5NDgsXG4gICAgJ2Vwc2lsb24nOiA5NDksXG4gICAgJ3pldGEnOiA5NTAsXG4gICAgJ2V0YSc6IDk1MSxcbiAgICAndGhldGEnOiA5NTIsXG4gICAgJ2lvdGEnOiA5NTMsXG4gICAgJ2thcHBhJzogOTU0LFxuICAgICdsYW1iZGEnOiA5NTUsXG4gICAgJ211JzogOTU2LFxuICAgICdudSc6IDk1NyxcbiAgICAneGknOiA5NTgsXG4gICAgJ29taWNyb24nOiA5NTksXG4gICAgJ3BpJzogOTYwLFxuICAgICdyaG8nOiA5NjEsXG4gICAgJ3NpZ21hZic6IDk2MixcbiAgICAnc2lnbWEnOiA5NjMsXG4gICAgJ3RhdSc6IDk2NCxcbiAgICAndXBzaWxvbic6IDk2NSxcbiAgICAncGhpJzogOTY2LFxuICAgICdjaGknOiA5NjcsXG4gICAgJ3BzaSc6IDk2OCxcbiAgICAnb21lZ2EnOiA5NjksXG4gICAgJ3RoZXRhc3ltJzogOTc3LFxuICAgICd1cHNpaCc6IDk3OCxcbiAgICAncGl2JzogOTgyLFxuICAgICdlbnNwJzogODE5NCxcbiAgICAnZW1zcCc6IDgxOTUsXG4gICAgJ3RoaW5zcCc6IDgyMDEsXG4gICAgJ3p3bmonOiA4MjA0LFxuICAgICd6d2onOiA4MjA1LFxuICAgICdscm0nOiA4MjA2LFxuICAgICdybG0nOiA4MjA3LFxuICAgICduZGFzaCc6IDgyMTEsXG4gICAgJ21kYXNoJzogODIxMixcbiAgICAnbHNxdW8nOiA4MjE2LFxuICAgICdyc3F1byc6IDgyMTcsXG4gICAgJ3NicXVvJzogODIxOCxcbiAgICAnbGRxdW8nOiA4MjIwLFxuICAgICdyZHF1byc6IDgyMjEsXG4gICAgJ2JkcXVvJzogODIyMixcbiAgICAnZGFnZ2VyJzogODIyNCxcbiAgICAnRGFnZ2VyJzogODIyNSxcbiAgICAnYnVsbCc6IDgyMjYsXG4gICAgJ2hlbGxpcCc6IDgyMzAsXG4gICAgJ3Blcm1pbCc6IDgyNDAsXG4gICAgJ3ByaW1lJzogODI0MixcbiAgICAnUHJpbWUnOiA4MjQzLFxuICAgICdsc2FxdW8nOiA4MjQ5LFxuICAgICdyc2FxdW8nOiA4MjUwLFxuICAgICdvbGluZSc6IDgyNTQsXG4gICAgJ2ZyYXNsJzogODI2MCxcbiAgICAnZXVybyc6IDgzNjQsXG4gICAgJ2ltYWdlJzogODQ2NSxcbiAgICAnd2VpZXJwJzogODQ3MixcbiAgICAncmVhbCc6IDg0NzYsXG4gICAgJ3RyYWRlJzogODQ4MixcbiAgICAnYWxlZnN5bSc6IDg1MDEsXG4gICAgJ2xhcnInOiA4NTkyLFxuICAgICd1YXJyJzogODU5MyxcbiAgICAncmFycic6IDg1OTQsXG4gICAgJ2RhcnInOiA4NTk1LFxuICAgICdoYXJyJzogODU5NixcbiAgICAnY3JhcnInOiA4NjI5LFxuICAgICdsQXJyJzogODY1NixcbiAgICAndUFycic6IDg2NTcsXG4gICAgJ3JBcnInOiA4NjU4LFxuICAgICdkQXJyJzogODY1OSxcbiAgICAnaEFycic6IDg2NjAsXG4gICAgJ2ZvcmFsbCc6IDg3MDQsXG4gICAgJ3BhcnQnOiA4NzA2LFxuICAgICdleGlzdCc6IDg3MDcsXG4gICAgJ2VtcHR5JzogODcwOSxcbiAgICAnbmFibGEnOiA4NzExLFxuICAgICdpc2luJzogODcxMixcbiAgICAnbm90aW4nOiA4NzEzLFxuICAgICduaSc6IDg3MTUsXG4gICAgJ3Byb2QnOiA4NzE5LFxuICAgICdzdW0nOiA4NzIxLFxuICAgICdtaW51cyc6IDg3MjIsXG4gICAgJ2xvd2FzdCc6IDg3MjcsXG4gICAgJ3JhZGljJzogODczMCxcbiAgICAncHJvcCc6IDg3MzMsXG4gICAgJ2luZmluJzogODczNCxcbiAgICAnYW5nJzogODczNixcbiAgICAnYW5kJzogODc0MyxcbiAgICAnb3InOiA4NzQ0LFxuICAgICdjYXAnOiA4NzQ1LFxuICAgICdjdXAnOiA4NzQ2LFxuICAgICdpbnQnOiA4NzQ3LFxuICAgICd0aGVyZTQnOiA4NzU2LFxuICAgICdzaW0nOiA4NzY0LFxuICAgICdjb25nJzogODc3MyxcbiAgICAnYXN5bXAnOiA4Nzc2LFxuICAgICduZSc6IDg4MDAsXG4gICAgJ2VxdWl2JzogODgwMSxcbiAgICAnbGUnOiA4ODA0LFxuICAgICdnZSc6IDg4MDUsXG4gICAgJ3N1Yic6IDg4MzQsXG4gICAgJ3N1cCc6IDg4MzUsXG4gICAgJ25zdWInOiA4ODM2LFxuICAgICdzdWJlJzogODgzOCxcbiAgICAnc3VwZSc6IDg4MzksXG4gICAgJ29wbHVzJzogODg1MyxcbiAgICAnb3RpbWVzJzogODg1NSxcbiAgICAncGVycCc6IDg4NjksXG4gICAgJ3Nkb3QnOiA4OTAxLFxuICAgICdsY2VpbCc6IDg5NjgsXG4gICAgJ3JjZWlsJzogODk2OSxcbiAgICAnbGZsb29yJzogODk3MCxcbiAgICAncmZsb29yJzogODk3MSxcbiAgICAnbGFuZyc6IDkwMDEsXG4gICAgJ3JhbmcnOiA5MDAyLFxuICAgICdsb3onOiA5Njc0LFxuICAgICdzcGFkZXMnOiA5ODI0LFxuICAgICdjbHVicyc6IDk4MjcsXG4gICAgJ2hlYXJ0cyc6IDk4MjksXG4gICAgJ2RpYW1zJzogOTgzMFxuICB9XG5cbiAgT2JqZWN0LmtleXMoc2F4LkVOVElUSUVTKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgZSA9IHNheC5FTlRJVElFU1trZXldXG4gICAgdmFyIHMgPSB0eXBlb2YgZSA9PT0gJ251bWJlcicgPyBTdHJpbmcuZnJvbUNoYXJDb2RlKGUpIDogZVxuICAgIHNheC5FTlRJVElFU1trZXldID0gc1xuICB9KVxuXG4gIGZvciAodmFyIHMgaW4gc2F4LlNUQVRFKSB7XG4gICAgc2F4LlNUQVRFW3NheC5TVEFURVtzXV0gPSBzXG4gIH1cblxuICAvLyBzaG9ydGhhbmRcbiAgUyA9IHNheC5TVEFURVxuXG4gIGZ1bmN0aW9uIGVtaXQgKHBhcnNlciwgZXZlbnQsIGRhdGEpIHtcbiAgICBwYXJzZXJbZXZlbnRdICYmIHBhcnNlcltldmVudF0oZGF0YSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGVtaXROb2RlIChwYXJzZXIsIG5vZGVUeXBlLCBkYXRhKSB7XG4gICAgaWYgKHBhcnNlci50ZXh0Tm9kZSkgY2xvc2VUZXh0KHBhcnNlcilcbiAgICBlbWl0KHBhcnNlciwgbm9kZVR5cGUsIGRhdGEpXG4gIH1cblxuICBmdW5jdGlvbiBjbG9zZVRleHQgKHBhcnNlcikge1xuICAgIHBhcnNlci50ZXh0Tm9kZSA9IHRleHRvcHRzKHBhcnNlci5vcHQsIHBhcnNlci50ZXh0Tm9kZSlcbiAgICBpZiAocGFyc2VyLnRleHROb2RlKSBlbWl0KHBhcnNlciwgJ29udGV4dCcsIHBhcnNlci50ZXh0Tm9kZSlcbiAgICBwYXJzZXIudGV4dE5vZGUgPSAnJ1xuICB9XG5cbiAgZnVuY3Rpb24gdGV4dG9wdHMgKG9wdCwgdGV4dCkge1xuICAgIGlmIChvcHQudHJpbSkgdGV4dCA9IHRleHQudHJpbSgpXG4gICAgaWYgKG9wdC5ub3JtYWxpemUpIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xccysvZywgJyAnKVxuICAgIHJldHVybiB0ZXh0XG4gIH1cblxuICBmdW5jdGlvbiBlcnJvciAocGFyc2VyLCBlcikge1xuICAgIGNsb3NlVGV4dChwYXJzZXIpXG4gICAgaWYgKHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICBlciArPSAnXFxuTGluZTogJyArIHBhcnNlci5saW5lICtcbiAgICAgICAgJ1xcbkNvbHVtbjogJyArIHBhcnNlci5jb2x1bW4gK1xuICAgICAgICAnXFxuQ2hhcjogJyArIHBhcnNlci5jXG4gICAgfVxuICAgIGVyID0gbmV3IEVycm9yKGVyKVxuICAgIHBhcnNlci5lcnJvciA9IGVyXG4gICAgZW1pdChwYXJzZXIsICdvbmVycm9yJywgZXIpXG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgZnVuY3Rpb24gZW5kIChwYXJzZXIpIHtcbiAgICBpZiAocGFyc2VyLnNhd1Jvb3QgJiYgIXBhcnNlci5jbG9zZWRSb290KSBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuY2xvc2VkIHJvb3QgdGFnJylcbiAgICBpZiAoKHBhcnNlci5zdGF0ZSAhPT0gUy5CRUdJTikgJiZcbiAgICAgIChwYXJzZXIuc3RhdGUgIT09IFMuQkVHSU5fV0hJVEVTUEFDRSkgJiZcbiAgICAgIChwYXJzZXIuc3RhdGUgIT09IFMuVEVYVCkpIHtcbiAgICAgIGVycm9yKHBhcnNlciwgJ1VuZXhwZWN0ZWQgZW5kJylcbiAgICB9XG4gICAgY2xvc2VUZXh0KHBhcnNlcilcbiAgICBwYXJzZXIuYyA9ICcnXG4gICAgcGFyc2VyLmNsb3NlZCA9IHRydWVcbiAgICBlbWl0KHBhcnNlciwgJ29uZW5kJylcbiAgICBTQVhQYXJzZXIuY2FsbChwYXJzZXIsIHBhcnNlci5zdHJpY3QsIHBhcnNlci5vcHQpXG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgZnVuY3Rpb24gc3RyaWN0RmFpbCAocGFyc2VyLCBtZXNzYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBwYXJzZXIgIT09ICdvYmplY3QnIHx8ICEocGFyc2VyIGluc3RhbmNlb2YgU0FYUGFyc2VyKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdiYWQgY2FsbCB0byBzdHJpY3RGYWlsJylcbiAgICB9XG4gICAgaWYgKHBhcnNlci5zdHJpY3QpIHtcbiAgICAgIGVycm9yKHBhcnNlciwgbWVzc2FnZSlcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBuZXdUYWcgKHBhcnNlcikge1xuICAgIGlmICghcGFyc2VyLnN0cmljdCkgcGFyc2VyLnRhZ05hbWUgPSBwYXJzZXIudGFnTmFtZVtwYXJzZXIubG9vc2VDYXNlXSgpXG4gICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgIHZhciB0YWcgPSBwYXJzZXIudGFnID0geyBuYW1lOiBwYXJzZXIudGFnTmFtZSwgYXR0cmlidXRlczoge30gfVxuXG4gICAgLy8gd2lsbCBiZSBvdmVycmlkZGVuIGlmIHRhZyBjb250YWlscyBhbiB4bWxucz1cImZvb1wiIG9yIHhtbG5zOmZvbz1cImJhclwiXG4gICAgaWYgKHBhcnNlci5vcHQueG1sbnMpIHtcbiAgICAgIHRhZy5ucyA9IHBhcmVudC5uc1xuICAgIH1cbiAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgZW1pdE5vZGUocGFyc2VyLCAnb25vcGVudGFnc3RhcnQnLCB0YWcpXG4gIH1cblxuICBmdW5jdGlvbiBxbmFtZSAobmFtZSwgYXR0cmlidXRlKSB7XG4gICAgdmFyIGkgPSBuYW1lLmluZGV4T2YoJzonKVxuICAgIHZhciBxdWFsTmFtZSA9IGkgPCAwID8gWyAnJywgbmFtZSBdIDogbmFtZS5zcGxpdCgnOicpXG4gICAgdmFyIHByZWZpeCA9IHF1YWxOYW1lWzBdXG4gICAgdmFyIGxvY2FsID0gcXVhbE5hbWVbMV1cblxuICAgIC8vIDx4IFwieG1sbnNcIj1cImh0dHA6Ly9mb29cIj5cbiAgICBpZiAoYXR0cmlidXRlICYmIG5hbWUgPT09ICd4bWxucycpIHtcbiAgICAgIHByZWZpeCA9ICd4bWxucydcbiAgICAgIGxvY2FsID0gJydcbiAgICB9XG5cbiAgICByZXR1cm4geyBwcmVmaXg6IHByZWZpeCwgbG9jYWw6IGxvY2FsIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGF0dHJpYiAocGFyc2VyKSB7XG4gICAgaWYgKCFwYXJzZXIuc3RyaWN0KSB7XG4gICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJOYW1lW3BhcnNlci5sb29zZUNhc2VdKClcbiAgICB9XG5cbiAgICBpZiAocGFyc2VyLmF0dHJpYkxpc3QuaW5kZXhPZihwYXJzZXIuYXR0cmliTmFtZSkgIT09IC0xIHx8XG4gICAgICBwYXJzZXIudGFnLmF0dHJpYnV0ZXMuaGFzT3duUHJvcGVydHkocGFyc2VyLmF0dHJpYk5hbWUpKSB7XG4gICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAocGFyc2VyLm9wdC54bWxucykge1xuICAgICAgdmFyIHFuID0gcW5hbWUocGFyc2VyLmF0dHJpYk5hbWUsIHRydWUpXG4gICAgICB2YXIgcHJlZml4ID0gcW4ucHJlZml4XG4gICAgICB2YXIgbG9jYWwgPSBxbi5sb2NhbFxuXG4gICAgICBpZiAocHJlZml4ID09PSAneG1sbnMnKSB7XG4gICAgICAgIC8vIG5hbWVzcGFjZSBiaW5kaW5nIGF0dHJpYnV0ZS4gcHVzaCB0aGUgYmluZGluZyBpbnRvIHNjb3BlXG4gICAgICAgIGlmIChsb2NhbCA9PT0gJ3htbCcgJiYgcGFyc2VyLmF0dHJpYlZhbHVlICE9PSBYTUxfTkFNRVNQQUNFKSB7XG4gICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsXG4gICAgICAgICAgICAneG1sOiBwcmVmaXggbXVzdCBiZSBib3VuZCB0byAnICsgWE1MX05BTUVTUEFDRSArICdcXG4nICtcbiAgICAgICAgICAgICdBY3R1YWw6ICcgKyBwYXJzZXIuYXR0cmliVmFsdWUpXG4gICAgICAgIH0gZWxzZSBpZiAobG9jYWwgPT09ICd4bWxucycgJiYgcGFyc2VyLmF0dHJpYlZhbHVlICE9PSBYTUxOU19OQU1FU1BBQ0UpIHtcbiAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlcixcbiAgICAgICAgICAgICd4bWxuczogcHJlZml4IG11c3QgYmUgYm91bmQgdG8gJyArIFhNTE5TX05BTUVTUEFDRSArICdcXG4nICtcbiAgICAgICAgICAgICdBY3R1YWw6ICcgKyBwYXJzZXIuYXR0cmliVmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHRhZyA9IHBhcnNlci50YWdcbiAgICAgICAgICB2YXIgcGFyZW50ID0gcGFyc2VyLnRhZ3NbcGFyc2VyLnRhZ3MubGVuZ3RoIC0gMV0gfHwgcGFyc2VyXG4gICAgICAgICAgaWYgKHRhZy5ucyA9PT0gcGFyZW50Lm5zKSB7XG4gICAgICAgICAgICB0YWcubnMgPSBPYmplY3QuY3JlYXRlKHBhcmVudC5ucylcbiAgICAgICAgICB9XG4gICAgICAgICAgdGFnLm5zW2xvY2FsXSA9IHBhcnNlci5hdHRyaWJWYWx1ZVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGRlZmVyIG9uYXR0cmlidXRlIGV2ZW50cyB1bnRpbCBhbGwgYXR0cmlidXRlcyBoYXZlIGJlZW4gc2VlblxuICAgICAgLy8gc28gYW55IG5ldyBiaW5kaW5ncyBjYW4gdGFrZSBlZmZlY3QuIHByZXNlcnZlIGF0dHJpYnV0ZSBvcmRlclxuICAgICAgLy8gc28gZGVmZXJyZWQgZXZlbnRzIGNhbiBiZSBlbWl0dGVkIGluIGRvY3VtZW50IG9yZGVyXG4gICAgICBwYXJzZXIuYXR0cmliTGlzdC5wdXNoKFtwYXJzZXIuYXR0cmliTmFtZSwgcGFyc2VyLmF0dHJpYlZhbHVlXSlcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW4gbm9uLXhtbG5zIG1vZGUsIHdlIGNhbiBlbWl0IHRoZSBldmVudCByaWdodCBhd2F5XG4gICAgICBwYXJzZXIudGFnLmF0dHJpYnV0ZXNbcGFyc2VyLmF0dHJpYk5hbWVdID0gcGFyc2VyLmF0dHJpYlZhbHVlXG4gICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmF0dHJpYnV0ZScsIHtcbiAgICAgICAgbmFtZTogcGFyc2VyLmF0dHJpYk5hbWUsXG4gICAgICAgIHZhbHVlOiBwYXJzZXIuYXR0cmliVmFsdWVcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgcGFyc2VyLmF0dHJpYk5hbWUgPSBwYXJzZXIuYXR0cmliVmFsdWUgPSAnJ1xuICB9XG5cbiAgZnVuY3Rpb24gb3BlblRhZyAocGFyc2VyLCBzZWxmQ2xvc2luZykge1xuICAgIGlmIChwYXJzZXIub3B0LnhtbG5zKSB7XG4gICAgICAvLyBlbWl0IG5hbWVzcGFjZSBiaW5kaW5nIGV2ZW50c1xuICAgICAgdmFyIHRhZyA9IHBhcnNlci50YWdcblxuICAgICAgLy8gYWRkIG5hbWVzcGFjZSBpbmZvIHRvIHRhZ1xuICAgICAgdmFyIHFuID0gcW5hbWUocGFyc2VyLnRhZ05hbWUpXG4gICAgICB0YWcucHJlZml4ID0gcW4ucHJlZml4XG4gICAgICB0YWcubG9jYWwgPSBxbi5sb2NhbFxuICAgICAgdGFnLnVyaSA9IHRhZy5uc1txbi5wcmVmaXhdIHx8ICcnXG5cbiAgICAgIGlmICh0YWcucHJlZml4ICYmICF0YWcudXJpKSB7XG4gICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnVW5ib3VuZCBuYW1lc3BhY2UgcHJlZml4OiAnICtcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeShwYXJzZXIudGFnTmFtZSkpXG4gICAgICAgIHRhZy51cmkgPSBxbi5wcmVmaXhcbiAgICAgIH1cblxuICAgICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgICAgaWYgKHRhZy5ucyAmJiBwYXJlbnQubnMgIT09IHRhZy5ucykge1xuICAgICAgICBPYmplY3Qua2V5cyh0YWcubnMpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbm9wZW5uYW1lc3BhY2UnLCB7XG4gICAgICAgICAgICBwcmVmaXg6IHAsXG4gICAgICAgICAgICB1cmk6IHRhZy5uc1twXVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIC8vIGhhbmRsZSBkZWZlcnJlZCBvbmF0dHJpYnV0ZSBldmVudHNcbiAgICAgIC8vIE5vdGU6IGRvIG5vdCBhcHBseSBkZWZhdWx0IG5zIHRvIGF0dHJpYnV0ZXM6XG4gICAgICAvLyAgIGh0dHA6Ly93d3cudzMub3JnL1RSL1JFQy14bWwtbmFtZXMvI2RlZmF1bHRpbmdcbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gcGFyc2VyLmF0dHJpYkxpc3QubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIHZhciBudiA9IHBhcnNlci5hdHRyaWJMaXN0W2ldXG4gICAgICAgIHZhciBuYW1lID0gbnZbMF1cbiAgICAgICAgdmFyIHZhbHVlID0gbnZbMV1cbiAgICAgICAgdmFyIHF1YWxOYW1lID0gcW5hbWUobmFtZSwgdHJ1ZSlcbiAgICAgICAgdmFyIHByZWZpeCA9IHF1YWxOYW1lLnByZWZpeFxuICAgICAgICB2YXIgbG9jYWwgPSBxdWFsTmFtZS5sb2NhbFxuICAgICAgICB2YXIgdXJpID0gcHJlZml4ID09PSAnJyA/ICcnIDogKHRhZy5uc1twcmVmaXhdIHx8ICcnKVxuICAgICAgICB2YXIgYSA9IHtcbiAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICBwcmVmaXg6IHByZWZpeCxcbiAgICAgICAgICBsb2NhbDogbG9jYWwsXG4gICAgICAgICAgdXJpOiB1cmlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIHRoZXJlJ3MgYW55IGF0dHJpYnV0ZXMgd2l0aCBhbiB1bmRlZmluZWQgbmFtZXNwYWNlLFxuICAgICAgICAvLyB0aGVuIGZhaWwgb24gdGhlbSBub3cuXG4gICAgICAgIGlmIChwcmVmaXggJiYgcHJlZml4ICE9PSAneG1sbnMnICYmICF1cmkpIHtcbiAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuYm91bmQgbmFtZXNwYWNlIHByZWZpeDogJyArXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShwcmVmaXgpKVxuICAgICAgICAgIGEudXJpID0gcHJlZml4XG4gICAgICAgIH1cbiAgICAgICAgcGFyc2VyLnRhZy5hdHRyaWJ1dGVzW25hbWVdID0gYVxuICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmF0dHJpYnV0ZScsIGEpXG4gICAgICB9XG4gICAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgfVxuXG4gICAgcGFyc2VyLnRhZy5pc1NlbGZDbG9zaW5nID0gISFzZWxmQ2xvc2luZ1xuXG4gICAgLy8gcHJvY2VzcyB0aGUgdGFnXG4gICAgcGFyc2VyLnNhd1Jvb3QgPSB0cnVlXG4gICAgcGFyc2VyLnRhZ3MucHVzaChwYXJzZXIudGFnKVxuICAgIGVtaXROb2RlKHBhcnNlciwgJ29ub3BlbnRhZycsIHBhcnNlci50YWcpXG4gICAgaWYgKCFzZWxmQ2xvc2luZykge1xuICAgICAgLy8gc3BlY2lhbCBjYXNlIGZvciA8c2NyaXB0PiBpbiBub24tc3RyaWN0IG1vZGUuXG4gICAgICBpZiAoIXBhcnNlci5ub3NjcmlwdCAmJiBwYXJzZXIudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnc2NyaXB0Jykge1xuICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlNDUklQVFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5URVhUXG4gICAgICB9XG4gICAgICBwYXJzZXIudGFnID0gbnVsbFxuICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgIH1cbiAgICBwYXJzZXIuYXR0cmliTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgcGFyc2VyLmF0dHJpYkxpc3QubGVuZ3RoID0gMFxuICB9XG5cbiAgZnVuY3Rpb24gY2xvc2VUYWcgKHBhcnNlcikge1xuICAgIGlmICghcGFyc2VyLnRhZ05hbWUpIHtcbiAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnV2VpcmQgZW1wdHkgY2xvc2UgdGFnLicpXG4gICAgICBwYXJzZXIudGV4dE5vZGUgKz0gJzwvPidcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHBhcnNlci5zY3JpcHQpIHtcbiAgICAgIGlmIChwYXJzZXIudGFnTmFtZSAhPT0gJ3NjcmlwdCcpIHtcbiAgICAgICAgcGFyc2VyLnNjcmlwdCArPSAnPC8nICsgcGFyc2VyLnRhZ05hbWUgKyAnPidcbiAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlNDUklQVFxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uc2NyaXB0JywgcGFyc2VyLnNjcmlwdClcbiAgICAgIHBhcnNlci5zY3JpcHQgPSAnJ1xuICAgIH1cblxuICAgIC8vIGZpcnN0IG1ha2Ugc3VyZSB0aGF0IHRoZSBjbG9zaW5nIHRhZyBhY3R1YWxseSBleGlzdHMuXG4gICAgLy8gPGE+PGI+PC9jPjwvYj48L2E+IHdpbGwgY2xvc2UgZXZlcnl0aGluZywgb3RoZXJ3aXNlLlxuICAgIHZhciB0ID0gcGFyc2VyLnRhZ3MubGVuZ3RoXG4gICAgdmFyIHRhZ05hbWUgPSBwYXJzZXIudGFnTmFtZVxuICAgIGlmICghcGFyc2VyLnN0cmljdCkge1xuICAgICAgdGFnTmFtZSA9IHRhZ05hbWVbcGFyc2VyLmxvb3NlQ2FzZV0oKVxuICAgIH1cbiAgICB2YXIgY2xvc2VUbyA9IHRhZ05hbWVcbiAgICB3aGlsZSAodC0tKSB7XG4gICAgICB2YXIgY2xvc2UgPSBwYXJzZXIudGFnc1t0XVxuICAgICAgaWYgKGNsb3NlLm5hbWUgIT09IGNsb3NlVG8pIHtcbiAgICAgICAgLy8gZmFpbCB0aGUgZmlyc3QgdGltZSBpbiBzdHJpY3QgbW9kZVxuICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ1VuZXhwZWN0ZWQgY2xvc2UgdGFnJylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gZGlkbid0IGZpbmQgaXQuICB3ZSBhbHJlYWR5IGZhaWxlZCBmb3Igc3RyaWN0LCBzbyBqdXN0IGFib3J0LlxuICAgIGlmICh0IDwgMCkge1xuICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdVbm1hdGNoZWQgY2xvc2luZyB0YWc6ICcgKyBwYXJzZXIudGFnTmFtZSlcbiAgICAgIHBhcnNlci50ZXh0Tm9kZSArPSAnPC8nICsgcGFyc2VyLnRhZ05hbWUgKyAnPidcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHBhcnNlci50YWdOYW1lID0gdGFnTmFtZVxuICAgIHZhciBzID0gcGFyc2VyLnRhZ3MubGVuZ3RoXG4gICAgd2hpbGUgKHMtLSA+IHQpIHtcbiAgICAgIHZhciB0YWcgPSBwYXJzZXIudGFnID0gcGFyc2VyLnRhZ3MucG9wKClcbiAgICAgIHBhcnNlci50YWdOYW1lID0gcGFyc2VyLnRhZy5uYW1lXG4gICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmNsb3NldGFnJywgcGFyc2VyLnRhZ05hbWUpXG5cbiAgICAgIHZhciB4ID0ge31cbiAgICAgIGZvciAodmFyIGkgaW4gdGFnLm5zKSB7XG4gICAgICAgIHhbaV0gPSB0YWcubnNbaV1cbiAgICAgIH1cblxuICAgICAgdmFyIHBhcmVudCA9IHBhcnNlci50YWdzW3BhcnNlci50YWdzLmxlbmd0aCAtIDFdIHx8IHBhcnNlclxuICAgICAgaWYgKHBhcnNlci5vcHQueG1sbnMgJiYgdGFnLm5zICE9PSBwYXJlbnQubnMpIHtcbiAgICAgICAgLy8gcmVtb3ZlIG5hbWVzcGFjZSBiaW5kaW5ncyBpbnRyb2R1Y2VkIGJ5IHRhZ1xuICAgICAgICBPYmplY3Qua2V5cyh0YWcubnMpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICB2YXIgbiA9IHRhZy5uc1twXVxuICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2xvc2VuYW1lc3BhY2UnLCB7IHByZWZpeDogcCwgdXJpOiBuIH0pXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0ID09PSAwKSBwYXJzZXIuY2xvc2VkUm9vdCA9IHRydWVcbiAgICBwYXJzZXIudGFnTmFtZSA9IHBhcnNlci5hdHRyaWJWYWx1ZSA9IHBhcnNlci5hdHRyaWJOYW1lID0gJydcbiAgICBwYXJzZXIuYXR0cmliTGlzdC5sZW5ndGggPSAwXG4gICAgcGFyc2VyLnN0YXRlID0gUy5URVhUXG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUVudGl0eSAocGFyc2VyKSB7XG4gICAgdmFyIGVudGl0eSA9IHBhcnNlci5lbnRpdHlcbiAgICB2YXIgZW50aXR5TEMgPSBlbnRpdHkudG9Mb3dlckNhc2UoKVxuICAgIHZhciBudW1cbiAgICB2YXIgbnVtU3RyID0gJydcblxuICAgIGlmIChwYXJzZXIuRU5USVRJRVNbZW50aXR5XSkge1xuICAgICAgcmV0dXJuIHBhcnNlci5FTlRJVElFU1tlbnRpdHldXG4gICAgfVxuICAgIGlmIChwYXJzZXIuRU5USVRJRVNbZW50aXR5TENdKSB7XG4gICAgICByZXR1cm4gcGFyc2VyLkVOVElUSUVTW2VudGl0eUxDXVxuICAgIH1cbiAgICBlbnRpdHkgPSBlbnRpdHlMQ1xuICAgIGlmIChlbnRpdHkuY2hhckF0KDApID09PSAnIycpIHtcbiAgICAgIGlmIChlbnRpdHkuY2hhckF0KDEpID09PSAneCcpIHtcbiAgICAgICAgZW50aXR5ID0gZW50aXR5LnNsaWNlKDIpXG4gICAgICAgIG51bSA9IHBhcnNlSW50KGVudGl0eSwgMTYpXG4gICAgICAgIG51bVN0ciA9IG51bS50b1N0cmluZygxNilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVudGl0eSA9IGVudGl0eS5zbGljZSgxKVxuICAgICAgICBudW0gPSBwYXJzZUludChlbnRpdHksIDEwKVxuICAgICAgICBudW1TdHIgPSBudW0udG9TdHJpbmcoMTApXG4gICAgICB9XG4gICAgfVxuICAgIGVudGl0eSA9IGVudGl0eS5yZXBsYWNlKC9eMCsvLCAnJylcbiAgICBpZiAoaXNOYU4obnVtKSB8fCBudW1TdHIudG9Mb3dlckNhc2UoKSAhPT0gZW50aXR5KSB7XG4gICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVyIGVudGl0eScpXG4gICAgICByZXR1cm4gJyYnICsgcGFyc2VyLmVudGl0eSArICc7J1xuICAgIH1cblxuICAgIHJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludChudW0pXG4gIH1cblxuICBmdW5jdGlvbiBiZWdpbldoaXRlU3BhY2UgKHBhcnNlciwgYykge1xuICAgIGlmIChjID09PSAnPCcpIHtcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuT1BFTl9XQUtBXG4gICAgICBwYXJzZXIuc3RhcnRUYWdQb3NpdGlvbiA9IHBhcnNlci5wb3NpdGlvblxuICAgIH0gZWxzZSBpZiAoIWlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgLy8gaGF2ZSB0byBwcm9jZXNzIHRoaXMgYXMgYSB0ZXh0IG5vZGUuXG4gICAgICAvLyB3ZWlyZCwgYnV0IGhhcHBlbnMuXG4gICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ05vbi13aGl0ZXNwYWNlIGJlZm9yZSBmaXJzdCB0YWcuJylcbiAgICAgIHBhcnNlci50ZXh0Tm9kZSA9IGNcbiAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNoYXJBdCAoY2h1bmssIGkpIHtcbiAgICB2YXIgcmVzdWx0ID0gJydcbiAgICBpZiAoaSA8IGNodW5rLmxlbmd0aCkge1xuICAgICAgcmVzdWx0ID0gY2h1bmsuY2hhckF0KGkpXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGZ1bmN0aW9uIHdyaXRlIChjaHVuaykge1xuICAgIHZhciBwYXJzZXIgPSB0aGlzXG4gICAgaWYgKHRoaXMuZXJyb3IpIHtcbiAgICAgIHRocm93IHRoaXMuZXJyb3JcbiAgICB9XG4gICAgaWYgKHBhcnNlci5jbG9zZWQpIHtcbiAgICAgIHJldHVybiBlcnJvcihwYXJzZXIsXG4gICAgICAgICdDYW5ub3Qgd3JpdGUgYWZ0ZXIgY2xvc2UuIEFzc2lnbiBhbiBvbnJlYWR5IGhhbmRsZXIuJylcbiAgICB9XG4gICAgaWYgKGNodW5rID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gZW5kKHBhcnNlcilcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjaHVuayA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGNodW5rID0gY2h1bmsudG9TdHJpbmcoKVxuICAgIH1cbiAgICB2YXIgaSA9IDBcbiAgICB2YXIgYyA9ICcnXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGMgPSBjaGFyQXQoY2h1bmssIGkrKylcbiAgICAgIHBhcnNlci5jID0gY1xuXG4gICAgICBpZiAoIWMpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cblxuICAgICAgaWYgKHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICAgIHBhcnNlci5wb3NpdGlvbisrXG4gICAgICAgIGlmIChjID09PSAnXFxuJykge1xuICAgICAgICAgIHBhcnNlci5saW5lKytcbiAgICAgICAgICBwYXJzZXIuY29sdW1uID0gMFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhcnNlci5jb2x1bW4rK1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAocGFyc2VyLnN0YXRlKSB7XG4gICAgICAgIGNhc2UgUy5CRUdJTjpcbiAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkJFR0lOX1dISVRFU1BBQ0VcbiAgICAgICAgICBpZiAoYyA9PT0gJ1xcdUZFRkYnKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBiZWdpbldoaXRlU3BhY2UocGFyc2VyLCBjKVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkJFR0lOX1dISVRFU1BBQ0U6XG4gICAgICAgICAgYmVnaW5XaGl0ZVNwYWNlKHBhcnNlciwgYylcbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5URVhUOlxuICAgICAgICAgIGlmIChwYXJzZXIuc2F3Um9vdCAmJiAhcGFyc2VyLmNsb3NlZFJvb3QpIHtcbiAgICAgICAgICAgIHZhciBzdGFydGkgPSBpIC0gMVxuICAgICAgICAgICAgd2hpbGUgKGMgJiYgYyAhPT0gJzwnICYmIGMgIT09ICcmJykge1xuICAgICAgICAgICAgICBjID0gY2hhckF0KGNodW5rLCBpKyspXG4gICAgICAgICAgICAgIGlmIChjICYmIHBhcnNlci50cmFja1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgcGFyc2VyLnBvc2l0aW9uKytcbiAgICAgICAgICAgICAgICBpZiAoYyA9PT0gJ1xcbicpIHtcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5saW5lKytcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5jb2x1bW4gPSAwXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIHBhcnNlci5jb2x1bW4rK1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLnRleHROb2RlICs9IGNodW5rLnN1YnN0cmluZyhzdGFydGksIGkgLSAxKVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoYyA9PT0gJzwnICYmICEocGFyc2VyLnNhd1Jvb3QgJiYgcGFyc2VyLmNsb3NlZFJvb3QgJiYgIXBhcnNlci5zdHJpY3QpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLk9QRU5fV0FLQVxuICAgICAgICAgICAgcGFyc2VyLnN0YXJ0VGFnUG9zaXRpb24gPSBwYXJzZXIucG9zaXRpb25cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykgJiYgKCFwYXJzZXIuc2F3Um9vdCB8fCBwYXJzZXIuY2xvc2VkUm9vdCkpIHtcbiAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdUZXh0IGRhdGEgb3V0c2lkZSBvZiByb290IG5vZGUuJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjID09PSAnJicpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5URVhUX0VOVElUWVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnRleHROb2RlICs9IGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0NSSVBUOlxuICAgICAgICAgIC8vIG9ubHkgbm9uLXN0cmljdFxuICAgICAgICAgIGlmIChjID09PSAnPCcpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0NSSVBUX0VORElORzpcbiAgICAgICAgICBpZiAoYyA9PT0gJy8nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNMT1NFX1RBR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9ICc8JyArIGNcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLk9QRU5fV0FLQTpcbiAgICAgICAgICAvLyBlaXRoZXIgYSAvLCA/LCAhLCBvciB0ZXh0IGlzIGNvbWluZyBuZXh0LlxuICAgICAgICAgIGlmIChjID09PSAnIScpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0dNTF9ERUNMXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICAvLyB3YWl0IGZvciBpdC4uLlxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLk9QRU5fVEFHXG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSA9IGNcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DTE9TRV9UQUdcbiAgICAgICAgICAgIHBhcnNlci50YWdOYW1lID0gJydcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICc/Jykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5QUk9DX0lOU1RcbiAgICAgICAgICAgIHBhcnNlci5wcm9jSW5zdE5hbWUgPSBwYXJzZXIucHJvY0luc3RCb2R5ID0gJydcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdVbmVuY29kZWQgPCcpXG4gICAgICAgICAgICAvLyBpZiB0aGVyZSB3YXMgc29tZSB3aGl0ZXNwYWNlLCB0aGVuIGFkZCB0aGF0IGluLlxuICAgICAgICAgICAgaWYgKHBhcnNlci5zdGFydFRhZ1Bvc2l0aW9uICsgMSA8IHBhcnNlci5wb3NpdGlvbikge1xuICAgICAgICAgICAgICB2YXIgcGFkID0gcGFyc2VyLnBvc2l0aW9uIC0gcGFyc2VyLnN0YXJ0VGFnUG9zaXRpb25cbiAgICAgICAgICAgICAgYyA9IG5ldyBBcnJheShwYWQpLmpvaW4oJyAnKSArIGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlci50ZXh0Tm9kZSArPSAnPCcgKyBjXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLlRFWFRcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuU0dNTF9ERUNMOlxuICAgICAgICAgIGlmICgocGFyc2VyLnNnbWxEZWNsICsgYykudG9VcHBlckNhc2UoKSA9PT0gQ0RBVEEpIHtcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29ub3BlbmNkYXRhJylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQ0RBVEFcbiAgICAgICAgICAgIHBhcnNlci5zZ21sRGVjbCA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAocGFyc2VyLnNnbWxEZWNsICsgYyA9PT0gJy0tJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgPSAnJ1xuICAgICAgICAgIH0gZWxzZSBpZiAoKHBhcnNlci5zZ21sRGVjbCArIGMpLnRvVXBwZXJDYXNlKCkgPT09IERPQ1RZUEUpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRVxuICAgICAgICAgICAgaWYgKHBhcnNlci5kb2N0eXBlIHx8IHBhcnNlci5zYXdSb290KSB7XG4gICAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLFxuICAgICAgICAgICAgICAgICdJbmFwcHJvcHJpYXRlbHkgbG9jYXRlZCBkb2N0eXBlIGRlY2xhcmF0aW9uJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhcnNlci5kb2N0eXBlID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zZ21sRGVjbCA9ICcnXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uc2dtbGRlY2xhcmF0aW9uJywgcGFyc2VyLnNnbWxEZWNsKVxuICAgICAgICAgICAgcGFyc2VyLnNnbWxEZWNsID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNRdW90ZShjKSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TR01MX0RFQ0xfUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgKz0gY1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc2dtbERlY2wgKz0gY1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5TR01MX0RFQ0xfUVVPVEVEOlxuICAgICAgICAgIGlmIChjID09PSBwYXJzZXIucSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TR01MX0RFQ0xcbiAgICAgICAgICAgIHBhcnNlci5xID0gJydcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFyc2VyLnNnbWxEZWNsICs9IGNcbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5ET0NUWVBFOlxuICAgICAgICAgIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgICAgZW1pdE5vZGUocGFyc2VyLCAnb25kb2N0eXBlJywgcGFyc2VyLmRvY3R5cGUpXG4gICAgICAgICAgICBwYXJzZXIuZG9jdHlwZSA9IHRydWUgLy8ganVzdCByZW1lbWJlciB0aGF0IHdlIHNhdyBpdC5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VyLmRvY3R5cGUgKz0gY1xuICAgICAgICAgICAgaWYgKGMgPT09ICdbJykge1xuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkRPQ1RZUEVfRFREXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5ET0NUWVBFX1FVT1RFRFxuICAgICAgICAgICAgICBwYXJzZXIucSA9IGNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuRE9DVFlQRV9RVU9URUQ6XG4gICAgICAgICAgcGFyc2VyLmRvY3R5cGUgKz0gY1xuICAgICAgICAgIGlmIChjID09PSBwYXJzZXIucSkge1xuICAgICAgICAgICAgcGFyc2VyLnEgPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5ET0NUWVBFXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkRPQ1RZUEVfRFREOlxuICAgICAgICAgIHBhcnNlci5kb2N0eXBlICs9IGNcbiAgICAgICAgICBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkRPQ1RZUEVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRV9EVERfUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIucSA9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuRE9DVFlQRV9EVERfUVVPVEVEOlxuICAgICAgICAgIHBhcnNlci5kb2N0eXBlICs9IGNcbiAgICAgICAgICBpZiAoYyA9PT0gcGFyc2VyLnEpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuRE9DVFlQRV9EVERcbiAgICAgICAgICAgIHBhcnNlci5xID0gJydcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVDpcbiAgICAgICAgICBpZiAoYyA9PT0gJy0nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNPTU1FTlRfRU5ESU5HXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5jb21tZW50ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVF9FTkRJTkc6XG4gICAgICAgICAgaWYgKGMgPT09ICctJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UX0VOREVEXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCA9IHRleHRvcHRzKHBhcnNlci5vcHQsIHBhcnNlci5jb21tZW50KVxuICAgICAgICAgICAgaWYgKHBhcnNlci5jb21tZW50KSB7XG4gICAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY29tbWVudCcsIHBhcnNlci5jb21tZW50KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLmNvbW1lbnQgPSAnJ1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCArPSAnLScgKyBjXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNPTU1FTlRcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQ09NTUVOVF9FTkRFRDpcbiAgICAgICAgICBpZiAoYyAhPT0gJz4nKSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ01hbGZvcm1lZCBjb21tZW50JylcbiAgICAgICAgICAgIC8vIGFsbG93IDwhLS0gYmxhaCAtLSBibG9vIC0tPiBpbiBub24tc3RyaWN0IG1vZGUsXG4gICAgICAgICAgICAvLyB3aGljaCBpcyBhIGNvbW1lbnQgb2YgXCIgYmxhaCAtLSBibG9vIFwiXG4gICAgICAgICAgICBwYXJzZXIuY29tbWVudCArPSAnLS0nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DT01NRU5UXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQTpcbiAgICAgICAgICBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkNEQVRBX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gY1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQV9FTkRJTkc6XG4gICAgICAgICAgaWYgKGMgPT09ICddJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQV9FTkRJTkdfMlxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gJ10nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DREFUQV9FTkRJTkdfMjpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBpZiAocGFyc2VyLmNkYXRhKSB7XG4gICAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uY2RhdGEnLCBwYXJzZXIuY2RhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbmNsb3NlY2RhdGEnKVxuICAgICAgICAgICAgcGFyc2VyLmNkYXRhID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJ10nKSB7XG4gICAgICAgICAgICBwYXJzZXIuY2RhdGEgKz0gJ10nXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlci5jZGF0YSArPSAnXV0nICsgY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DREFUQVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5QUk9DX0lOU1Q6XG4gICAgICAgICAgaWYgKGMgPT09ICc/Jykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5QUk9DX0lOU1RfRU5ESU5HXG4gICAgICAgICAgfSBlbHNlIGlmIChpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0JPRFlcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VyLnByb2NJbnN0TmFtZSArPSBjXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLlBST0NfSU5TVF9CT0RZOlxuICAgICAgICAgIGlmICghcGFyc2VyLnByb2NJbnN0Qm9keSAmJiBpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPycpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0VORElOR1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIucHJvY0luc3RCb2R5ICs9IGNcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuUFJPQ19JTlNUX0VORElORzpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBlbWl0Tm9kZShwYXJzZXIsICdvbnByb2Nlc3NpbmdpbnN0cnVjdGlvbicsIHtcbiAgICAgICAgICAgICAgbmFtZTogcGFyc2VyLnByb2NJbnN0TmFtZSxcbiAgICAgICAgICAgICAgYm9keTogcGFyc2VyLnByb2NJbnN0Qm9keVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHBhcnNlci5wcm9jSW5zdE5hbWUgPSBwYXJzZXIucHJvY0luc3RCb2R5ID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIucHJvY0luc3RCb2R5ICs9ICc/JyArIGNcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuUFJPQ19JTlNUX0JPRFlcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuT1BFTl9UQUc6XG4gICAgICAgICAgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ld1RhZyhwYXJzZXIpXG4gICAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICAgIG9wZW5UYWcocGFyc2VyKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnLycpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVyIGluIHRhZyBuYW1lJylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5PUEVOX1RBR19TTEFTSDpcbiAgICAgICAgICBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlciwgdHJ1ZSlcbiAgICAgICAgICAgIGNsb3NlVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdGb3J3YXJkLXNsYXNoIGluIG9wZW5pbmcgdGFnIG5vdCBmb2xsb3dlZCBieSA+JylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQjpcbiAgICAgICAgICAvLyBoYXZlbid0IHJlYWQgdGhlIGF0dHJpYnV0ZSBuYW1lIHlldC5cbiAgICAgICAgICBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliTmFtZSA9IGNcbiAgICAgICAgICAgIHBhcnNlci5hdHRyaWJWYWx1ZSA9ICcnXG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9OQU1FXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnSW52YWxpZCBhdHRyaWJ1dGUgbmFtZScpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9OQU1FOlxuICAgICAgICAgIGlmIChjID09PSAnPScpIHtcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFXG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnQXR0cmlidXRlIHdpdGhvdXQgdmFsdWUnKVxuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gcGFyc2VyLmF0dHJpYk5hbWVcbiAgICAgICAgICAgIGF0dHJpYihwYXJzZXIpXG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfTkFNRV9TQVdfV0hJVEVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnSW52YWxpZCBhdHRyaWJ1dGUgbmFtZScpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9OQU1FX1NBV19XSElURTpcbiAgICAgICAgICBpZiAoYyA9PT0gJz0nKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9WQUxVRVxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0F0dHJpYnV0ZSB3aXRob3V0IHZhbHVlJylcbiAgICAgICAgICAgIHBhcnNlci50YWcuYXR0cmlidXRlc1twYXJzZXIuYXR0cmliTmFtZV0gPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gJydcbiAgICAgICAgICAgIGVtaXROb2RlKHBhcnNlciwgJ29uYXR0cmlidXRlJywge1xuICAgICAgICAgICAgICBuYW1lOiBwYXJzZXIuYXR0cmliTmFtZSxcbiAgICAgICAgICAgICAgdmFsdWU6ICcnXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYk5hbWUgPSAnJ1xuICAgICAgICAgICAgaWYgKGMgPT09ICc+Jykge1xuICAgICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICAgIHBhcnNlci5hdHRyaWJOYW1lID0gY1xuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQl9OQU1FXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgYXR0cmlidXRlIG5hbWUnKVxuICAgICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5BVFRSSUJfVkFMVUU6XG4gICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzUXVvdGUoYykpIHtcbiAgICAgICAgICAgIHBhcnNlci5xID0gY1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfUVVPVEVEXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnVW5xdW90ZWQgYXR0cmlidXRlIHZhbHVlJylcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFX1VOUVVPVEVEXG4gICAgICAgICAgICBwYXJzZXIuYXR0cmliVmFsdWUgPSBjXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkFUVFJJQl9WQUxVRV9RVU9URUQ6XG4gICAgICAgICAgaWYgKGMgIT09IHBhcnNlci5xKSB7XG4gICAgICAgICAgICBpZiAoYyA9PT0gJyYnKSB7XG4gICAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX1ZBTFVFX0VOVElUWV9RXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwYXJzZXIuYXR0cmliVmFsdWUgKz0gY1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgYXR0cmliKHBhcnNlcilcbiAgICAgICAgICBwYXJzZXIucSA9ICcnXG4gICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfQ0xPU0VEXG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0NMT1NFRDpcbiAgICAgICAgICBpZiAoaXNXaGl0ZXNwYWNlKGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gJz4nKSB7XG4gICAgICAgICAgICBvcGVuVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGMgPT09ICcvJykge1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5PUEVOX1RBR19TTEFTSFxuICAgICAgICAgIH0gZWxzZSBpZiAoaXNNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ05vIHdoaXRlc3BhY2UgYmV0d2VlbiBhdHRyaWJ1dGVzJylcbiAgICAgICAgICAgIHBhcnNlci5hdHRyaWJOYW1lID0gY1xuICAgICAgICAgICAgcGFyc2VyLmF0dHJpYlZhbHVlID0gJydcbiAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuQVRUUklCX05BTUVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIGF0dHJpYnV0ZSBuYW1lJylcbiAgICAgICAgICB9XG4gICAgICAgICAgY29udGludWVcblxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX1VOUVVPVEVEOlxuICAgICAgICAgIGlmICghaXNBdHRyaWJFbmQoYykpIHtcbiAgICAgICAgICAgIGlmIChjID09PSAnJicpIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5BVFRSSUJfVkFMVUVfRU5USVRZX1VcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBhcnNlci5hdHRyaWJWYWx1ZSArPSBjXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBhdHRyaWIocGFyc2VyKVxuICAgICAgICAgIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIG9wZW5UYWcocGFyc2VyKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJzZXIuc3RhdGUgPSBTLkFUVFJJQlxuICAgICAgICAgIH1cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGNhc2UgUy5DTE9TRV9UQUc6XG4gICAgICAgICAgaWYgKCFwYXJzZXIudGFnTmFtZSkge1xuICAgICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgICAgfSBlbHNlIGlmIChub3RNYXRjaChuYW1lU3RhcnQsIGMpKSB7XG4gICAgICAgICAgICAgIGlmIChwYXJzZXIuc2NyaXB0KSB7XG4gICAgICAgICAgICAgICAgcGFyc2VyLnNjcmlwdCArPSAnPC8nICsgY1xuICAgICAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IFMuU0NSSVBUXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIHRhZ25hbWUgaW4gY2xvc2luZyB0YWcuJylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSBjXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChjID09PSAnPicpIHtcbiAgICAgICAgICAgIGNsb3NlVGFnKHBhcnNlcilcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTWF0Y2gobmFtZUJvZHksIGMpKSB7XG4gICAgICAgICAgICBwYXJzZXIudGFnTmFtZSArPSBjXG4gICAgICAgICAgfSBlbHNlIGlmIChwYXJzZXIuc2NyaXB0KSB7XG4gICAgICAgICAgICBwYXJzZXIuc2NyaXB0ICs9ICc8LycgKyBwYXJzZXIudGFnTmFtZVxuICAgICAgICAgICAgcGFyc2VyLnRhZ05hbWUgPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5TQ1JJUFRcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFpc1doaXRlc3BhY2UoYykpIHtcbiAgICAgICAgICAgICAgc3RyaWN0RmFpbChwYXJzZXIsICdJbnZhbGlkIHRhZ25hbWUgaW4gY2xvc2luZyB0YWcnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gUy5DTE9TRV9UQUdfU0FXX1dISVRFXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLkNMT1NFX1RBR19TQVdfV0hJVEU6XG4gICAgICAgICAgaWYgKGlzV2hpdGVzcGFjZShjKSkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGMgPT09ICc+Jykge1xuICAgICAgICAgICAgY2xvc2VUYWcocGFyc2VyKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdHJpY3RGYWlsKHBhcnNlciwgJ0ludmFsaWQgY2hhcmFjdGVycyBpbiBjbG9zaW5nIHRhZycpXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlXG5cbiAgICAgICAgY2FzZSBTLlRFWFRfRU5USVRZOlxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0VOVElUWV9ROlxuICAgICAgICBjYXNlIFMuQVRUUklCX1ZBTFVFX0VOVElUWV9VOlxuICAgICAgICAgIHZhciByZXR1cm5TdGF0ZVxuICAgICAgICAgIHZhciBidWZmZXJcbiAgICAgICAgICBzd2l0Y2ggKHBhcnNlci5zdGF0ZSkge1xuICAgICAgICAgICAgY2FzZSBTLlRFWFRfRU5USVRZOlxuICAgICAgICAgICAgICByZXR1cm5TdGF0ZSA9IFMuVEVYVFxuICAgICAgICAgICAgICBidWZmZXIgPSAndGV4dE5vZGUnXG4gICAgICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgICAgIGNhc2UgUy5BVFRSSUJfVkFMVUVfRU5USVRZX1E6XG4gICAgICAgICAgICAgIHJldHVyblN0YXRlID0gUy5BVFRSSUJfVkFMVUVfUVVPVEVEXG4gICAgICAgICAgICAgIGJ1ZmZlciA9ICdhdHRyaWJWYWx1ZSdcbiAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgY2FzZSBTLkFUVFJJQl9WQUxVRV9FTlRJVFlfVTpcbiAgICAgICAgICAgICAgcmV0dXJuU3RhdGUgPSBTLkFUVFJJQl9WQUxVRV9VTlFVT1RFRFxuICAgICAgICAgICAgICBidWZmZXIgPSAnYXR0cmliVmFsdWUnXG4gICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGMgPT09ICc7Jykge1xuICAgICAgICAgICAgaWYgKHBhcnNlci5vcHQudW5wYXJzZWRFbnRpdGllcykge1xuICAgICAgICAgICAgICB2YXIgcGFyc2VkRW50aXR5ID0gcGFyc2VFbnRpdHkocGFyc2VyKVxuICAgICAgICAgICAgICBwYXJzZXIuZW50aXR5ID0gJydcbiAgICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gcmV0dXJuU3RhdGVcbiAgICAgICAgICAgICAgcGFyc2VyLndyaXRlKHBhcnNlZEVudGl0eSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBhcnNlcltidWZmZXJdICs9IHBhcnNlRW50aXR5KHBhcnNlcilcbiAgICAgICAgICAgICAgcGFyc2VyLmVudGl0eSA9ICcnXG4gICAgICAgICAgICAgIHBhcnNlci5zdGF0ZSA9IHJldHVyblN0YXRlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmIChpc01hdGNoKHBhcnNlci5lbnRpdHkubGVuZ3RoID8gZW50aXR5Qm9keSA6IGVudGl0eVN0YXJ0LCBjKSkge1xuICAgICAgICAgICAgcGFyc2VyLmVudGl0eSArPSBjXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHN0cmljdEZhaWwocGFyc2VyLCAnSW52YWxpZCBjaGFyYWN0ZXIgaW4gZW50aXR5IG5hbWUnKVxuICAgICAgICAgICAgcGFyc2VyW2J1ZmZlcl0gKz0gJyYnICsgcGFyc2VyLmVudGl0eSArIGNcbiAgICAgICAgICAgIHBhcnNlci5lbnRpdHkgPSAnJ1xuICAgICAgICAgICAgcGFyc2VyLnN0YXRlID0gcmV0dXJuU3RhdGVcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuXG4gICAgICAgIGRlZmF1bHQ6IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocGFyc2VyLCAnVW5rbm93biBzdGF0ZTogJyArIHBhcnNlci5zdGF0ZSlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gLy8gd2hpbGVcblxuICAgIGlmIChwYXJzZXIucG9zaXRpb24gPj0gcGFyc2VyLmJ1ZmZlckNoZWNrUG9zaXRpb24pIHtcbiAgICAgIGNoZWNrQnVmZmVyTGVuZ3RoKHBhcnNlcilcbiAgICB9XG4gICAgcmV0dXJuIHBhcnNlclxuICB9XG5cbiAgLyohIGh0dHA6Ly9tdGhzLmJlL2Zyb21jb2RlcG9pbnQgdjAuMS4wIGJ5IEBtYXRoaWFzICovXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGlmICghU3RyaW5nLmZyb21Db2RlUG9pbnQpIHtcbiAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0cmluZ0Zyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGVcbiAgICAgIHZhciBmbG9vciA9IE1hdGguZmxvb3JcbiAgICAgIHZhciBmcm9tQ29kZVBvaW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgTUFYX1NJWkUgPSAweDQwMDBcbiAgICAgICAgdmFyIGNvZGVVbml0cyA9IFtdXG4gICAgICAgIHZhciBoaWdoU3Vycm9nYXRlXG4gICAgICAgIHZhciBsb3dTdXJyb2dhdGVcbiAgICAgICAgdmFyIGluZGV4ID0gLTFcbiAgICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgICAgaWYgKCFsZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzdWx0ID0gJydcbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICB2YXIgY29kZVBvaW50ID0gTnVtYmVyKGFyZ3VtZW50c1tpbmRleF0pXG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgIWlzRmluaXRlKGNvZGVQb2ludCkgfHwgLy8gYE5hTmAsIGArSW5maW5pdHlgLCBvciBgLUluZmluaXR5YFxuICAgICAgICAgICAgY29kZVBvaW50IDwgMCB8fCAvLyBub3QgYSB2YWxpZCBVbmljb2RlIGNvZGUgcG9pbnRcbiAgICAgICAgICAgIGNvZGVQb2ludCA+IDB4MTBGRkZGIHx8IC8vIG5vdCBhIHZhbGlkIFVuaWNvZGUgY29kZSBwb2ludFxuICAgICAgICAgICAgZmxvb3IoY29kZVBvaW50KSAhPT0gY29kZVBvaW50IC8vIG5vdCBhbiBpbnRlZ2VyXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIGNvZGUgcG9pbnQ6ICcgKyBjb2RlUG9pbnQpXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjb2RlUG9pbnQgPD0gMHhGRkZGKSB7IC8vIEJNUCBjb2RlIHBvaW50XG4gICAgICAgICAgICBjb2RlVW5pdHMucHVzaChjb2RlUG9pbnQpXG4gICAgICAgICAgfSBlbHNlIHsgLy8gQXN0cmFsIGNvZGUgcG9pbnQ7IHNwbGl0IGluIHN1cnJvZ2F0ZSBoYWx2ZXNcbiAgICAgICAgICAgIC8vIGh0dHA6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmcjc3Vycm9nYXRlLWZvcm11bGFlXG4gICAgICAgICAgICBjb2RlUG9pbnQgLT0gMHgxMDAwMFxuICAgICAgICAgICAgaGlnaFN1cnJvZ2F0ZSA9IChjb2RlUG9pbnQgPj4gMTApICsgMHhEODAwXG4gICAgICAgICAgICBsb3dTdXJyb2dhdGUgPSAoY29kZVBvaW50ICUgMHg0MDApICsgMHhEQzAwXG4gICAgICAgICAgICBjb2RlVW5pdHMucHVzaChoaWdoU3Vycm9nYXRlLCBsb3dTdXJyb2dhdGUpXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpbmRleCArIDEgPT09IGxlbmd0aCB8fCBjb2RlVW5pdHMubGVuZ3RoID4gTUFYX1NJWkUpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBzdHJpbmdGcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY29kZVVuaXRzKVxuICAgICAgICAgICAgY29kZVVuaXRzLmxlbmd0aCA9IDBcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgfVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFN0cmluZywgJ2Zyb21Db2RlUG9pbnQnLCB7XG4gICAgICAgICAgdmFsdWU6IGZyb21Db2RlUG9pbnQsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICAgIH0pXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBTdHJpbmcuZnJvbUNvZGVQb2ludCA9IGZyb21Db2RlUG9pbnRcbiAgICAgIH1cbiAgICB9KCkpXG4gIH1cbn0pKHR5cGVvZiBleHBvcnRzID09PSAndW5kZWZpbmVkJyA/IHRoaXMuc2F4ID0ge30gOiBleHBvcnRzKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/node_modules/xml2js/node_modules/sax/lib/sax.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/index.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/aws-sdk/vendor/endpoint-cache/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar LRU_1 = __webpack_require__(/*! ./utils/LRU */ \"(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js\");\nvar CACHE_SIZE = 1000;\n/**\n * Inspired node-lru-cache[https://github.com/isaacs/node-lru-cache]\n */\nvar EndpointCache = /** @class */ (function () {\n    function EndpointCache(maxSize) {\n        if (maxSize === void 0) { maxSize = CACHE_SIZE; }\n        this.maxSize = maxSize;\n        this.cache = new LRU_1.LRUCache(maxSize);\n    }\n    ;\n    Object.defineProperty(EndpointCache.prototype, \"size\", {\n        get: function () {\n            return this.cache.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EndpointCache.prototype.put = function (key, value) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var endpointRecord = this.populateValue(value);\n        this.cache.put(keyString, endpointRecord);\n    };\n    EndpointCache.prototype.get = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        var now = Date.now();\n        var records = this.cache.get(keyString);\n        if (records) {\n            for (var i = records.length-1; i >= 0; i--) {\n                var record = records[i];\n                if (record.Expire < now) {\n                    records.splice(i, 1);\n                }\n            }\n            if (records.length === 0) {\n                this.cache.remove(keyString);\n                return undefined;\n            }\n        }\n        return records;\n    };\n    EndpointCache.getKeyString = function (key) {\n        var identifiers = [];\n        var identifierNames = Object.keys(key).sort();\n        for (var i = 0; i < identifierNames.length; i++) {\n            var identifierName = identifierNames[i];\n            if (key[identifierName] === undefined)\n                continue;\n            identifiers.push(key[identifierName]);\n        }\n        return identifiers.join(' ');\n    };\n    EndpointCache.prototype.populateValue = function (endpoints) {\n        var now = Date.now();\n        return endpoints.map(function (endpoint) { return ({\n            Address: endpoint.Address || '',\n            Expire: now + (endpoint.CachePeriodInMinutes || 1) * 60 * 1000\n        }); });\n    };\n    EndpointCache.prototype.empty = function () {\n        this.cache.empty();\n    };\n    EndpointCache.prototype.remove = function (key) {\n      var keyString = typeof key !== 'string' ? EndpointCache.getKeyString(key) : key;\n        this.cache.remove(keyString);\n    };\n    return EndpointCache;\n}());\nexports.EndpointCache = EndpointCache;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvdmVuZG9yL2VuZHBvaW50LWNhY2hlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVksbUJBQU8sQ0FBQyx3RkFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxRQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw0QkFBNEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQSxTQUFTLElBQUk7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1vbm9leHBvL25leHQvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvdmVuZG9yL2VuZHBvaW50LWNhY2hlL2luZGV4LmpzPzM1ZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTFJVXzEgPSByZXF1aXJlKFwiLi91dGlscy9MUlVcIik7XG52YXIgQ0FDSEVfU0laRSA9IDEwMDA7XG4vKipcbiAqIEluc3BpcmVkIG5vZGUtbHJ1LWNhY2hlW2h0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3Mvbm9kZS1scnUtY2FjaGVdXG4gKi9cbnZhciBFbmRwb2ludENhY2hlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEVuZHBvaW50Q2FjaGUobWF4U2l6ZSkge1xuICAgICAgICBpZiAobWF4U2l6ZSA9PT0gdm9pZCAwKSB7IG1heFNpemUgPSBDQUNIRV9TSVpFOyB9XG4gICAgICAgIHRoaXMubWF4U2l6ZSA9IG1heFNpemU7XG4gICAgICAgIHRoaXMuY2FjaGUgPSBuZXcgTFJVXzEuTFJVQ2FjaGUobWF4U2l6ZSk7XG4gICAgfVxuICAgIDtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRW5kcG9pbnRDYWNoZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUubGVuZ3RoO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBFbmRwb2ludENhY2hlLnByb3RvdHlwZS5wdXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgdmFyIGtleVN0cmluZyA9IHR5cGVvZiBrZXkgIT09ICdzdHJpbmcnID8gRW5kcG9pbnRDYWNoZS5nZXRLZXlTdHJpbmcoa2V5KSA6IGtleTtcbiAgICAgICAgdmFyIGVuZHBvaW50UmVjb3JkID0gdGhpcy5wb3B1bGF0ZVZhbHVlKHZhbHVlKTtcbiAgICAgICAgdGhpcy5jYWNoZS5wdXQoa2V5U3RyaW5nLCBlbmRwb2ludFJlY29yZCk7XG4gICAgfTtcbiAgICBFbmRwb2ludENhY2hlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIga2V5U3RyaW5nID0gdHlwZW9mIGtleSAhPT0gJ3N0cmluZycgPyBFbmRwb2ludENhY2hlLmdldEtleVN0cmluZyhrZXkpIDoga2V5O1xuICAgICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdmFyIHJlY29yZHMgPSB0aGlzLmNhY2hlLmdldChrZXlTdHJpbmcpO1xuICAgICAgICBpZiAocmVjb3Jkcykge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHJlY29yZHMubGVuZ3RoLTE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlY29yZCA9IHJlY29yZHNbaV07XG4gICAgICAgICAgICAgICAgaWYgKHJlY29yZC5FeHBpcmUgPCBub3cpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVjb3Jkcy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlY29yZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZS5yZW1vdmUoa2V5U3RyaW5nKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZWNvcmRzO1xuICAgIH07XG4gICAgRW5kcG9pbnRDYWNoZS5nZXRLZXlTdHJpbmcgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICAgICAgICB2YXIgaWRlbnRpZmllck5hbWVzID0gT2JqZWN0LmtleXMoa2V5KS5zb3J0KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaWRlbnRpZmllck5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgaWRlbnRpZmllck5hbWUgPSBpZGVudGlmaWVyTmFtZXNbaV07XG4gICAgICAgICAgICBpZiAoa2V5W2lkZW50aWZpZXJOYW1lXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWRlbnRpZmllcnMucHVzaChrZXlbaWRlbnRpZmllck5hbWVdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaWRlbnRpZmllcnMuam9pbignICcpO1xuICAgIH07XG4gICAgRW5kcG9pbnRDYWNoZS5wcm90b3R5cGUucG9wdWxhdGVWYWx1ZSA9IGZ1bmN0aW9uIChlbmRwb2ludHMpIHtcbiAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIHJldHVybiBlbmRwb2ludHMubWFwKGZ1bmN0aW9uIChlbmRwb2ludCkgeyByZXR1cm4gKHtcbiAgICAgICAgICAgIEFkZHJlc3M6IGVuZHBvaW50LkFkZHJlc3MgfHwgJycsXG4gICAgICAgICAgICBFeHBpcmU6IG5vdyArIChlbmRwb2ludC5DYWNoZVBlcmlvZEluTWludXRlcyB8fCAxKSAqIDYwICogMTAwMFxuICAgICAgICB9KTsgfSk7XG4gICAgfTtcbiAgICBFbmRwb2ludENhY2hlLnByb3RvdHlwZS5lbXB0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5lbXB0eSgpO1xuICAgIH07XG4gICAgRW5kcG9pbnRDYWNoZS5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIGtleVN0cmluZyA9IHR5cGVvZiBrZXkgIT09ICdzdHJpbmcnID8gRW5kcG9pbnRDYWNoZS5nZXRLZXlTdHJpbmcoa2V5KSA6IGtleTtcbiAgICAgICAgdGhpcy5jYWNoZS5yZW1vdmUoa2V5U3RyaW5nKTtcbiAgICB9O1xuICAgIHJldHVybiBFbmRwb2ludENhY2hlO1xufSgpKTtcbmV4cG9ydHMuRW5kcG9pbnRDYWNoZSA9IEVuZHBvaW50Q2FjaGU7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL2F3cy1zZGsvdmVuZG9yL2VuZHBvaW50LWNhY2hlL3V0aWxzL0xSVS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbW9ub2V4cG8vbmV4dC8uLi8uLi9ub2RlX21vZHVsZXMvYXdzLXNkay92ZW5kb3IvZW5kcG9pbnQtY2FjaGUvdXRpbHMvTFJVLmpzP2ZhOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTGlua2VkTGlzdE5vZGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGlua2VkTGlzdE5vZGUoa2V5LCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmtleSA9IGtleTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gTGlua2VkTGlzdE5vZGU7XG59KCkpO1xudmFyIExSVUNhY2hlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIExSVUNhY2hlKHNpemUpIHtcbiAgICAgICAgdGhpcy5ub2RlTWFwID0ge307XG4gICAgICAgIHRoaXMuc2l6ZSA9IDA7XG4gICAgICAgIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicgfHwgc2l6ZSA8IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FjaGUgc2l6ZSBjYW4gb25seSBiZSBwb3NpdGl2ZSBudW1iZXInKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNpemVMaW1pdCA9IHNpemU7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMUlVDYWNoZS5wcm90b3R5cGUsIFwibGVuZ3RoXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zaXplO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBMUlVDYWNoZS5wcm90b3R5cGUucHJlcGVuZFRvTGlzdCA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmICghdGhpcy5oZWFkZXJOb2RlKSB7XG4gICAgICAgICAgICB0aGlzLnRhaWxOb2RlID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyTm9kZS5wcmV2ID0gbm9kZTtcbiAgICAgICAgICAgIG5vZGUubmV4dCA9IHRoaXMuaGVhZGVyTm9kZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhlYWRlck5vZGUgPSBub2RlO1xuICAgICAgICB0aGlzLnNpemUrKztcbiAgICB9O1xuICAgIExSVUNhY2hlLnByb3RvdHlwZS5yZW1vdmVGcm9tVGFpbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnRhaWxOb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlID0gdGhpcy50YWlsTm9kZTtcbiAgICAgICAgdmFyIHByZXZOb2RlID0gbm9kZS5wcmV2O1xuICAgICAgICBpZiAocHJldk5vZGUpIHtcbiAgICAgICAgICAgIHByZXZOb2RlLm5leHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZS5wcmV2ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnRhaWxOb2RlID0gcHJldk5vZGU7XG4gICAgICAgIHRoaXMuc2l6ZS0tO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIExSVUNhY2hlLnByb3RvdHlwZS5kZXRhY2hGcm9tTGlzdCA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmICh0aGlzLmhlYWRlck5vZGUgPT09IG5vZGUpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyTm9kZSA9IG5vZGUubmV4dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy50YWlsTm9kZSA9PT0gbm9kZSkge1xuICAgICAgICAgICAgdGhpcy50YWlsTm9kZSA9IG5vZGUucHJldjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5wcmV2KSB7XG4gICAgICAgICAgICBub2RlLnByZXYubmV4dCA9IG5vZGUubmV4dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5uZXh0KSB7XG4gICAgICAgICAgICBub2RlLm5leHQucHJldiA9IG5vZGUucHJldjtcbiAgICAgICAgfVxuICAgICAgICBub2RlLm5leHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIG5vZGUucHJldiA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5zaXplLS07XG4gICAgfTtcbiAgICBMUlVDYWNoZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAodGhpcy5ub2RlTWFwW2tleV0pIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy5ub2RlTWFwW2tleV07XG4gICAgICAgICAgICB0aGlzLmRldGFjaEZyb21MaXN0KG5vZGUpO1xuICAgICAgICAgICAgdGhpcy5wcmVwZW5kVG9MaXN0KG5vZGUpO1xuICAgICAgICAgICAgcmV0dXJuIG5vZGUudmFsdWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExSVUNhY2hlLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICh0aGlzLm5vZGVNYXBba2V5XSkge1xuICAgICAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGVNYXBba2V5XTtcbiAgICAgICAgICAgIHRoaXMuZGV0YWNoRnJvbUxpc3Qobm9kZSk7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5ub2RlTWFwW2tleV07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExSVUNhY2hlLnByb3RvdHlwZS5wdXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAodGhpcy5ub2RlTWFwW2tleV0pIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5zaXplID09PSB0aGlzLnNpemVMaW1pdCkge1xuICAgICAgICAgICAgdmFyIHRhaWxOb2RlID0gdGhpcy5yZW1vdmVGcm9tVGFpbCgpO1xuICAgICAgICAgICAgdmFyIGtleV8xID0gdGFpbE5vZGUua2V5O1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMubm9kZU1hcFtrZXlfMV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5ld05vZGUgPSBuZXcgTGlua2VkTGlzdE5vZGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgIHRoaXMubm9kZU1hcFtrZXldID0gbmV3Tm9kZTtcbiAgICAgICAgdGhpcy5wcmVwZW5kVG9MaXN0KG5ld05vZGUpO1xuICAgIH07XG4gICAgTFJVQ2FjaGUucHJvdG90eXBlLmVtcHR5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMubm9kZU1hcCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICB2YXIgbm9kZSA9IHRoaXMubm9kZU1hcFtrZXldO1xuICAgICAgICAgICAgdGhpcy5kZXRhY2hGcm9tTGlzdChub2RlKTtcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLm5vZGVNYXBba2V5XTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIExSVUNhY2hlO1xufSgpKTtcbmV4cG9ydHMuTFJVQ2FjaGUgPSBMUlVDYWNoZTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json":
/*!****************************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.min.json ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"version":"2.0","metadata":{"apiVersion":"2014-06-30","endpointPrefix":"cognito-identity","jsonVersion":"1.1","protocol":"json","serviceFullName":"Amazon Cognito Identity","serviceId":"Cognito Identity","signatureVersion":"v4","targetPrefix":"AWSCognitoIdentityService","uid":"cognito-identity-2014-06-30"},"operations":{"CreateIdentityPool":{"input":{"type":"structure","required":["IdentityPoolName","AllowUnauthenticatedIdentities"],"members":{"IdentityPoolName":{},"AllowUnauthenticatedIdentities":{"type":"boolean"},"AllowClassicFlow":{"type":"boolean"},"SupportedLoginProviders":{"shape":"S5"},"DeveloperProviderName":{},"OpenIdConnectProviderARNs":{"shape":"S9"},"CognitoIdentityProviders":{"shape":"Sb"},"SamlProviderARNs":{"shape":"Sg"},"IdentityPoolTags":{"shape":"Sh"}}},"output":{"shape":"Sk"}},"DeleteIdentities":{"input":{"type":"structure","required":["IdentityIdsToDelete"],"members":{"IdentityIdsToDelete":{"type":"list","member":{}}}},"output":{"type":"structure","members":{"UnprocessedIdentityIds":{"type":"list","member":{"type":"structure","members":{"IdentityId":{},"ErrorCode":{}}}}}}},"DeleteIdentityPool":{"input":{"type":"structure","required":["IdentityPoolId"],"members":{"IdentityPoolId":{}}}},"DescribeIdentity":{"input":{"type":"structure","required":["IdentityId"],"members":{"IdentityId":{}}},"output":{"shape":"Sv"}},"DescribeIdentityPool":{"input":{"type":"structure","required":["IdentityPoolId"],"members":{"IdentityPoolId":{}}},"output":{"shape":"Sk"}},"GetCredentialsForIdentity":{"input":{"type":"structure","required":["IdentityId"],"members":{"IdentityId":{},"Logins":{"shape":"S10"},"CustomRoleArn":{}}},"output":{"type":"structure","members":{"IdentityId":{},"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}}}},"authtype":"none"},"GetId":{"input":{"type":"structure","required":["IdentityPoolId"],"members":{"AccountId":{},"IdentityPoolId":{},"Logins":{"shape":"S10"}}},"output":{"type":"structure","members":{"IdentityId":{}}},"authtype":"none"},"GetIdentityPoolRoles":{"input":{"type":"structure","required":["IdentityPoolId"],"members":{"IdentityPoolId":{}}},"output":{"type":"structure","members":{"IdentityPoolId":{},"Roles":{"shape":"S1c"},"RoleMappings":{"shape":"S1e"}}}},"GetOpenIdToken":{"input":{"type":"structure","required":["IdentityId"],"members":{"IdentityId":{},"Logins":{"shape":"S10"}}},"output":{"type":"structure","members":{"IdentityId":{},"Token":{}}},"authtype":"none"},"GetOpenIdTokenForDeveloperIdentity":{"input":{"type":"structure","required":["IdentityPoolId","Logins"],"members":{"IdentityPoolId":{},"IdentityId":{},"Logins":{"shape":"S10"},"PrincipalTags":{"shape":"S1s"},"TokenDuration":{"type":"long"}}},"output":{"type":"structure","members":{"IdentityId":{},"Token":{}}}},"GetPrincipalTagAttributeMap":{"input":{"type":"structure","required":["IdentityPoolId","IdentityProviderName"],"members":{"IdentityPoolId":{},"IdentityProviderName":{}}},"output":{"type":"structure","members":{"IdentityPoolId":{},"IdentityProviderName":{},"UseDefaults":{"type":"boolean"},"PrincipalTags":{"shape":"S1s"}}}},"ListIdentities":{"input":{"type":"structure","required":["IdentityPoolId","MaxResults"],"members":{"IdentityPoolId":{},"MaxResults":{"type":"integer"},"NextToken":{},"HideDisabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"IdentityPoolId":{},"Identities":{"type":"list","member":{"shape":"Sv"}},"NextToken":{}}}},"ListIdentityPools":{"input":{"type":"structure","required":["MaxResults"],"members":{"MaxResults":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"IdentityPools":{"type":"list","member":{"type":"structure","members":{"IdentityPoolId":{},"IdentityPoolName":{}}}},"NextToken":{}}}},"ListTagsForResource":{"input":{"type":"structure","required":["ResourceArn"],"members":{"ResourceArn":{}}},"output":{"type":"structure","members":{"Tags":{"shape":"Sh"}}}},"LookupDeveloperIdentity":{"input":{"type":"structure","required":["IdentityPoolId"],"members":{"IdentityPoolId":{},"IdentityId":{},"DeveloperUserIdentifier":{},"MaxResults":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"IdentityId":{},"DeveloperUserIdentifierList":{"type":"list","member":{}},"NextToken":{}}}},"MergeDeveloperIdentities":{"input":{"type":"structure","required":["SourceUserIdentifier","DestinationUserIdentifier","DeveloperProviderName","IdentityPoolId"],"members":{"SourceUserIdentifier":{},"DestinationUserIdentifier":{},"DeveloperProviderName":{},"IdentityPoolId":{}}},"output":{"type":"structure","members":{"IdentityId":{}}}},"SetIdentityPoolRoles":{"input":{"type":"structure","required":["IdentityPoolId","Roles"],"members":{"IdentityPoolId":{},"Roles":{"shape":"S1c"},"RoleMappings":{"shape":"S1e"}}}},"SetPrincipalTagAttributeMap":{"input":{"type":"structure","required":["IdentityPoolId","IdentityProviderName"],"members":{"IdentityPoolId":{},"IdentityProviderName":{},"UseDefaults":{"type":"boolean"},"PrincipalTags":{"shape":"S1s"}}},"output":{"type":"structure","members":{"IdentityPoolId":{},"IdentityProviderName":{},"UseDefaults":{"type":"boolean"},"PrincipalTags":{"shape":"S1s"}}}},"TagResource":{"input":{"type":"structure","required":["ResourceArn","Tags"],"members":{"ResourceArn":{},"Tags":{"shape":"Sh"}}},"output":{"type":"structure","members":{}}},"UnlinkDeveloperIdentity":{"input":{"type":"structure","required":["IdentityId","IdentityPoolId","DeveloperProviderName","DeveloperUserIdentifier"],"members":{"IdentityId":{},"IdentityPoolId":{},"DeveloperProviderName":{},"DeveloperUserIdentifier":{}}}},"UnlinkIdentity":{"input":{"type":"structure","required":["IdentityId","Logins","LoginsToRemove"],"members":{"IdentityId":{},"Logins":{"shape":"S10"},"LoginsToRemove":{"shape":"Sw"}}},"authtype":"none"},"UntagResource":{"input":{"type":"structure","required":["ResourceArn","TagKeys"],"members":{"ResourceArn":{},"TagKeys":{"type":"list","member":{}}}},"output":{"type":"structure","members":{}}},"UpdateIdentityPool":{"input":{"shape":"Sk"},"output":{"shape":"Sk"}}},"shapes":{"S5":{"type":"map","key":{},"value":{}},"S9":{"type":"list","member":{}},"Sb":{"type":"list","member":{"type":"structure","members":{"ProviderName":{},"ClientId":{},"ServerSideTokenCheck":{"type":"boolean"}}}},"Sg":{"type":"list","member":{}},"Sh":{"type":"map","key":{},"value":{}},"Sk":{"type":"structure","required":["IdentityPoolId","IdentityPoolName","AllowUnauthenticatedIdentities"],"members":{"IdentityPoolId":{},"IdentityPoolName":{},"AllowUnauthenticatedIdentities":{"type":"boolean"},"AllowClassicFlow":{"type":"boolean"},"SupportedLoginProviders":{"shape":"S5"},"DeveloperProviderName":{},"OpenIdConnectProviderARNs":{"shape":"S9"},"CognitoIdentityProviders":{"shape":"Sb"},"SamlProviderARNs":{"shape":"Sg"},"IdentityPoolTags":{"shape":"Sh"}}},"Sv":{"type":"structure","members":{"IdentityId":{},"Logins":{"shape":"Sw"},"CreationDate":{"type":"timestamp"},"LastModifiedDate":{"type":"timestamp"}}},"Sw":{"type":"list","member":{}},"S10":{"type":"map","key":{},"value":{}},"S1c":{"type":"map","key":{},"value":{}},"S1e":{"type":"map","key":{},"value":{"type":"structure","required":["Type"],"members":{"Type":{},"AmbiguousRoleResolution":{},"RulesConfiguration":{"type":"structure","required":["Rules"],"members":{"Rules":{"type":"list","member":{"type":"structure","required":["Claim","MatchType","Value","RoleARN"],"members":{"Claim":{},"MatchType":{},"Value":{},"RoleARN":{}}}}}}}}},"S1s":{"type":"map","key":{},"value":{}}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json":
/*!***********************************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/cognito-identity-2014-06-30.paginators.json ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"pagination":{"ListIdentityPools":{"input_token":"NextToken","limit_key":"MaxResults","output_token":"NextToken","result_key":"IdentityPools"}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/metadata.json":
/*!*****************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/metadata.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"acm":{"name":"ACM","cors":true},"apigateway":{"name":"APIGateway","cors":true},"applicationautoscaling":{"prefix":"application-autoscaling","name":"ApplicationAutoScaling","cors":true},"appstream":{"name":"AppStream"},"autoscaling":{"name":"AutoScaling","cors":true},"batch":{"name":"Batch"},"budgets":{"name":"Budgets"},"clouddirectory":{"name":"CloudDirectory","versions":["2016-05-10*"]},"cloudformation":{"name":"CloudFormation","cors":true},"cloudfront":{"name":"CloudFront","versions":["2013-05-12*","2013-11-11*","2014-05-31*","2014-10-21*","2014-11-06*","2015-04-17*","2015-07-27*","2015-09-17*","2016-01-13*","2016-01-28*","2016-08-01*","2016-08-20*","2016-09-07*","2016-09-29*","2016-11-25*","2017-03-25*","2017-10-30*","2018-06-18*","2018-11-05*","2019-03-26*"],"cors":true},"cloudhsm":{"name":"CloudHSM","cors":true},"cloudsearch":{"name":"CloudSearch"},"cloudsearchdomain":{"name":"CloudSearchDomain"},"cloudtrail":{"name":"CloudTrail","cors":true},"cloudwatch":{"prefix":"monitoring","name":"CloudWatch","cors":true},"cloudwatchevents":{"prefix":"events","name":"CloudWatchEvents","versions":["2014-02-03*"],"cors":true},"cloudwatchlogs":{"prefix":"logs","name":"CloudWatchLogs","cors":true},"codebuild":{"name":"CodeBuild","cors":true},"codecommit":{"name":"CodeCommit","cors":true},"codedeploy":{"name":"CodeDeploy","cors":true},"codepipeline":{"name":"CodePipeline","cors":true},"cognitoidentity":{"prefix":"cognito-identity","name":"CognitoIdentity","cors":true},"cognitoidentityserviceprovider":{"prefix":"cognito-idp","name":"CognitoIdentityServiceProvider","cors":true},"cognitosync":{"prefix":"cognito-sync","name":"CognitoSync","cors":true},"configservice":{"prefix":"config","name":"ConfigService","cors":true},"cur":{"name":"CUR","cors":true},"datapipeline":{"name":"DataPipeline"},"devicefarm":{"name":"DeviceFarm","cors":true},"directconnect":{"name":"DirectConnect","cors":true},"directoryservice":{"prefix":"ds","name":"DirectoryService"},"discovery":{"name":"Discovery"},"dms":{"name":"DMS"},"dynamodb":{"name":"DynamoDB","cors":true},"dynamodbstreams":{"prefix":"streams.dynamodb","name":"DynamoDBStreams","cors":true},"ec2":{"name":"EC2","versions":["2013-06-15*","2013-10-15*","2014-02-01*","2014-05-01*","2014-06-15*","2014-09-01*","2014-10-01*","2015-03-01*","2015-04-15*","2015-10-01*","2016-04-01*","2016-09-15*"],"cors":true},"ecr":{"name":"ECR","cors":true},"ecs":{"name":"ECS","cors":true},"efs":{"prefix":"elasticfilesystem","name":"EFS","cors":true},"elasticache":{"name":"ElastiCache","versions":["2012-11-15*","2014-03-24*","2014-07-15*","2014-09-30*"],"cors":true},"elasticbeanstalk":{"name":"ElasticBeanstalk","cors":true},"elb":{"prefix":"elasticloadbalancing","name":"ELB","cors":true},"elbv2":{"prefix":"elasticloadbalancingv2","name":"ELBv2","cors":true},"emr":{"prefix":"elasticmapreduce","name":"EMR","cors":true},"es":{"name":"ES"},"elastictranscoder":{"name":"ElasticTranscoder","cors":true},"firehose":{"name":"Firehose","cors":true},"gamelift":{"name":"GameLift","cors":true},"glacier":{"name":"Glacier"},"health":{"name":"Health"},"iam":{"name":"IAM","cors":true},"importexport":{"name":"ImportExport"},"inspector":{"name":"Inspector","versions":["2015-08-18*"],"cors":true},"iot":{"name":"Iot","cors":true},"iotdata":{"prefix":"iot-data","name":"IotData","cors":true},"kinesis":{"name":"Kinesis","cors":true},"kinesisanalytics":{"name":"KinesisAnalytics"},"kms":{"name":"KMS","cors":true},"lambda":{"name":"Lambda","cors":true},"lexruntime":{"prefix":"runtime.lex","name":"LexRuntime","cors":true},"lightsail":{"name":"Lightsail"},"machinelearning":{"name":"MachineLearning","cors":true},"marketplacecommerceanalytics":{"name":"MarketplaceCommerceAnalytics","cors":true},"marketplacemetering":{"prefix":"meteringmarketplace","name":"MarketplaceMetering"},"mturk":{"prefix":"mturk-requester","name":"MTurk","cors":true},"mobileanalytics":{"name":"MobileAnalytics","cors":true},"opsworks":{"name":"OpsWorks","cors":true},"opsworkscm":{"name":"OpsWorksCM"},"organizations":{"name":"Organizations"},"pinpoint":{"name":"Pinpoint"},"polly":{"name":"Polly","cors":true},"rds":{"name":"RDS","versions":["2014-09-01*"],"cors":true},"redshift":{"name":"Redshift","cors":true},"rekognition":{"name":"Rekognition","cors":true},"resourcegroupstaggingapi":{"name":"ResourceGroupsTaggingAPI"},"route53":{"name":"Route53","cors":true},"route53domains":{"name":"Route53Domains","cors":true},"s3":{"name":"S3","dualstackAvailable":true,"cors":true},"s3control":{"name":"S3Control","dualstackAvailable":true,"xmlNoDefaultLists":true},"servicecatalog":{"name":"ServiceCatalog","cors":true},"ses":{"prefix":"email","name":"SES","cors":true},"shield":{"name":"Shield"},"simpledb":{"prefix":"sdb","name":"SimpleDB"},"sms":{"name":"SMS"},"snowball":{"name":"Snowball"},"sns":{"name":"SNS","cors":true},"sqs":{"name":"SQS","cors":true},"ssm":{"name":"SSM","cors":true},"storagegateway":{"name":"StorageGateway","cors":true},"stepfunctions":{"prefix":"states","name":"StepFunctions"},"sts":{"name":"STS","cors":true},"support":{"name":"Support"},"swf":{"name":"SWF"},"xray":{"name":"XRay","cors":true},"waf":{"name":"WAF","cors":true},"wafregional":{"prefix":"waf-regional","name":"WAFRegional"},"workdocs":{"name":"WorkDocs","cors":true},"workspaces":{"name":"WorkSpaces"},"codestar":{"name":"CodeStar"},"lexmodelbuildingservice":{"prefix":"lex-models","name":"LexModelBuildingService","cors":true},"marketplaceentitlementservice":{"prefix":"entitlement.marketplace","name":"MarketplaceEntitlementService"},"athena":{"name":"Athena","cors":true},"greengrass":{"name":"Greengrass"},"dax":{"name":"DAX"},"migrationhub":{"prefix":"AWSMigrationHub","name":"MigrationHub"},"cloudhsmv2":{"name":"CloudHSMV2","cors":true},"glue":{"name":"Glue"},"mobile":{"name":"Mobile"},"pricing":{"name":"Pricing","cors":true},"costexplorer":{"prefix":"ce","name":"CostExplorer","cors":true},"mediaconvert":{"name":"MediaConvert"},"medialive":{"name":"MediaLive"},"mediapackage":{"name":"MediaPackage"},"mediastore":{"name":"MediaStore"},"mediastoredata":{"prefix":"mediastore-data","name":"MediaStoreData","cors":true},"appsync":{"name":"AppSync"},"guardduty":{"name":"GuardDuty"},"mq":{"name":"MQ"},"comprehend":{"name":"Comprehend","cors":true},"iotjobsdataplane":{"prefix":"iot-jobs-data","name":"IoTJobsDataPlane"},"kinesisvideoarchivedmedia":{"prefix":"kinesis-video-archived-media","name":"KinesisVideoArchivedMedia","cors":true},"kinesisvideomedia":{"prefix":"kinesis-video-media","name":"KinesisVideoMedia","cors":true},"kinesisvideo":{"name":"KinesisVideo","cors":true},"sagemakerruntime":{"prefix":"runtime.sagemaker","name":"SageMakerRuntime"},"sagemaker":{"name":"SageMaker"},"translate":{"name":"Translate","cors":true},"resourcegroups":{"prefix":"resource-groups","name":"ResourceGroups","cors":true},"alexaforbusiness":{"name":"AlexaForBusiness"},"cloud9":{"name":"Cloud9"},"serverlessapplicationrepository":{"prefix":"serverlessrepo","name":"ServerlessApplicationRepository"},"servicediscovery":{"name":"ServiceDiscovery"},"workmail":{"name":"WorkMail"},"autoscalingplans":{"prefix":"autoscaling-plans","name":"AutoScalingPlans"},"transcribeservice":{"prefix":"transcribe","name":"TranscribeService"},"connect":{"name":"Connect","cors":true},"acmpca":{"prefix":"acm-pca","name":"ACMPCA"},"fms":{"name":"FMS"},"secretsmanager":{"name":"SecretsManager","cors":true},"iotanalytics":{"name":"IoTAnalytics","cors":true},"iot1clickdevicesservice":{"prefix":"iot1click-devices","name":"IoT1ClickDevicesService"},"iot1clickprojects":{"prefix":"iot1click-projects","name":"IoT1ClickProjects"},"pi":{"name":"PI"},"neptune":{"name":"Neptune"},"mediatailor":{"name":"MediaTailor"},"eks":{"name":"EKS"},"dlm":{"name":"DLM"},"signer":{"name":"Signer"},"chime":{"name":"Chime"},"pinpointemail":{"prefix":"pinpoint-email","name":"PinpointEmail"},"ram":{"name":"RAM"},"route53resolver":{"name":"Route53Resolver"},"pinpointsmsvoice":{"prefix":"sms-voice","name":"PinpointSMSVoice"},"quicksight":{"name":"QuickSight"},"rdsdataservice":{"prefix":"rds-data","name":"RDSDataService"},"amplify":{"name":"Amplify"},"datasync":{"name":"DataSync"},"robomaker":{"name":"RoboMaker"},"transfer":{"name":"Transfer"},"globalaccelerator":{"name":"GlobalAccelerator"},"comprehendmedical":{"name":"ComprehendMedical","cors":true},"kinesisanalyticsv2":{"name":"KinesisAnalyticsV2"},"mediaconnect":{"name":"MediaConnect"},"fsx":{"name":"FSx"},"securityhub":{"name":"SecurityHub"},"appmesh":{"name":"AppMesh","versions":["2018-10-01*"]},"licensemanager":{"prefix":"license-manager","name":"LicenseManager"},"kafka":{"name":"Kafka"},"apigatewaymanagementapi":{"name":"ApiGatewayManagementApi"},"apigatewayv2":{"name":"ApiGatewayV2"},"docdb":{"name":"DocDB"},"backup":{"name":"Backup"},"worklink":{"name":"WorkLink"},"textract":{"name":"Textract"},"managedblockchain":{"name":"ManagedBlockchain"},"mediapackagevod":{"prefix":"mediapackage-vod","name":"MediaPackageVod"},"groundstation":{"name":"GroundStation"},"iotthingsgraph":{"name":"IoTThingsGraph"},"iotevents":{"name":"IoTEvents"},"ioteventsdata":{"prefix":"iotevents-data","name":"IoTEventsData"},"personalize":{"name":"Personalize","cors":true},"personalizeevents":{"prefix":"personalize-events","name":"PersonalizeEvents","cors":true},"personalizeruntime":{"prefix":"personalize-runtime","name":"PersonalizeRuntime","cors":true},"applicationinsights":{"prefix":"application-insights","name":"ApplicationInsights"},"servicequotas":{"prefix":"service-quotas","name":"ServiceQuotas"},"ec2instanceconnect":{"prefix":"ec2-instance-connect","name":"EC2InstanceConnect"},"eventbridge":{"name":"EventBridge"},"lakeformation":{"name":"LakeFormation"},"forecastservice":{"prefix":"forecast","name":"ForecastService","cors":true},"forecastqueryservice":{"prefix":"forecastquery","name":"ForecastQueryService","cors":true},"qldb":{"name":"QLDB"},"qldbsession":{"prefix":"qldb-session","name":"QLDBSession"},"workmailmessageflow":{"name":"WorkMailMessageFlow"},"codestarnotifications":{"prefix":"codestar-notifications","name":"CodeStarNotifications"},"savingsplans":{"name":"SavingsPlans"},"sso":{"name":"SSO"},"ssooidc":{"prefix":"sso-oidc","name":"SSOOIDC"},"marketplacecatalog":{"prefix":"marketplace-catalog","name":"MarketplaceCatalog","cors":true},"dataexchange":{"name":"DataExchange"},"sesv2":{"name":"SESV2"},"migrationhubconfig":{"prefix":"migrationhub-config","name":"MigrationHubConfig"},"connectparticipant":{"name":"ConnectParticipant"},"appconfig":{"name":"AppConfig"},"iotsecuretunneling":{"name":"IoTSecureTunneling"},"wafv2":{"name":"WAFV2"},"elasticinference":{"prefix":"elastic-inference","name":"ElasticInference"},"imagebuilder":{"name":"Imagebuilder"},"schemas":{"name":"Schemas"},"accessanalyzer":{"name":"AccessAnalyzer"},"codegurureviewer":{"prefix":"codeguru-reviewer","name":"CodeGuruReviewer"},"codeguruprofiler":{"name":"CodeGuruProfiler"},"computeoptimizer":{"prefix":"compute-optimizer","name":"ComputeOptimizer"},"frauddetector":{"name":"FraudDetector"},"kendra":{"name":"Kendra"},"networkmanager":{"name":"NetworkManager"},"outposts":{"name":"Outposts"},"augmentedairuntime":{"prefix":"sagemaker-a2i-runtime","name":"AugmentedAIRuntime"},"ebs":{"name":"EBS"},"kinesisvideosignalingchannels":{"prefix":"kinesis-video-signaling","name":"KinesisVideoSignalingChannels","cors":true},"detective":{"name":"Detective"},"codestarconnections":{"prefix":"codestar-connections","name":"CodeStarconnections"},"synthetics":{"name":"Synthetics"},"iotsitewise":{"name":"IoTSiteWise"},"macie2":{"name":"Macie2"},"codeartifact":{"name":"CodeArtifact"},"honeycode":{"name":"Honeycode"},"ivs":{"name":"IVS"},"braket":{"name":"Braket"},"identitystore":{"name":"IdentityStore"},"appflow":{"name":"Appflow"},"redshiftdata":{"prefix":"redshift-data","name":"RedshiftData"},"ssoadmin":{"prefix":"sso-admin","name":"SSOAdmin"},"timestreamquery":{"prefix":"timestream-query","name":"TimestreamQuery"},"timestreamwrite":{"prefix":"timestream-write","name":"TimestreamWrite"},"s3outposts":{"name":"S3Outposts"},"databrew":{"name":"DataBrew"},"servicecatalogappregistry":{"prefix":"servicecatalog-appregistry","name":"ServiceCatalogAppRegistry"},"networkfirewall":{"prefix":"network-firewall","name":"NetworkFirewall"},"mwaa":{"name":"MWAA"},"amplifybackend":{"name":"AmplifyBackend"},"appintegrations":{"name":"AppIntegrations"},"connectcontactlens":{"prefix":"connect-contact-lens","name":"ConnectContactLens"},"devopsguru":{"prefix":"devops-guru","name":"DevOpsGuru"},"ecrpublic":{"prefix":"ecr-public","name":"ECRPUBLIC"},"lookoutvision":{"name":"LookoutVision"},"sagemakerfeaturestoreruntime":{"prefix":"sagemaker-featurestore-runtime","name":"SageMakerFeatureStoreRuntime"},"customerprofiles":{"prefix":"customer-profiles","name":"CustomerProfiles"},"auditmanager":{"name":"AuditManager"},"emrcontainers":{"prefix":"emr-containers","name":"EMRcontainers"},"healthlake":{"name":"HealthLake"},"sagemakeredge":{"prefix":"sagemaker-edge","name":"SagemakerEdge"},"amp":{"name":"Amp","cors":true},"greengrassv2":{"name":"GreengrassV2"},"iotdeviceadvisor":{"name":"IotDeviceAdvisor"},"iotfleethub":{"name":"IoTFleetHub"},"iotwireless":{"name":"IoTWireless"},"location":{"name":"Location","cors":true},"wellarchitected":{"name":"WellArchitected"},"lexmodelsv2":{"prefix":"models.lex.v2","name":"LexModelsV2"},"lexruntimev2":{"prefix":"runtime.lex.v2","name":"LexRuntimeV2","cors":true},"fis":{"name":"Fis"},"lookoutmetrics":{"name":"LookoutMetrics"},"mgn":{"name":"Mgn"},"lookoutequipment":{"name":"LookoutEquipment"},"nimble":{"name":"Nimble"},"finspace":{"name":"Finspace"},"finspacedata":{"prefix":"finspace-data","name":"Finspacedata"},"ssmcontacts":{"prefix":"ssm-contacts","name":"SSMContacts"},"ssmincidents":{"prefix":"ssm-incidents","name":"SSMIncidents"},"applicationcostprofiler":{"name":"ApplicationCostProfiler"},"apprunner":{"name":"AppRunner"},"proton":{"name":"Proton"},"route53recoverycluster":{"prefix":"route53-recovery-cluster","name":"Route53RecoveryCluster"},"route53recoverycontrolconfig":{"prefix":"route53-recovery-control-config","name":"Route53RecoveryControlConfig"},"route53recoveryreadiness":{"prefix":"route53-recovery-readiness","name":"Route53RecoveryReadiness"},"chimesdkidentity":{"prefix":"chime-sdk-identity","name":"ChimeSDKIdentity"},"chimesdkmessaging":{"prefix":"chime-sdk-messaging","name":"ChimeSDKMessaging"},"snowdevicemanagement":{"prefix":"snow-device-management","name":"SnowDeviceManagement"},"memorydb":{"name":"MemoryDB"},"opensearch":{"name":"OpenSearch"},"kafkaconnect":{"name":"KafkaConnect"},"voiceid":{"prefix":"voice-id","name":"VoiceID"},"wisdom":{"name":"Wisdom"},"account":{"name":"Account"},"cloudcontrol":{"name":"CloudControl"},"grafana":{"name":"Grafana"},"panorama":{"name":"Panorama"},"chimesdkmeetings":{"prefix":"chime-sdk-meetings","name":"ChimeSDKMeetings"},"resiliencehub":{"name":"Resiliencehub"},"migrationhubstrategy":{"name":"MigrationHubStrategy"},"appconfigdata":{"name":"AppConfigData"},"drs":{"name":"Drs"},"migrationhubrefactorspaces":{"prefix":"migration-hub-refactor-spaces","name":"MigrationHubRefactorSpaces"},"evidently":{"name":"Evidently"},"inspector2":{"name":"Inspector2"},"rbin":{"name":"Rbin"},"rum":{"name":"RUM"},"backupgateway":{"prefix":"backup-gateway","name":"BackupGateway"},"iottwinmaker":{"name":"IoTTwinMaker"},"workspacesweb":{"prefix":"workspaces-web","name":"WorkSpacesWeb"},"amplifyuibuilder":{"name":"AmplifyUIBuilder"},"keyspaces":{"name":"Keyspaces"},"billingconductor":{"name":"Billingconductor"},"pinpointsmsvoicev2":{"prefix":"pinpoint-sms-voice-v2","name":"PinpointSMSVoiceV2"},"ivschat":{"name":"Ivschat"},"chimesdkmediapipelines":{"prefix":"chime-sdk-media-pipelines","name":"ChimeSDKMediaPipelines"},"emrserverless":{"prefix":"emr-serverless","name":"EMRServerless"},"m2":{"name":"M2"},"connectcampaigns":{"name":"ConnectCampaigns"},"redshiftserverless":{"prefix":"redshift-serverless","name":"RedshiftServerless"},"rolesanywhere":{"name":"RolesAnywhere"},"licensemanagerusersubscriptions":{"prefix":"license-manager-user-subscriptions","name":"LicenseManagerUserSubscriptions"},"backupstorage":{"name":"BackupStorage"},"privatenetworks":{"name":"PrivateNetworks"},"supportapp":{"prefix":"support-app","name":"SupportApp"},"controltower":{"name":"ControlTower"},"iotfleetwise":{"name":"IoTFleetWise"},"migrationhuborchestrator":{"name":"MigrationHubOrchestrator"},"connectcases":{"name":"ConnectCases"},"resourceexplorer2":{"prefix":"resource-explorer-2","name":"ResourceExplorer2"},"scheduler":{"name":"Scheduler"},"chimesdkvoice":{"prefix":"chime-sdk-voice","name":"ChimeSDKVoice"},"ssmsap":{"prefix":"ssm-sap","name":"SsmSap"},"oam":{"name":"OAM"},"arczonalshift":{"prefix":"arc-zonal-shift","name":"ARCZonalShift"},"omics":{"name":"Omics"},"opensearchserverless":{"name":"OpenSearchServerless"},"securitylake":{"name":"SecurityLake"},"simspaceweaver":{"name":"SimSpaceWeaver"},"docdbelastic":{"prefix":"docdb-elastic","name":"DocDBElastic"},"sagemakergeospatial":{"prefix":"sagemaker-geospatial","name":"SageMakerGeospatial"},"codecatalyst":{"name":"CodeCatalyst"},"pipes":{"name":"Pipes"},"sagemakermetrics":{"prefix":"sagemaker-metrics","name":"SageMakerMetrics"},"kinesisvideowebrtcstorage":{"prefix":"kinesis-video-webrtc-storage","name":"KinesisVideoWebRTCStorage"},"licensemanagerlinuxsubscriptions":{"prefix":"license-manager-linux-subscriptions","name":"LicenseManagerLinuxSubscriptions"},"kendraranking":{"prefix":"kendra-ranking","name":"KendraRanking"},"cleanrooms":{"name":"CleanRooms"},"cloudtraildata":{"prefix":"cloudtrail-data","name":"CloudTrailData"},"tnb":{"name":"Tnb"},"internetmonitor":{"name":"InternetMonitor"},"ivsrealtime":{"prefix":"ivs-realtime","name":"IVSRealTime"},"vpclattice":{"prefix":"vpc-lattice","name":"VPCLattice"},"osis":{"name":"OSIS"},"mediapackagev2":{"name":"MediaPackageV2"},"paymentcryptography":{"prefix":"payment-cryptography","name":"PaymentCryptography"},"paymentcryptographydata":{"prefix":"payment-cryptography-data","name":"PaymentCryptographyData"},"codegurusecurity":{"prefix":"codeguru-security","name":"CodeGuruSecurity"},"verifiedpermissions":{"name":"VerifiedPermissions"},"appfabric":{"name":"AppFabric"},"medicalimaging":{"prefix":"medical-imaging","name":"MedicalImaging"},"entityresolution":{"name":"EntityResolution"},"managedblockchainquery":{"prefix":"managedblockchain-query","name":"ManagedBlockchainQuery"},"neptunedata":{"name":"Neptunedata"},"pcaconnectorad":{"prefix":"pca-connector-ad","name":"PcaConnectorAd"},"bedrock":{"name":"Bedrock"},"bedrockruntime":{"prefix":"bedrock-runtime","name":"BedrockRuntime"},"datazone":{"name":"DataZone"},"launchwizard":{"prefix":"launch-wizard","name":"LaunchWizard"},"trustedadvisor":{"name":"TrustedAdvisor"},"inspectorscan":{"prefix":"inspector-scan","name":"InspectorScan"},"bcmdataexports":{"prefix":"bcm-data-exports","name":"BCMDataExports"},"costoptimizationhub":{"prefix":"cost-optimization-hub","name":"CostOptimizationHub"},"eksauth":{"prefix":"eks-auth","name":"EKSAuth"},"freetier":{"name":"FreeTier"},"repostspace":{"name":"Repostspace"},"workspacesthinclient":{"prefix":"workspaces-thin-client","name":"WorkSpacesThinClient"},"b2bi":{"name":"B2bi"},"bedrockagent":{"prefix":"bedrock-agent","name":"BedrockAgent"},"bedrockagentruntime":{"prefix":"bedrock-agent-runtime","name":"BedrockAgentRuntime"},"qbusiness":{"name":"QBusiness"},"qconnect":{"name":"QConnect"},"cleanroomsml":{"name":"CleanRoomsML"},"marketplaceagreement":{"prefix":"marketplace-agreement","name":"MarketplaceAgreement"},"marketplacedeployment":{"prefix":"marketplace-deployment","name":"MarketplaceDeployment"},"networkmonitor":{"name":"NetworkMonitor"},"supplychain":{"name":"SupplyChain"},"artifact":{"name":"Artifact"},"chatbot":{"name":"Chatbot"},"timestreaminfluxdb":{"prefix":"timestream-influxdb","name":"TimestreamInfluxDB"},"codeconnections":{"name":"CodeConnections"},"deadline":{"name":"Deadline"},"controlcatalog":{"name":"ControlCatalog"},"route53profiles":{"name":"Route53Profiles"}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.min.json":
/*!**************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/s3-2006-03-01.min.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"version":"2.0","metadata":{"apiVersion":"2006-03-01","checksumFormat":"md5","endpointPrefix":"s3","globalEndpoint":"s3.amazonaws.com","protocol":"rest-xml","serviceAbbreviation":"Amazon S3","serviceFullName":"Amazon Simple Storage Service","serviceId":"S3","signatureVersion":"s3","uid":"s3-2006-03-01"},"operations":{"AbortMultipartUpload":{"http":{"method":"DELETE","requestUri":"/{Bucket}/{Key+}","responseCode":204},"input":{"type":"structure","required":["Bucket","Key","UploadId"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"UploadId":{"location":"querystring","locationName":"uploadId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"CompleteMultipartUpload":{"http":{"requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key","UploadId"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"MultipartUpload":{"locationName":"CompleteMultipartUpload","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"Parts":{"locationName":"Part","type":"list","member":{"type":"structure","members":{"ETag":{},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{},"PartNumber":{"type":"integer"}}},"flattened":true}}},"UploadId":{"location":"querystring","locationName":"uploadId"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"}},"payload":"MultipartUpload"},"output":{"type":"structure","members":{"Location":{},"Bucket":{},"Key":{},"Expiration":{"location":"header","locationName":"x-amz-expiration"},"ETag":{},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"CopyObject":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","CopySource","Key"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CacheControl":{"location":"header","locationName":"Cache-Control"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-checksum-algorithm"},"ContentDisposition":{"location":"header","locationName":"Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"Content-Language"},"ContentType":{"location":"header","locationName":"Content-Type"},"CopySource":{"location":"header","locationName":"x-amz-copy-source"},"CopySourceIfMatch":{"location":"header","locationName":"x-amz-copy-source-if-match"},"CopySourceIfModifiedSince":{"location":"header","locationName":"x-amz-copy-source-if-modified-since","type":"timestamp"},"CopySourceIfNoneMatch":{"location":"header","locationName":"x-amz-copy-source-if-none-match"},"CopySourceIfUnmodifiedSince":{"location":"header","locationName":"x-amz-copy-source-if-unmodified-since","type":"timestamp"},"Expires":{"location":"header","locationName":"Expires","type":"timestamp"},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"Key":{"location":"uri","locationName":"Key"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"MetadataDirective":{"location":"header","locationName":"x-amz-metadata-directive"},"TaggingDirective":{"location":"header","locationName":"x-amz-tagging-directive"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","locationName":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","locationName":"x-amz-website-redirect-location"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"CopySourceSSECustomerAlgorithm":{"location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-algorithm"},"CopySourceSSECustomerKey":{"shape":"S1k","location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-key"},"CopySourceSSECustomerKeyMD5":{"location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"Tagging":{"location":"header","locationName":"x-amz-tagging"},"ObjectLockMode":{"location":"header","locationName":"x-amz-object-lock-mode"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-object-lock-retain-until-date"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-object-lock-legal-hold"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ExpectedSourceBucketOwner":{"location":"header","locationName":"x-amz-source-expected-bucket-owner"}}},"output":{"type":"structure","members":{"CopyObjectResult":{"type":"structure","members":{"ETag":{},"LastModified":{"type":"timestamp"},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{}}},"Expiration":{"location":"header","locationName":"x-amz-expiration"},"CopySourceVersionId":{"location":"header","locationName":"x-amz-copy-source-version-id"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}},"payload":"CopyObjectResult"},"alias":"PutObjectCopy","staticContextParams":{"DisableS3ExpressSessionAuth":{"value":true}}},"CreateBucket":{"http":{"method":"PUT","requestUri":"/{Bucket}"},"input":{"type":"structure","required":["Bucket"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CreateBucketConfiguration":{"locationName":"CreateBucketConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"LocationConstraint":{},"Location":{"type":"structure","members":{"Type":{},"Name":{}}},"Bucket":{"type":"structure","members":{"DataRedundancy":{},"Type":{}}}}},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","locationName":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"ObjectLockEnabledForBucket":{"location":"header","locationName":"x-amz-bucket-object-lock-enabled","type":"boolean"},"ObjectOwnership":{"location":"header","locationName":"x-amz-object-ownership"}},"payload":"CreateBucketConfiguration"},"output":{"type":"structure","members":{"Location":{"location":"header","locationName":"Location"}}},"alias":"PutBucket","staticContextParams":{"DisableAccessPoints":{"value":true},"UseS3ExpressControlEndpoint":{"value":true}}},"CreateMultipartUpload":{"http":{"requestUri":"/{Bucket}/{Key+}?uploads"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CacheControl":{"location":"header","locationName":"Cache-Control"},"ContentDisposition":{"location":"header","locationName":"Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"Content-Language"},"ContentType":{"location":"header","locationName":"Content-Type"},"Expires":{"location":"header","locationName":"Expires","type":"timestamp"},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","locationName":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","locationName":"x-amz-website-redirect-location"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"Tagging":{"location":"header","locationName":"x-amz-tagging"},"ObjectLockMode":{"location":"header","locationName":"x-amz-object-lock-mode"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-object-lock-retain-until-date"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-object-lock-legal-hold"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-checksum-algorithm"}}},"output":{"type":"structure","members":{"AbortDate":{"location":"header","locationName":"x-amz-abort-date","type":"timestamp"},"AbortRuleId":{"location":"header","locationName":"x-amz-abort-rule-id"},"Bucket":{"locationName":"Bucket"},"Key":{},"UploadId":{},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-checksum-algorithm"}}},"alias":"InitiateMultipartUpload"},"CreateSession":{"http":{"method":"GET","requestUri":"/{Bucket}?session"},"input":{"type":"structure","required":["Bucket"],"members":{"SessionMode":{"location":"header","locationName":"x-amz-create-session-mode"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"}}},"output":{"type":"structure","required":["Credentials"],"members":{"Credentials":{"locationName":"Credentials","type":"structure","required":["AccessKeyId","SecretAccessKey","SessionToken","Expiration"],"members":{"AccessKeyId":{"locationName":"AccessKeyId"},"SecretAccessKey":{"shape":"S2h","locationName":"SecretAccessKey"},"SessionToken":{"shape":"S2h","locationName":"SessionToken"},"Expiration":{"locationName":"Expiration","type":"timestamp"}}}}},"staticContextParams":{"DisableS3ExpressSessionAuth":{"value":true}}},"DeleteBucket":{"http":{"method":"DELETE","requestUri":"/{Bucket}","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketAnalyticsConfiguration":{"http":{"method":"DELETE","requestUri":"/{Bucket}?analytics","responseCode":204},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketCors":{"http":{"method":"DELETE","requestUri":"/{Bucket}?cors","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketEncryption":{"http":{"method":"DELETE","requestUri":"/{Bucket}?encryption","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketIntelligentTieringConfiguration":{"http":{"method":"DELETE","requestUri":"/{Bucket}?intelligent-tiering","responseCode":204},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketInventoryConfiguration":{"http":{"method":"DELETE","requestUri":"/{Bucket}?inventory","responseCode":204},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketLifecycle":{"http":{"method":"DELETE","requestUri":"/{Bucket}?lifecycle","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketMetricsConfiguration":{"http":{"method":"DELETE","requestUri":"/{Bucket}?metrics","responseCode":204},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketOwnershipControls":{"http":{"method":"DELETE","requestUri":"/{Bucket}?ownershipControls","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketPolicy":{"http":{"method":"DELETE","requestUri":"/{Bucket}?policy","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketReplication":{"http":{"method":"DELETE","requestUri":"/{Bucket}?replication","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketTagging":{"http":{"method":"DELETE","requestUri":"/{Bucket}?tagging","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteBucketWebsite":{"http":{"method":"DELETE","requestUri":"/{Bucket}?website","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"DeleteObject":{"http":{"method":"DELETE","requestUri":"/{Bucket}/{Key+}","responseCode":204},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"MFA":{"location":"header","locationName":"x-amz-mfa"},"VersionId":{"location":"querystring","locationName":"versionId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"BypassGovernanceRetention":{"location":"header","locationName":"x-amz-bypass-governance-retention","type":"boolean"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"DeleteMarker":{"location":"header","locationName":"x-amz-delete-marker","type":"boolean"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"DeleteObjectTagging":{"http":{"method":"DELETE","requestUri":"/{Bucket}/{Key+}?tagging","responseCode":204},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"VersionId":{"location":"header","locationName":"x-amz-version-id"}}}},"DeleteObjects":{"http":{"requestUri":"/{Bucket}?delete"},"input":{"type":"structure","required":["Bucket","Delete"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Delete":{"locationName":"Delete","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["Objects"],"members":{"Objects":{"locationName":"Object","type":"list","member":{"type":"structure","required":["Key"],"members":{"Key":{},"VersionId":{}}},"flattened":true},"Quiet":{"type":"boolean"}}},"MFA":{"location":"header","locationName":"x-amz-mfa"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"BypassGovernanceRetention":{"location":"header","locationName":"x-amz-bypass-governance-retention","type":"boolean"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"}},"payload":"Delete"},"output":{"type":"structure","members":{"Deleted":{"type":"list","member":{"type":"structure","members":{"Key":{},"VersionId":{},"DeleteMarker":{"type":"boolean"},"DeleteMarkerVersionId":{}}},"flattened":true},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"Errors":{"locationName":"Error","type":"list","member":{"type":"structure","members":{"Key":{},"VersionId":{},"Code":{},"Message":{}}},"flattened":true}}},"alias":"DeleteMultipleObjects","httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"DeletePublicAccessBlock":{"http":{"method":"DELETE","requestUri":"/{Bucket}?publicAccessBlock","responseCode":204},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketAccelerateConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?accelerate"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"}}},"output":{"type":"structure","members":{"Status":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketAcl":{"http":{"method":"GET","requestUri":"/{Bucket}?acl"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Owner":{"shape":"S3q"},"Grants":{"shape":"S3t","locationName":"AccessControlList"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketAnalyticsConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?analytics"},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"AnalyticsConfiguration":{"shape":"S42"}},"payload":"AnalyticsConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketCors":{"http":{"method":"GET","requestUri":"/{Bucket}?cors"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"CORSRules":{"shape":"S4h","locationName":"CORSRule"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketEncryption":{"http":{"method":"GET","requestUri":"/{Bucket}?encryption"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"ServerSideEncryptionConfiguration":{"shape":"S4u"}},"payload":"ServerSideEncryptionConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketIntelligentTieringConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?intelligent-tiering"},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"}}},"output":{"type":"structure","members":{"IntelligentTieringConfiguration":{"shape":"S50"}},"payload":"IntelligentTieringConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketInventoryConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?inventory"},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"InventoryConfiguration":{"shape":"S5a"}},"payload":"InventoryConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketLifecycle":{"http":{"method":"GET","requestUri":"/{Bucket}?lifecycle"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Rules":{"shape":"S5q","locationName":"Rule"}}},"deprecated":true,"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketLifecycleConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?lifecycle"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Rules":{"shape":"S66","locationName":"Rule"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketLocation":{"http":{"method":"GET","requestUri":"/{Bucket}?location"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"LocationConstraint":{}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketLogging":{"http":{"method":"GET","requestUri":"/{Bucket}?logging"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"LoggingEnabled":{"shape":"S6i"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketMetricsConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?metrics"},"input":{"type":"structure","required":["Bucket","Id"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"MetricsConfiguration":{"shape":"S6u"}},"payload":"MetricsConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketNotification":{"http":{"method":"GET","requestUri":"/{Bucket}?notification"},"input":{"shape":"S6y"},"output":{"shape":"S6z"},"deprecated":true,"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketNotificationConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?notification"},"input":{"shape":"S6y"},"output":{"shape":"S7a"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketOwnershipControls":{"http":{"method":"GET","requestUri":"/{Bucket}?ownershipControls"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"OwnershipControls":{"shape":"S7r"}},"payload":"OwnershipControls"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketPolicy":{"http":{"method":"GET","requestUri":"/{Bucket}?policy"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Policy":{}},"payload":"Policy"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketPolicyStatus":{"http":{"method":"GET","requestUri":"/{Bucket}?policyStatus"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"PolicyStatus":{"type":"structure","members":{"IsPublic":{"locationName":"IsPublic","type":"boolean"}}}},"payload":"PolicyStatus"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketReplication":{"http":{"method":"GET","requestUri":"/{Bucket}?replication"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"ReplicationConfiguration":{"shape":"S83"}},"payload":"ReplicationConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketRequestPayment":{"http":{"method":"GET","requestUri":"/{Bucket}?requestPayment"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Payer":{}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketTagging":{"http":{"method":"GET","requestUri":"/{Bucket}?tagging"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","required":["TagSet"],"members":{"TagSet":{"shape":"S48"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketVersioning":{"http":{"method":"GET","requestUri":"/{Bucket}?versioning"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Status":{},"MFADelete":{"locationName":"MfaDelete"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetBucketWebsite":{"http":{"method":"GET","requestUri":"/{Bucket}?website"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"RedirectAllRequestsTo":{"shape":"S96"},"IndexDocument":{"shape":"S99"},"ErrorDocument":{"shape":"S9b"},"RoutingRules":{"shape":"S9c"}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"GetObject":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"IfMatch":{"location":"header","locationName":"If-Match"},"IfModifiedSince":{"location":"header","locationName":"If-Modified-Since","type":"timestamp"},"IfNoneMatch":{"location":"header","locationName":"If-None-Match"},"IfUnmodifiedSince":{"location":"header","locationName":"If-Unmodified-Since","type":"timestamp"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"Range":{"location":"header","locationName":"Range"},"ResponseCacheControl":{"location":"querystring","locationName":"response-cache-control"},"ResponseContentDisposition":{"location":"querystring","locationName":"response-content-disposition"},"ResponseContentEncoding":{"location":"querystring","locationName":"response-content-encoding"},"ResponseContentLanguage":{"location":"querystring","locationName":"response-content-language"},"ResponseContentType":{"location":"querystring","locationName":"response-content-type"},"ResponseExpires":{"location":"querystring","locationName":"response-expires","type":"timestamp","timestampFormat":"rfc822"},"VersionId":{"location":"querystring","locationName":"versionId"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"PartNumber":{"location":"querystring","locationName":"partNumber","type":"integer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ChecksumMode":{"location":"header","locationName":"x-amz-checksum-mode"}}},"output":{"type":"structure","members":{"Body":{"streaming":true,"type":"blob"},"DeleteMarker":{"location":"header","locationName":"x-amz-delete-marker","type":"boolean"},"AcceptRanges":{"location":"header","locationName":"accept-ranges"},"Expiration":{"location":"header","locationName":"x-amz-expiration"},"Restore":{"location":"header","locationName":"x-amz-restore"},"LastModified":{"location":"header","locationName":"Last-Modified","type":"timestamp"},"ContentLength":{"location":"header","locationName":"Content-Length","type":"long"},"ETag":{"location":"header","locationName":"ETag"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"MissingMeta":{"location":"header","locationName":"x-amz-missing-meta","type":"integer"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"CacheControl":{"location":"header","locationName":"Cache-Control"},"ContentDisposition":{"location":"header","locationName":"Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"Content-Language"},"ContentRange":{"location":"header","locationName":"Content-Range"},"ContentType":{"location":"header","locationName":"Content-Type"},"Expires":{"location":"header","locationName":"Expires","deprecated":true,"type":"timestamp"},"ExpiresString":{"location":"header","locationName":"ExpiresString"},"WebsiteRedirectLocation":{"location":"header","locationName":"x-amz-website-redirect-location"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"StorageClass":{"location":"header","locationName":"x-amz-storage-class"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"ReplicationStatus":{"location":"header","locationName":"x-amz-replication-status"},"PartsCount":{"location":"header","locationName":"x-amz-mp-parts-count","type":"integer"},"TagCount":{"location":"header","locationName":"x-amz-tagging-count","type":"integer"},"ObjectLockMode":{"location":"header","locationName":"x-amz-object-lock-mode"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-object-lock-retain-until-date"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-object-lock-legal-hold"}},"payload":"Body"},"httpChecksum":{"requestValidationModeMember":"ChecksumMode","responseAlgorithms":["CRC32","CRC32C","SHA256","SHA1"]}},"GetObjectAcl":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?acl"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Owner":{"shape":"S3q"},"Grants":{"shape":"S3t","locationName":"AccessControlList"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"GetObjectAttributes":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?attributes"},"input":{"type":"structure","required":["Bucket","Key","ObjectAttributes"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"MaxParts":{"location":"header","locationName":"x-amz-max-parts","type":"integer"},"PartNumberMarker":{"location":"header","locationName":"x-amz-part-number-marker","type":"integer"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ObjectAttributes":{"location":"header","locationName":"x-amz-object-attributes","type":"list","member":{}}}},"output":{"type":"structure","members":{"DeleteMarker":{"location":"header","locationName":"x-amz-delete-marker","type":"boolean"},"LastModified":{"location":"header","locationName":"Last-Modified","type":"timestamp"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"ETag":{},"Checksum":{"type":"structure","members":{"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{}}},"ObjectParts":{"type":"structure","members":{"TotalPartsCount":{"locationName":"PartsCount","type":"integer"},"PartNumberMarker":{"type":"integer"},"NextPartNumberMarker":{"type":"integer"},"MaxParts":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Parts":{"locationName":"Part","type":"list","member":{"type":"structure","members":{"PartNumber":{"type":"integer"},"Size":{"type":"long"},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{}}},"flattened":true}}},"StorageClass":{},"ObjectSize":{"type":"long"}}}},"GetObjectLegalHold":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?legal-hold"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"LegalHold":{"shape":"Sar","locationName":"LegalHold"}},"payload":"LegalHold"}},"GetObjectLockConfiguration":{"http":{"method":"GET","requestUri":"/{Bucket}?object-lock"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"ObjectLockConfiguration":{"shape":"Sau"}},"payload":"ObjectLockConfiguration"}},"GetObjectRetention":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?retention"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Retention":{"shape":"Sb2","locationName":"Retention"}},"payload":"Retention"}},"GetObjectTagging":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?tagging"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"}}},"output":{"type":"structure","required":["TagSet"],"members":{"VersionId":{"location":"header","locationName":"x-amz-version-id"},"TagSet":{"shape":"S48"}}}},"GetObjectTorrent":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}?torrent"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Body":{"streaming":true,"type":"blob"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}},"payload":"Body"}},"GetPublicAccessBlock":{"http":{"method":"GET","requestUri":"/{Bucket}?publicAccessBlock"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"PublicAccessBlockConfiguration":{"shape":"Sb9"}},"payload":"PublicAccessBlockConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"HeadBucket":{"http":{"method":"HEAD","requestUri":"/{Bucket}"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"BucketLocationType":{"location":"header","locationName":"x-amz-bucket-location-type"},"BucketLocationName":{"location":"header","locationName":"x-amz-bucket-location-name"},"BucketRegion":{"location":"header","locationName":"x-amz-bucket-region"},"AccessPointAlias":{"location":"header","locationName":"x-amz-access-point-alias","type":"boolean"}}}},"HeadObject":{"http":{"method":"HEAD","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"IfMatch":{"location":"header","locationName":"If-Match"},"IfModifiedSince":{"location":"header","locationName":"If-Modified-Since","type":"timestamp"},"IfNoneMatch":{"location":"header","locationName":"If-None-Match"},"IfUnmodifiedSince":{"location":"header","locationName":"If-Unmodified-Since","type":"timestamp"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"Range":{"location":"header","locationName":"Range"},"VersionId":{"location":"querystring","locationName":"versionId"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"PartNumber":{"location":"querystring","locationName":"partNumber","type":"integer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ChecksumMode":{"location":"header","locationName":"x-amz-checksum-mode"}}},"output":{"type":"structure","members":{"DeleteMarker":{"location":"header","locationName":"x-amz-delete-marker","type":"boolean"},"AcceptRanges":{"location":"header","locationName":"accept-ranges"},"Expiration":{"location":"header","locationName":"x-amz-expiration"},"Restore":{"location":"header","locationName":"x-amz-restore"},"ArchiveStatus":{"location":"header","locationName":"x-amz-archive-status"},"LastModified":{"location":"header","locationName":"Last-Modified","type":"timestamp"},"ContentLength":{"location":"header","locationName":"Content-Length","type":"long"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"ETag":{"location":"header","locationName":"ETag"},"MissingMeta":{"location":"header","locationName":"x-amz-missing-meta","type":"integer"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"CacheControl":{"location":"header","locationName":"Cache-Control"},"ContentDisposition":{"location":"header","locationName":"Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"Content-Language"},"ContentType":{"location":"header","locationName":"Content-Type"},"Expires":{"location":"header","locationName":"Expires","deprecated":true,"type":"timestamp"},"ExpiresString":{"location":"header","locationName":"ExpiresString"},"WebsiteRedirectLocation":{"location":"header","locationName":"x-amz-website-redirect-location"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"StorageClass":{"location":"header","locationName":"x-amz-storage-class"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"ReplicationStatus":{"location":"header","locationName":"x-amz-replication-status"},"PartsCount":{"location":"header","locationName":"x-amz-mp-parts-count","type":"integer"},"ObjectLockMode":{"location":"header","locationName":"x-amz-object-lock-mode"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-object-lock-retain-until-date"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-object-lock-legal-hold"}}}},"ListBucketAnalyticsConfigurations":{"http":{"method":"GET","requestUri":"/{Bucket}?analytics"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContinuationToken":{"location":"querystring","locationName":"continuation-token"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"ContinuationToken":{},"NextContinuationToken":{},"AnalyticsConfigurationList":{"locationName":"AnalyticsConfiguration","type":"list","member":{"shape":"S42"},"flattened":true}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"ListBucketIntelligentTieringConfigurations":{"http":{"method":"GET","requestUri":"/{Bucket}?intelligent-tiering"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContinuationToken":{"location":"querystring","locationName":"continuation-token"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"ContinuationToken":{},"NextContinuationToken":{},"IntelligentTieringConfigurationList":{"locationName":"IntelligentTieringConfiguration","type":"list","member":{"shape":"S50"},"flattened":true}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"ListBucketInventoryConfigurations":{"http":{"method":"GET","requestUri":"/{Bucket}?inventory"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContinuationToken":{"location":"querystring","locationName":"continuation-token"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"ContinuationToken":{},"InventoryConfigurationList":{"locationName":"InventoryConfiguration","type":"list","member":{"shape":"S5a"},"flattened":true},"IsTruncated":{"type":"boolean"},"NextContinuationToken":{}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"ListBucketMetricsConfigurations":{"http":{"method":"GET","requestUri":"/{Bucket}?metrics"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContinuationToken":{"location":"querystring","locationName":"continuation-token"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"ContinuationToken":{},"NextContinuationToken":{},"MetricsConfigurationList":{"locationName":"MetricsConfiguration","type":"list","member":{"shape":"S6u"},"flattened":true}}}},"ListBuckets":{"http":{"method":"GET"},"output":{"type":"structure","members":{"Buckets":{"shape":"Sby"},"Owner":{"shape":"S3q"}}},"alias":"GetService"},"ListDirectoryBuckets":{"http":{"method":"GET"},"input":{"type":"structure","members":{"ContinuationToken":{"location":"querystring","locationName":"continuation-token"},"MaxDirectoryBuckets":{"location":"querystring","locationName":"max-directory-buckets","type":"integer"}}},"output":{"type":"structure","members":{"Buckets":{"shape":"Sby"},"ContinuationToken":{}}},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"ListMultipartUploads":{"http":{"method":"GET","requestUri":"/{Bucket}?uploads"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Delimiter":{"location":"querystring","locationName":"delimiter"},"EncodingType":{"location":"querystring","locationName":"encoding-type"},"KeyMarker":{"location":"querystring","locationName":"key-marker"},"MaxUploads":{"location":"querystring","locationName":"max-uploads","type":"integer"},"Prefix":{"contextParam":{"name":"Prefix"},"location":"querystring","locationName":"prefix"},"UploadIdMarker":{"location":"querystring","locationName":"upload-id-marker"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"}}},"output":{"type":"structure","members":{"Bucket":{},"KeyMarker":{},"UploadIdMarker":{},"NextKeyMarker":{},"Prefix":{},"Delimiter":{},"NextUploadIdMarker":{},"MaxUploads":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Uploads":{"locationName":"Upload","type":"list","member":{"type":"structure","members":{"UploadId":{},"Key":{},"Initiated":{"type":"timestamp"},"StorageClass":{},"Owner":{"shape":"S3q"},"Initiator":{"shape":"Sch"},"ChecksumAlgorithm":{}}},"flattened":true},"CommonPrefixes":{"shape":"Sci"},"EncodingType":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"ListObjectVersions":{"http":{"method":"GET","requestUri":"/{Bucket}?versions"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Delimiter":{"location":"querystring","locationName":"delimiter"},"EncodingType":{"location":"querystring","locationName":"encoding-type"},"KeyMarker":{"location":"querystring","locationName":"key-marker"},"MaxKeys":{"location":"querystring","locationName":"max-keys","type":"integer"},"Prefix":{"contextParam":{"name":"Prefix"},"location":"querystring","locationName":"prefix"},"VersionIdMarker":{"location":"querystring","locationName":"version-id-marker"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"OptionalObjectAttributes":{"shape":"Scn","location":"header","locationName":"x-amz-optional-object-attributes"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"KeyMarker":{},"VersionIdMarker":{},"NextKeyMarker":{},"NextVersionIdMarker":{},"Versions":{"locationName":"Version","type":"list","member":{"type":"structure","members":{"ETag":{},"ChecksumAlgorithm":{"shape":"Sct"},"Size":{"type":"long"},"StorageClass":{},"Key":{},"VersionId":{},"IsLatest":{"type":"boolean"},"LastModified":{"type":"timestamp"},"Owner":{"shape":"S3q"},"RestoreStatus":{"shape":"Scw"}}},"flattened":true},"DeleteMarkers":{"locationName":"DeleteMarker","type":"list","member":{"type":"structure","members":{"Owner":{"shape":"S3q"},"Key":{},"VersionId":{},"IsLatest":{"type":"boolean"},"LastModified":{"type":"timestamp"}}},"flattened":true},"Name":{},"Prefix":{},"Delimiter":{},"MaxKeys":{"type":"integer"},"CommonPrefixes":{"shape":"Sci"},"EncodingType":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"alias":"GetBucketObjectVersions"},"ListObjects":{"http":{"method":"GET","requestUri":"/{Bucket}"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Delimiter":{"location":"querystring","locationName":"delimiter"},"EncodingType":{"location":"querystring","locationName":"encoding-type"},"Marker":{"location":"querystring","locationName":"marker"},"MaxKeys":{"location":"querystring","locationName":"max-keys","type":"integer"},"Prefix":{"contextParam":{"name":"Prefix"},"location":"querystring","locationName":"prefix"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"OptionalObjectAttributes":{"shape":"Scn","location":"header","locationName":"x-amz-optional-object-attributes"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"Marker":{},"NextMarker":{},"Contents":{"shape":"Sd5"},"Name":{},"Prefix":{},"Delimiter":{},"MaxKeys":{"type":"integer"},"CommonPrefixes":{"shape":"Sci"},"EncodingType":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"alias":"GetBucket"},"ListObjectsV2":{"http":{"method":"GET","requestUri":"/{Bucket}?list-type=2"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Delimiter":{"location":"querystring","locationName":"delimiter"},"EncodingType":{"location":"querystring","locationName":"encoding-type"},"MaxKeys":{"location":"querystring","locationName":"max-keys","type":"integer"},"Prefix":{"contextParam":{"name":"Prefix"},"location":"querystring","locationName":"prefix"},"ContinuationToken":{"location":"querystring","locationName":"continuation-token"},"FetchOwner":{"location":"querystring","locationName":"fetch-owner","type":"boolean"},"StartAfter":{"location":"querystring","locationName":"start-after"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"OptionalObjectAttributes":{"shape":"Scn","location":"header","locationName":"x-amz-optional-object-attributes"}}},"output":{"type":"structure","members":{"IsTruncated":{"type":"boolean"},"Contents":{"shape":"Sd5"},"Name":{},"Prefix":{},"Delimiter":{},"MaxKeys":{"type":"integer"},"CommonPrefixes":{"shape":"Sci"},"EncodingType":{},"KeyCount":{"type":"integer"},"ContinuationToken":{},"NextContinuationToken":{},"StartAfter":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}}},"ListParts":{"http":{"method":"GET","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key","UploadId"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"MaxParts":{"location":"querystring","locationName":"max-parts","type":"integer"},"PartNumberMarker":{"location":"querystring","locationName":"part-number-marker","type":"integer"},"UploadId":{"location":"querystring","locationName":"uploadId"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"}}},"output":{"type":"structure","members":{"AbortDate":{"location":"header","locationName":"x-amz-abort-date","type":"timestamp"},"AbortRuleId":{"location":"header","locationName":"x-amz-abort-rule-id"},"Bucket":{},"Key":{},"UploadId":{},"PartNumberMarker":{"type":"integer"},"NextPartNumberMarker":{"type":"integer"},"MaxParts":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Parts":{"locationName":"Part","type":"list","member":{"type":"structure","members":{"PartNumber":{"type":"integer"},"LastModified":{"type":"timestamp"},"ETag":{},"Size":{"type":"long"},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{}}},"flattened":true},"Initiator":{"shape":"Sch"},"Owner":{"shape":"S3q"},"StorageClass":{},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"ChecksumAlgorithm":{}}}},"PutBucketAccelerateConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?accelerate"},"input":{"type":"structure","required":["Bucket","AccelerateConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"AccelerateConfiguration":{"locationName":"AccelerateConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"Status":{}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"}},"payload":"AccelerateConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":false},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketAcl":{"http":{"method":"PUT","requestUri":"/{Bucket}?acl"},"input":{"type":"structure","required":["Bucket"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"AccessControlPolicy":{"shape":"Sdk","locationName":"AccessControlPolicy","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","locationName":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"AccessControlPolicy"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketAnalyticsConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?analytics"},"input":{"type":"structure","required":["Bucket","Id","AnalyticsConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"AnalyticsConfiguration":{"shape":"S42","locationName":"AnalyticsConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"AnalyticsConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketCors":{"http":{"method":"PUT","requestUri":"/{Bucket}?cors"},"input":{"type":"structure","required":["Bucket","CORSConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CORSConfiguration":{"locationName":"CORSConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["CORSRules"],"members":{"CORSRules":{"shape":"S4h","locationName":"CORSRule"}}},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"CORSConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketEncryption":{"http":{"method":"PUT","requestUri":"/{Bucket}?encryption"},"input":{"type":"structure","required":["Bucket","ServerSideEncryptionConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ServerSideEncryptionConfiguration":{"shape":"S4u","locationName":"ServerSideEncryptionConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"ServerSideEncryptionConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketIntelligentTieringConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?intelligent-tiering"},"input":{"type":"structure","required":["Bucket","Id","IntelligentTieringConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"IntelligentTieringConfiguration":{"shape":"S50","locationName":"IntelligentTieringConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}}},"payload":"IntelligentTieringConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketInventoryConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?inventory"},"input":{"type":"structure","required":["Bucket","Id","InventoryConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"InventoryConfiguration":{"shape":"S5a","locationName":"InventoryConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"InventoryConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketLifecycle":{"http":{"method":"PUT","requestUri":"/{Bucket}?lifecycle"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"LifecycleConfiguration":{"locationName":"LifecycleConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["Rules"],"members":{"Rules":{"shape":"S5q","locationName":"Rule"}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"LifecycleConfiguration"},"deprecated":true,"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketLifecycleConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?lifecycle"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"LifecycleConfiguration":{"locationName":"LifecycleConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["Rules"],"members":{"Rules":{"shape":"S66","locationName":"Rule"}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"LifecycleConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketLogging":{"http":{"method":"PUT","requestUri":"/{Bucket}?logging"},"input":{"type":"structure","required":["Bucket","BucketLoggingStatus"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"BucketLoggingStatus":{"locationName":"BucketLoggingStatus","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"LoggingEnabled":{"shape":"S6i"}}},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"BucketLoggingStatus"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketMetricsConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?metrics"},"input":{"type":"structure","required":["Bucket","Id","MetricsConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Id":{"location":"querystring","locationName":"id"},"MetricsConfiguration":{"shape":"S6u","locationName":"MetricsConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"MetricsConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketNotification":{"http":{"method":"PUT","requestUri":"/{Bucket}?notification"},"input":{"type":"structure","required":["Bucket","NotificationConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"NotificationConfiguration":{"shape":"S6z","locationName":"NotificationConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"NotificationConfiguration"},"deprecated":true,"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketNotificationConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?notification"},"input":{"type":"structure","required":["Bucket","NotificationConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"NotificationConfiguration":{"shape":"S7a","locationName":"NotificationConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"SkipDestinationValidation":{"location":"header","locationName":"x-amz-skip-destination-validation","type":"boolean"}},"payload":"NotificationConfiguration"},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketOwnershipControls":{"http":{"method":"PUT","requestUri":"/{Bucket}?ownershipControls"},"input":{"type":"structure","required":["Bucket","OwnershipControls"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"OwnershipControls":{"shape":"S7r","locationName":"OwnershipControls","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}}},"payload":"OwnershipControls"},"httpChecksum":{"requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketPolicy":{"http":{"method":"PUT","requestUri":"/{Bucket}?policy"},"input":{"type":"structure","required":["Bucket","Policy"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ConfirmRemoveSelfBucketAccess":{"location":"header","locationName":"x-amz-confirm-remove-self-bucket-access","type":"boolean"},"Policy":{},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"Policy"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketReplication":{"http":{"method":"PUT","requestUri":"/{Bucket}?replication"},"input":{"type":"structure","required":["Bucket","ReplicationConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ReplicationConfiguration":{"shape":"S83","locationName":"ReplicationConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"Token":{"location":"header","locationName":"x-amz-bucket-object-lock-token"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"ReplicationConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketRequestPayment":{"http":{"method":"PUT","requestUri":"/{Bucket}?requestPayment"},"input":{"type":"structure","required":["Bucket","RequestPaymentConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"RequestPaymentConfiguration":{"locationName":"RequestPaymentConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["Payer"],"members":{"Payer":{}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"RequestPaymentConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketTagging":{"http":{"method":"PUT","requestUri":"/{Bucket}?tagging"},"input":{"type":"structure","required":["Bucket","Tagging"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"Tagging":{"shape":"Sea","locationName":"Tagging","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"Tagging"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketVersioning":{"http":{"method":"PUT","requestUri":"/{Bucket}?versioning"},"input":{"type":"structure","required":["Bucket","VersioningConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"MFA":{"location":"header","locationName":"x-amz-mfa"},"VersioningConfiguration":{"locationName":"VersioningConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"MFADelete":{"locationName":"MfaDelete"},"Status":{}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"VersioningConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutBucketWebsite":{"http":{"method":"PUT","requestUri":"/{Bucket}?website"},"input":{"type":"structure","required":["Bucket","WebsiteConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"WebsiteConfiguration":{"locationName":"WebsiteConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"ErrorDocument":{"shape":"S9b"},"IndexDocument":{"shape":"S99"},"RedirectAllRequestsTo":{"shape":"S96"},"RoutingRules":{"shape":"S9c"}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"WebsiteConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"PutObject":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"Body":{"streaming":true,"type":"blob"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CacheControl":{"location":"header","locationName":"Cache-Control"},"ContentDisposition":{"location":"header","locationName":"Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"Content-Language"},"ContentLength":{"location":"header","locationName":"Content-Length","type":"long"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ContentType":{"location":"header","locationName":"Content-Type"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"Expires":{"location":"header","locationName":"Expires","type":"timestamp"},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","locationName":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","locationName":"x-amz-website-redirect-location"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"Tagging":{"location":"header","locationName":"x-amz-tagging"},"ObjectLockMode":{"location":"header","locationName":"x-amz-object-lock-mode"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-object-lock-retain-until-date"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-object-lock-legal-hold"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"Body"},"output":{"type":"structure","members":{"Expiration":{"location":"header","locationName":"x-amz-expiration"},"ETag":{"location":"header","locationName":"ETag"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"VersionId":{"location":"header","locationName":"x-amz-version-id"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"SSEKMSEncryptionContext":{"shape":"S1i","location":"header","locationName":"x-amz-server-side-encryption-context"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":false}},"PutObjectAcl":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}?acl"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"ACL":{"location":"header","locationName":"x-amz-acl"},"AccessControlPolicy":{"shape":"Sdk","locationName":"AccessControlPolicy","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"GrantFullControl":{"location":"header","locationName":"x-amz-grant-full-control"},"GrantRead":{"location":"header","locationName":"x-amz-grant-read"},"GrantReadACP":{"location":"header","locationName":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","locationName":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","locationName":"x-amz-grant-write-acp"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"VersionId":{"location":"querystring","locationName":"versionId"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"AccessControlPolicy"},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"PutObjectLegalHold":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}?legal-hold"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"LegalHold":{"shape":"Sar","locationName":"LegalHold","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"VersionId":{"location":"querystring","locationName":"versionId"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"LegalHold"},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"PutObjectLockConfiguration":{"http":{"method":"PUT","requestUri":"/{Bucket}?object-lock"},"input":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ObjectLockConfiguration":{"shape":"Sau","locationName":"ObjectLockConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"Token":{"location":"header","locationName":"x-amz-bucket-object-lock-token"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"ObjectLockConfiguration"},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"PutObjectRetention":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}?retention"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"Retention":{"shape":"Sb2","locationName":"Retention","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"VersionId":{"location":"querystring","locationName":"versionId"},"BypassGovernanceRetention":{"location":"header","locationName":"x-amz-bypass-governance-retention","type":"boolean"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"Retention"},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"PutObjectTagging":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}?tagging"},"input":{"type":"structure","required":["Bucket","Key","Tagging"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"Tagging":{"shape":"Sea","locationName":"Tagging","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"}},"payload":"Tagging"},"output":{"type":"structure","members":{"VersionId":{"location":"header","locationName":"x-amz-version-id"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true}},"PutPublicAccessBlock":{"http":{"method":"PUT","requestUri":"/{Bucket}?publicAccessBlock"},"input":{"type":"structure","required":["Bucket","PublicAccessBlockConfiguration"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"PublicAccessBlockConfiguration":{"shape":"Sb9","locationName":"PublicAccessBlockConfiguration","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"PublicAccessBlockConfiguration"},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":true},"staticContextParams":{"UseS3ExpressControlEndpoint":{"value":true}}},"RestoreObject":{"http":{"requestUri":"/{Bucket}/{Key+}?restore"},"input":{"type":"structure","required":["Bucket","Key"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"VersionId":{"location":"querystring","locationName":"versionId"},"RestoreRequest":{"locationName":"RestoreRequest","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","members":{"Days":{"type":"integer"},"GlacierJobParameters":{"type":"structure","required":["Tier"],"members":{"Tier":{}}},"Type":{},"Tier":{},"Description":{},"SelectParameters":{"type":"structure","required":["InputSerialization","ExpressionType","Expression","OutputSerialization"],"members":{"InputSerialization":{"shape":"Sf0"},"ExpressionType":{},"Expression":{},"OutputSerialization":{"shape":"Sff"}}},"OutputLocation":{"type":"structure","members":{"S3":{"type":"structure","required":["BucketName","Prefix"],"members":{"BucketName":{},"Prefix":{},"Encryption":{"type":"structure","required":["EncryptionType"],"members":{"EncryptionType":{},"KMSKeyId":{"shape":"Sr"},"KMSContext":{}}},"CannedACL":{},"AccessControlList":{"shape":"S3t"},"Tagging":{"shape":"Sea"},"UserMetadata":{"type":"list","member":{"locationName":"MetadataEntry","type":"structure","members":{"Name":{},"Value":{}}}},"StorageClass":{}}}}}}},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"RestoreRequest"},"output":{"type":"structure","members":{"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"},"RestoreOutputPath":{"location":"header","locationName":"x-amz-restore-output-path"}}},"alias":"PostObjectRestore","httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":false}},"SelectObjectContent":{"http":{"requestUri":"/{Bucket}/{Key+}?select&select-type=2"},"input":{"locationName":"SelectObjectContentRequest","xmlNamespace":{"uri":"http://s3.amazonaws.com/doc/2006-03-01/"},"type":"structure","required":["Bucket","Key","Expression","ExpressionType","InputSerialization","OutputSerialization"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"Key":{"location":"uri","locationName":"Key"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"Expression":{},"ExpressionType":{},"RequestProgress":{"type":"structure","members":{"Enabled":{"type":"boolean"}}},"InputSerialization":{"shape":"Sf0"},"OutputSerialization":{"shape":"Sff"},"ScanRange":{"type":"structure","members":{"Start":{"type":"long"},"End":{"type":"long"}}},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"output":{"type":"structure","members":{"Payload":{"type":"structure","members":{"Records":{"type":"structure","members":{"Payload":{"eventpayload":true,"type":"blob"}},"event":true},"Stats":{"type":"structure","members":{"Details":{"eventpayload":true,"type":"structure","members":{"BytesScanned":{"type":"long"},"BytesProcessed":{"type":"long"},"BytesReturned":{"type":"long"}}}},"event":true},"Progress":{"type":"structure","members":{"Details":{"eventpayload":true,"type":"structure","members":{"BytesScanned":{"type":"long"},"BytesProcessed":{"type":"long"},"BytesReturned":{"type":"long"}}}},"event":true},"Cont":{"type":"structure","members":{},"event":true},"End":{"type":"structure","members":{},"event":true}},"eventstream":true}},"payload":"Payload"}},"UploadPart":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","Key","PartNumber","UploadId"],"members":{"Body":{"streaming":true,"type":"blob"},"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ContentLength":{"location":"header","locationName":"Content-Length","type":"long"},"ContentMD5":{"location":"header","locationName":"Content-MD5"},"ChecksumAlgorithm":{"location":"header","locationName":"x-amz-sdk-checksum-algorithm"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"Key":{"contextParam":{"name":"Key"},"location":"uri","locationName":"Key"},"PartNumber":{"location":"querystring","locationName":"partNumber","type":"integer"},"UploadId":{"location":"querystring","locationName":"uploadId"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}},"payload":"Body"},"output":{"type":"structure","members":{"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"ETag":{"location":"header","locationName":"ETag"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-checksum-sha256"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}}},"httpChecksum":{"requestAlgorithmMember":"ChecksumAlgorithm","requestChecksumRequired":false}},"UploadPartCopy":{"http":{"method":"PUT","requestUri":"/{Bucket}/{Key+}"},"input":{"type":"structure","required":["Bucket","CopySource","Key","PartNumber","UploadId"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"CopySource":{"location":"header","locationName":"x-amz-copy-source"},"CopySourceIfMatch":{"location":"header","locationName":"x-amz-copy-source-if-match"},"CopySourceIfModifiedSince":{"location":"header","locationName":"x-amz-copy-source-if-modified-since","type":"timestamp"},"CopySourceIfNoneMatch":{"location":"header","locationName":"x-amz-copy-source-if-none-match"},"CopySourceIfUnmodifiedSince":{"location":"header","locationName":"x-amz-copy-source-if-unmodified-since","type":"timestamp"},"CopySourceRange":{"location":"header","locationName":"x-amz-copy-source-range"},"Key":{"location":"uri","locationName":"Key"},"PartNumber":{"location":"querystring","locationName":"partNumber","type":"integer"},"UploadId":{"location":"querystring","locationName":"uploadId"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKey":{"shape":"Sk","location":"header","locationName":"x-amz-server-side-encryption-customer-key"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"CopySourceSSECustomerAlgorithm":{"location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-algorithm"},"CopySourceSSECustomerKey":{"shape":"S1k","location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-key"},"CopySourceSSECustomerKeyMD5":{"location":"header","locationName":"x-amz-copy-source-server-side-encryption-customer-key-MD5"},"RequestPayer":{"location":"header","locationName":"x-amz-request-payer"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"},"ExpectedSourceBucketOwner":{"location":"header","locationName":"x-amz-source-expected-bucket-owner"}}},"output":{"type":"structure","members":{"CopySourceVersionId":{"location":"header","locationName":"x-amz-copy-source-version-id"},"CopyPartResult":{"type":"structure","members":{"ETag":{},"LastModified":{"type":"timestamp"},"ChecksumCRC32":{},"ChecksumCRC32C":{},"ChecksumSHA1":{},"ChecksumSHA256":{}}},"ServerSideEncryption":{"location":"header","locationName":"x-amz-server-side-encryption"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-server-side-encryption-customer-algorithm"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-server-side-encryption-customer-key-MD5"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-server-side-encryption-aws-kms-key-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"},"RequestCharged":{"location":"header","locationName":"x-amz-request-charged"}},"payload":"CopyPartResult"},"staticContextParams":{"DisableS3ExpressSessionAuth":{"value":true}}},"WriteGetObjectResponse":{"http":{"requestUri":"/WriteGetObjectResponse"},"input":{"type":"structure","required":["RequestRoute","RequestToken"],"members":{"RequestRoute":{"hostLabel":true,"location":"header","locationName":"x-amz-request-route"},"RequestToken":{"location":"header","locationName":"x-amz-request-token"},"Body":{"streaming":true,"type":"blob"},"StatusCode":{"location":"header","locationName":"x-amz-fwd-status","type":"integer"},"ErrorCode":{"location":"header","locationName":"x-amz-fwd-error-code"},"ErrorMessage":{"location":"header","locationName":"x-amz-fwd-error-message"},"AcceptRanges":{"location":"header","locationName":"x-amz-fwd-header-accept-ranges"},"CacheControl":{"location":"header","locationName":"x-amz-fwd-header-Cache-Control"},"ContentDisposition":{"location":"header","locationName":"x-amz-fwd-header-Content-Disposition"},"ContentEncoding":{"location":"header","locationName":"x-amz-fwd-header-Content-Encoding"},"ContentLanguage":{"location":"header","locationName":"x-amz-fwd-header-Content-Language"},"ContentLength":{"location":"header","locationName":"Content-Length","type":"long"},"ContentRange":{"location":"header","locationName":"x-amz-fwd-header-Content-Range"},"ContentType":{"location":"header","locationName":"x-amz-fwd-header-Content-Type"},"ChecksumCRC32":{"location":"header","locationName":"x-amz-fwd-header-x-amz-checksum-crc32"},"ChecksumCRC32C":{"location":"header","locationName":"x-amz-fwd-header-x-amz-checksum-crc32c"},"ChecksumSHA1":{"location":"header","locationName":"x-amz-fwd-header-x-amz-checksum-sha1"},"ChecksumSHA256":{"location":"header","locationName":"x-amz-fwd-header-x-amz-checksum-sha256"},"DeleteMarker":{"location":"header","locationName":"x-amz-fwd-header-x-amz-delete-marker","type":"boolean"},"ETag":{"location":"header","locationName":"x-amz-fwd-header-ETag"},"Expires":{"location":"header","locationName":"x-amz-fwd-header-Expires","type":"timestamp"},"Expiration":{"location":"header","locationName":"x-amz-fwd-header-x-amz-expiration"},"LastModified":{"location":"header","locationName":"x-amz-fwd-header-Last-Modified","type":"timestamp"},"MissingMeta":{"location":"header","locationName":"x-amz-fwd-header-x-amz-missing-meta","type":"integer"},"Metadata":{"shape":"S1b","location":"headers","locationName":"x-amz-meta-"},"ObjectLockMode":{"location":"header","locationName":"x-amz-fwd-header-x-amz-object-lock-mode"},"ObjectLockLegalHoldStatus":{"location":"header","locationName":"x-amz-fwd-header-x-amz-object-lock-legal-hold"},"ObjectLockRetainUntilDate":{"shape":"S1o","location":"header","locationName":"x-amz-fwd-header-x-amz-object-lock-retain-until-date"},"PartsCount":{"location":"header","locationName":"x-amz-fwd-header-x-amz-mp-parts-count","type":"integer"},"ReplicationStatus":{"location":"header","locationName":"x-amz-fwd-header-x-amz-replication-status"},"RequestCharged":{"location":"header","locationName":"x-amz-fwd-header-x-amz-request-charged"},"Restore":{"location":"header","locationName":"x-amz-fwd-header-x-amz-restore"},"ServerSideEncryption":{"location":"header","locationName":"x-amz-fwd-header-x-amz-server-side-encryption"},"SSECustomerAlgorithm":{"location":"header","locationName":"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm"},"SSEKMSKeyId":{"shape":"Sr","location":"header","locationName":"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id"},"SSECustomerKeyMD5":{"location":"header","locationName":"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-MD5"},"StorageClass":{"location":"header","locationName":"x-amz-fwd-header-x-amz-storage-class"},"TagCount":{"location":"header","locationName":"x-amz-fwd-header-x-amz-tagging-count","type":"integer"},"VersionId":{"location":"header","locationName":"x-amz-fwd-header-x-amz-version-id"},"BucketKeyEnabled":{"location":"header","locationName":"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled","type":"boolean"}},"payload":"Body"},"authtype":"v4-unsigned-body","endpoint":{"hostPrefix":"{RequestRoute}."},"staticContextParams":{"UseObjectLambdaEndpoint":{"value":true}}}},"shapes":{"Sk":{"type":"blob","sensitive":true},"Sr":{"type":"string","sensitive":true},"S1b":{"type":"map","key":{},"value":{}},"S1i":{"type":"string","sensitive":true},"S1k":{"type":"blob","sensitive":true},"S1o":{"type":"timestamp","timestampFormat":"iso8601"},"S2h":{"type":"string","sensitive":true},"S3q":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"S3t":{"type":"list","member":{"locationName":"Grant","type":"structure","members":{"Grantee":{"shape":"S3v"},"Permission":{}}}},"S3v":{"type":"structure","required":["Type"],"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"Type":{"locationName":"xsi:type","xmlAttribute":true},"URI":{}},"xmlNamespace":{"prefix":"xsi","uri":"http://www.w3.org/2001/XMLSchema-instance"}},"S42":{"type":"structure","required":["Id","StorageClassAnalysis"],"members":{"Id":{},"Filter":{"type":"structure","members":{"Prefix":{},"Tag":{"shape":"S45"},"And":{"type":"structure","members":{"Prefix":{},"Tags":{"shape":"S48","flattened":true,"locationName":"Tag"}}}}},"StorageClassAnalysis":{"type":"structure","members":{"DataExport":{"type":"structure","required":["OutputSchemaVersion","Destination"],"members":{"OutputSchemaVersion":{},"Destination":{"type":"structure","required":["S3BucketDestination"],"members":{"S3BucketDestination":{"type":"structure","required":["Format","Bucket"],"members":{"Format":{},"BucketAccountId":{},"Bucket":{},"Prefix":{}}}}}}}}}}},"S45":{"type":"structure","required":["Key","Value"],"members":{"Key":{},"Value":{}}},"S48":{"type":"list","member":{"shape":"S45","locationName":"Tag"}},"S4h":{"type":"list","member":{"type":"structure","required":["AllowedMethods","AllowedOrigins"],"members":{"ID":{},"AllowedHeaders":{"locationName":"AllowedHeader","type":"list","member":{},"flattened":true},"AllowedMethods":{"locationName":"AllowedMethod","type":"list","member":{},"flattened":true},"AllowedOrigins":{"locationName":"AllowedOrigin","type":"list","member":{},"flattened":true},"ExposeHeaders":{"locationName":"ExposeHeader","type":"list","member":{},"flattened":true},"MaxAgeSeconds":{"type":"integer"}}},"flattened":true},"S4u":{"type":"structure","required":["Rules"],"members":{"Rules":{"locationName":"Rule","type":"list","member":{"type":"structure","members":{"ApplyServerSideEncryptionByDefault":{"type":"structure","required":["SSEAlgorithm"],"members":{"SSEAlgorithm":{},"KMSMasterKeyID":{"shape":"Sr"}}},"BucketKeyEnabled":{"type":"boolean"}}},"flattened":true}}},"S50":{"type":"structure","required":["Id","Status","Tierings"],"members":{"Id":{},"Filter":{"type":"structure","members":{"Prefix":{},"Tag":{"shape":"S45"},"And":{"type":"structure","members":{"Prefix":{},"Tags":{"shape":"S48","flattened":true,"locationName":"Tag"}}}}},"Status":{},"Tierings":{"locationName":"Tiering","type":"list","member":{"type":"structure","required":["Days","AccessTier"],"members":{"Days":{"type":"integer"},"AccessTier":{}}},"flattened":true}}},"S5a":{"type":"structure","required":["Destination","IsEnabled","Id","IncludedObjectVersions","Schedule"],"members":{"Destination":{"type":"structure","required":["S3BucketDestination"],"members":{"S3BucketDestination":{"type":"structure","required":["Bucket","Format"],"members":{"AccountId":{},"Bucket":{},"Format":{},"Prefix":{},"Encryption":{"type":"structure","members":{"SSES3":{"locationName":"SSE-S3","type":"structure","members":{}},"SSEKMS":{"locationName":"SSE-KMS","type":"structure","required":["KeyId"],"members":{"KeyId":{"shape":"Sr"}}}}}}}}},"IsEnabled":{"type":"boolean"},"Filter":{"type":"structure","required":["Prefix"],"members":{"Prefix":{}}},"Id":{},"IncludedObjectVersions":{},"OptionalFields":{"type":"list","member":{"locationName":"Field"}},"Schedule":{"type":"structure","required":["Frequency"],"members":{"Frequency":{}}}}},"S5q":{"type":"list","member":{"type":"structure","required":["Prefix","Status"],"members":{"Expiration":{"shape":"S5s"},"ID":{},"Prefix":{},"Status":{},"Transition":{"shape":"S5x"},"NoncurrentVersionTransition":{"shape":"S5z"},"NoncurrentVersionExpiration":{"shape":"S61"},"AbortIncompleteMultipartUpload":{"shape":"S62"}}},"flattened":true},"S5s":{"type":"structure","members":{"Date":{"shape":"S5t"},"Days":{"type":"integer"},"ExpiredObjectDeleteMarker":{"type":"boolean"}}},"S5t":{"type":"timestamp","timestampFormat":"iso8601"},"S5x":{"type":"structure","members":{"Date":{"shape":"S5t"},"Days":{"type":"integer"},"StorageClass":{}}},"S5z":{"type":"structure","members":{"NoncurrentDays":{"type":"integer"},"StorageClass":{},"NewerNoncurrentVersions":{"type":"integer"}}},"S61":{"type":"structure","members":{"NoncurrentDays":{"type":"integer"},"NewerNoncurrentVersions":{"type":"integer"}}},"S62":{"type":"structure","members":{"DaysAfterInitiation":{"type":"integer"}}},"S66":{"type":"list","member":{"type":"structure","required":["Status"],"members":{"Expiration":{"shape":"S5s"},"ID":{},"Prefix":{"deprecated":true},"Filter":{"type":"structure","members":{"Prefix":{},"Tag":{"shape":"S45"},"ObjectSizeGreaterThan":{"type":"long"},"ObjectSizeLessThan":{"type":"long"},"And":{"type":"structure","members":{"Prefix":{},"Tags":{"shape":"S48","flattened":true,"locationName":"Tag"},"ObjectSizeGreaterThan":{"type":"long"},"ObjectSizeLessThan":{"type":"long"}}}}},"Status":{},"Transitions":{"locationName":"Transition","type":"list","member":{"shape":"S5x"},"flattened":true},"NoncurrentVersionTransitions":{"locationName":"NoncurrentVersionTransition","type":"list","member":{"shape":"S5z"},"flattened":true},"NoncurrentVersionExpiration":{"shape":"S61"},"AbortIncompleteMultipartUpload":{"shape":"S62"}}},"flattened":true},"S6i":{"type":"structure","required":["TargetBucket","TargetPrefix"],"members":{"TargetBucket":{},"TargetGrants":{"type":"list","member":{"locationName":"Grant","type":"structure","members":{"Grantee":{"shape":"S3v"},"Permission":{}}}},"TargetPrefix":{},"TargetObjectKeyFormat":{"type":"structure","members":{"SimplePrefix":{"locationName":"SimplePrefix","type":"structure","members":{}},"PartitionedPrefix":{"locationName":"PartitionedPrefix","type":"structure","members":{"PartitionDateSource":{}}}}}}},"S6u":{"type":"structure","required":["Id"],"members":{"Id":{},"Filter":{"type":"structure","members":{"Prefix":{},"Tag":{"shape":"S45"},"AccessPointArn":{},"And":{"type":"structure","members":{"Prefix":{},"Tags":{"shape":"S48","flattened":true,"locationName":"Tag"},"AccessPointArn":{}}}}}}},"S6y":{"type":"structure","required":["Bucket"],"members":{"Bucket":{"contextParam":{"name":"Bucket"},"location":"uri","locationName":"Bucket"},"ExpectedBucketOwner":{"location":"header","locationName":"x-amz-expected-bucket-owner"}}},"S6z":{"type":"structure","members":{"TopicConfiguration":{"type":"structure","members":{"Id":{},"Events":{"shape":"S72","locationName":"Event"},"Event":{"deprecated":true},"Topic":{}}},"QueueConfiguration":{"type":"structure","members":{"Id":{},"Event":{"deprecated":true},"Events":{"shape":"S72","locationName":"Event"},"Queue":{}}},"CloudFunctionConfiguration":{"type":"structure","members":{"Id":{},"Event":{"deprecated":true},"Events":{"shape":"S72","locationName":"Event"},"CloudFunction":{},"InvocationRole":{}}}}},"S72":{"type":"list","member":{},"flattened":true},"S7a":{"type":"structure","members":{"TopicConfigurations":{"locationName":"TopicConfiguration","type":"list","member":{"type":"structure","required":["TopicArn","Events"],"members":{"Id":{},"TopicArn":{"locationName":"Topic"},"Events":{"shape":"S72","locationName":"Event"},"Filter":{"shape":"S7d"}}},"flattened":true},"QueueConfigurations":{"locationName":"QueueConfiguration","type":"list","member":{"type":"structure","required":["QueueArn","Events"],"members":{"Id":{},"QueueArn":{"locationName":"Queue"},"Events":{"shape":"S72","locationName":"Event"},"Filter":{"shape":"S7d"}}},"flattened":true},"LambdaFunctionConfigurations":{"locationName":"CloudFunctionConfiguration","type":"list","member":{"type":"structure","required":["LambdaFunctionArn","Events"],"members":{"Id":{},"LambdaFunctionArn":{"locationName":"CloudFunction"},"Events":{"shape":"S72","locationName":"Event"},"Filter":{"shape":"S7d"}}},"flattened":true},"EventBridgeConfiguration":{"type":"structure","members":{}}}},"S7d":{"type":"structure","members":{"Key":{"locationName":"S3Key","type":"structure","members":{"FilterRules":{"locationName":"FilterRule","type":"list","member":{"type":"structure","members":{"Name":{},"Value":{}}},"flattened":true}}}}},"S7r":{"type":"structure","required":["Rules"],"members":{"Rules":{"locationName":"Rule","type":"list","member":{"type":"structure","required":["ObjectOwnership"],"members":{"ObjectOwnership":{}}},"flattened":true}}},"S83":{"type":"structure","required":["Role","Rules"],"members":{"Role":{},"Rules":{"locationName":"Rule","type":"list","member":{"type":"structure","required":["Status","Destination"],"members":{"ID":{},"Priority":{"type":"integer"},"Prefix":{"deprecated":true},"Filter":{"type":"structure","members":{"Prefix":{},"Tag":{"shape":"S45"},"And":{"type":"structure","members":{"Prefix":{},"Tags":{"shape":"S48","flattened":true,"locationName":"Tag"}}}}},"Status":{},"SourceSelectionCriteria":{"type":"structure","members":{"SseKmsEncryptedObjects":{"type":"structure","required":["Status"],"members":{"Status":{}}},"ReplicaModifications":{"type":"structure","required":["Status"],"members":{"Status":{}}}}},"ExistingObjectReplication":{"type":"structure","required":["Status"],"members":{"Status":{}}},"Destination":{"type":"structure","required":["Bucket"],"members":{"Bucket":{},"Account":{},"StorageClass":{},"AccessControlTranslation":{"type":"structure","required":["Owner"],"members":{"Owner":{}}},"EncryptionConfiguration":{"type":"structure","members":{"ReplicaKmsKeyID":{}}},"ReplicationTime":{"type":"structure","required":["Status","Time"],"members":{"Status":{},"Time":{"shape":"S8p"}}},"Metrics":{"type":"structure","required":["Status"],"members":{"Status":{},"EventThreshold":{"shape":"S8p"}}}}},"DeleteMarkerReplication":{"type":"structure","members":{"Status":{}}}}},"flattened":true}}},"S8p":{"type":"structure","members":{"Minutes":{"type":"integer"}}},"S96":{"type":"structure","required":["HostName"],"members":{"HostName":{},"Protocol":{}}},"S99":{"type":"structure","required":["Suffix"],"members":{"Suffix":{}}},"S9b":{"type":"structure","required":["Key"],"members":{"Key":{}}},"S9c":{"type":"list","member":{"locationName":"RoutingRule","type":"structure","required":["Redirect"],"members":{"Condition":{"type":"structure","members":{"HttpErrorCodeReturnedEquals":{},"KeyPrefixEquals":{}}},"Redirect":{"type":"structure","members":{"HostName":{},"HttpRedirectCode":{},"Protocol":{},"ReplaceKeyPrefixWith":{},"ReplaceKeyWith":{}}}}}},"Sar":{"type":"structure","members":{"Status":{}}},"Sau":{"type":"structure","members":{"ObjectLockEnabled":{},"Rule":{"type":"structure","members":{"DefaultRetention":{"type":"structure","members":{"Mode":{},"Days":{"type":"integer"},"Years":{"type":"integer"}}}}}}},"Sb2":{"type":"structure","members":{"Mode":{},"RetainUntilDate":{"shape":"S5t"}}},"Sb9":{"type":"structure","members":{"BlockPublicAcls":{"locationName":"BlockPublicAcls","type":"boolean"},"IgnorePublicAcls":{"locationName":"IgnorePublicAcls","type":"boolean"},"BlockPublicPolicy":{"locationName":"BlockPublicPolicy","type":"boolean"},"RestrictPublicBuckets":{"locationName":"RestrictPublicBuckets","type":"boolean"}}},"Sby":{"type":"list","member":{"locationName":"Bucket","type":"structure","members":{"Name":{},"CreationDate":{"type":"timestamp"}}}},"Sch":{"type":"structure","members":{"ID":{},"DisplayName":{}}},"Sci":{"type":"list","member":{"type":"structure","members":{"Prefix":{}}},"flattened":true},"Scn":{"type":"list","member":{}},"Sct":{"type":"list","member":{},"flattened":true},"Scw":{"type":"structure","members":{"IsRestoreInProgress":{"type":"boolean"},"RestoreExpiryDate":{"type":"timestamp"}}},"Sd5":{"type":"list","member":{"type":"structure","members":{"Key":{},"LastModified":{"type":"timestamp"},"ETag":{},"ChecksumAlgorithm":{"shape":"Sct"},"Size":{"type":"long"},"StorageClass":{},"Owner":{"shape":"S3q"},"RestoreStatus":{"shape":"Scw"}}},"flattened":true},"Sdk":{"type":"structure","members":{"Grants":{"shape":"S3t","locationName":"AccessControlList"},"Owner":{"shape":"S3q"}}},"Sea":{"type":"structure","required":["TagSet"],"members":{"TagSet":{"shape":"S48"}}},"Sf0":{"type":"structure","members":{"CSV":{"type":"structure","members":{"FileHeaderInfo":{},"Comments":{},"QuoteEscapeCharacter":{},"RecordDelimiter":{},"FieldDelimiter":{},"QuoteCharacter":{},"AllowQuotedRecordDelimiter":{"type":"boolean"}}},"CompressionType":{},"JSON":{"type":"structure","members":{"Type":{}}},"Parquet":{"type":"structure","members":{}}}},"Sff":{"type":"structure","members":{"CSV":{"type":"structure","members":{"QuoteFields":{},"QuoteEscapeCharacter":{},"RecordDelimiter":{},"FieldDelimiter":{},"QuoteCharacter":{}}},"JSON":{"type":"structure","members":{"RecordDelimiter":{}}}}}},"clientContextParams":{"Accelerate":{"documentation":"Enables this client to use S3 Transfer Acceleration endpoints.","type":"boolean"},"DisableMultiRegionAccessPoints":{"documentation":"Disables this client\'s usage of Multi-Region Access Points.","type":"boolean"},"DisableS3ExpressSessionAuth":{"documentation":"Disables this client\'s usage of Session Auth for S3Express\\n      buckets and reverts to using conventional SigV4 for those.","type":"boolean"},"ForcePathStyle":{"documentation":"Forces this client to use path-style addressing for buckets.","type":"boolean"},"UseArnRegion":{"documentation":"Enables this client to use an ARN\'s region when constructing an endpoint instead of the client\'s configured region.","type":"boolean"}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json":
/*!*********************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/s3-2006-03-01.paginators.json ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"pagination":{"ListBuckets":{"result_key":"Buckets"},"ListDirectoryBuckets":{"input_token":"ContinuationToken","limit_key":"MaxDirectoryBuckets","output_token":"ContinuationToken","result_key":"Buckets"},"ListMultipartUploads":{"input_token":["KeyMarker","UploadIdMarker"],"limit_key":"MaxUploads","more_results":"IsTruncated","output_token":["NextKeyMarker","NextUploadIdMarker"],"result_key":["Uploads","CommonPrefixes"]},"ListObjectVersions":{"input_token":["KeyMarker","VersionIdMarker"],"limit_key":"MaxKeys","more_results":"IsTruncated","output_token":["NextKeyMarker","NextVersionIdMarker"],"result_key":["Versions","DeleteMarkers","CommonPrefixes"]},"ListObjects":{"input_token":"Marker","limit_key":"MaxKeys","more_results":"IsTruncated","output_token":"NextMarker || Contents[-1].Key","result_key":["Contents","CommonPrefixes"]},"ListObjectsV2":{"input_token":"ContinuationToken","limit_key":"MaxKeys","output_token":"NextContinuationToken","result_key":["Contents","CommonPrefixes"]},"ListParts":{"input_token":"PartNumberMarker","limit_key":"MaxParts","more_results":"IsTruncated","output_token":"NextPartNumberMarker","result_key":"Parts"}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json":
/*!*******************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/s3-2006-03-01.waiters2.json ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"version":2,"waiters":{"BucketExists":{"delay":5,"operation":"HeadBucket","maxAttempts":20,"acceptors":[{"expected":200,"matcher":"status","state":"success"},{"expected":301,"matcher":"status","state":"success"},{"expected":403,"matcher":"status","state":"success"},{"expected":404,"matcher":"status","state":"retry"}]},"BucketNotExists":{"delay":5,"operation":"HeadBucket","maxAttempts":20,"acceptors":[{"expected":404,"matcher":"status","state":"success"}]},"ObjectExists":{"delay":5,"operation":"HeadObject","maxAttempts":20,"acceptors":[{"expected":200,"matcher":"status","state":"success"},{"expected":404,"matcher":"status","state":"retry"}]},"ObjectNotExists":{"delay":5,"operation":"HeadObject","maxAttempts":20,"acceptors":[{"expected":404,"matcher":"status","state":"success"}]}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/sts-2011-06-15.min.json":
/*!***************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/sts-2011-06-15.min.json ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"version":"2.0","metadata":{"apiVersion":"2011-06-15","endpointPrefix":"sts","globalEndpoint":"sts.amazonaws.com","protocol":"query","serviceAbbreviation":"AWS STS","serviceFullName":"AWS Security Token Service","serviceId":"STS","signatureVersion":"v4","uid":"sts-2011-06-15","xmlNamespace":"https://sts.amazonaws.com/doc/2011-06-15/"},"operations":{"AssumeRole":{"input":{"type":"structure","required":["RoleArn","RoleSessionName"],"members":{"RoleArn":{},"RoleSessionName":{},"PolicyArns":{"shape":"S4"},"Policy":{},"DurationSeconds":{"type":"integer"},"Tags":{"shape":"S8"},"TransitiveTagKeys":{"type":"list","member":{}},"ExternalId":{},"SerialNumber":{},"TokenCode":{},"SourceIdentity":{},"ProvidedContexts":{"type":"list","member":{"type":"structure","members":{"ProviderArn":{},"ContextAssertion":{}}}}}},"output":{"resultWrapper":"AssumeRoleResult","type":"structure","members":{"Credentials":{"shape":"Sl"},"AssumedRoleUser":{"shape":"Sq"},"PackedPolicySize":{"type":"integer"},"SourceIdentity":{}}}},"AssumeRoleWithSAML":{"input":{"type":"structure","required":["RoleArn","PrincipalArn","SAMLAssertion"],"members":{"RoleArn":{},"PrincipalArn":{},"SAMLAssertion":{"type":"string","sensitive":true},"PolicyArns":{"shape":"S4"},"Policy":{},"DurationSeconds":{"type":"integer"}}},"output":{"resultWrapper":"AssumeRoleWithSAMLResult","type":"structure","members":{"Credentials":{"shape":"Sl"},"AssumedRoleUser":{"shape":"Sq"},"PackedPolicySize":{"type":"integer"},"Subject":{},"SubjectType":{},"Issuer":{},"Audience":{},"NameQualifier":{},"SourceIdentity":{}}}},"AssumeRoleWithWebIdentity":{"input":{"type":"structure","required":["RoleArn","RoleSessionName","WebIdentityToken"],"members":{"RoleArn":{},"RoleSessionName":{},"WebIdentityToken":{"type":"string","sensitive":true},"ProviderId":{},"PolicyArns":{"shape":"S4"},"Policy":{},"DurationSeconds":{"type":"integer"}}},"output":{"resultWrapper":"AssumeRoleWithWebIdentityResult","type":"structure","members":{"Credentials":{"shape":"Sl"},"SubjectFromWebIdentityToken":{},"AssumedRoleUser":{"shape":"Sq"},"PackedPolicySize":{"type":"integer"},"Provider":{},"Audience":{},"SourceIdentity":{}}}},"DecodeAuthorizationMessage":{"input":{"type":"structure","required":["EncodedMessage"],"members":{"EncodedMessage":{}}},"output":{"resultWrapper":"DecodeAuthorizationMessageResult","type":"structure","members":{"DecodedMessage":{}}}},"GetAccessKeyInfo":{"input":{"type":"structure","required":["AccessKeyId"],"members":{"AccessKeyId":{}}},"output":{"resultWrapper":"GetAccessKeyInfoResult","type":"structure","members":{"Account":{}}}},"GetCallerIdentity":{"input":{"type":"structure","members":{}},"output":{"resultWrapper":"GetCallerIdentityResult","type":"structure","members":{"UserId":{},"Account":{},"Arn":{}}}},"GetFederationToken":{"input":{"type":"structure","required":["Name"],"members":{"Name":{},"Policy":{},"PolicyArns":{"shape":"S4"},"DurationSeconds":{"type":"integer"},"Tags":{"shape":"S8"}}},"output":{"resultWrapper":"GetFederationTokenResult","type":"structure","members":{"Credentials":{"shape":"Sl"},"FederatedUser":{"type":"structure","required":["FederatedUserId","Arn"],"members":{"FederatedUserId":{},"Arn":{}}},"PackedPolicySize":{"type":"integer"}}}},"GetSessionToken":{"input":{"type":"structure","members":{"DurationSeconds":{"type":"integer"},"SerialNumber":{},"TokenCode":{}}},"output":{"resultWrapper":"GetSessionTokenResult","type":"structure","members":{"Credentials":{"shape":"Sl"}}}}},"shapes":{"S4":{"type":"list","member":{"type":"structure","members":{"arn":{}}}},"S8":{"type":"list","member":{"type":"structure","required":["Key","Value"],"members":{"Key":{},"Value":{}}}},"Sl":{"type":"structure","required":["AccessKeyId","SecretAccessKey","SessionToken","Expiration"],"members":{"AccessKeyId":{},"SecretAccessKey":{"type":"string","sensitive":true},"SessionToken":{},"Expiration":{"type":"timestamp"}}},"Sq":{"type":"structure","required":["AssumedRoleId","Arn"],"members":{"AssumedRoleId":{},"Arn":{}}}}}');

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json":
/*!**********************************************************************!*\
  !*** ../../node_modules/aws-sdk/apis/sts-2011-06-15.paginators.json ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = {"pagination":{}};

/***/ }),

/***/ "(rsc)/../../node_modules/aws-sdk/lib/region_config_data.json":
/*!**************************************************************!*\
  !*** ../../node_modules/aws-sdk/lib/region_config_data.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"rules":{"*/*":{"endpoint":"{service}.{region}.amazonaws.com"},"cn-*/*":{"endpoint":"{service}.{region}.amazonaws.com.cn"},"eu-isoe-*/*":"euIsoe","us-iso-*/*":"usIso","us-isob-*/*":"usIsob","us-isof-*/*":"usIsof","*/budgets":"globalSSL","*/cloudfront":"globalSSL","*/sts":"globalSSL","*/importexport":{"endpoint":"{service}.amazonaws.com","signatureVersion":"v2","globalEndpoint":true},"*/route53":"globalSSL","cn-*/route53":{"endpoint":"{service}.amazonaws.com.cn","globalEndpoint":true,"signingRegion":"cn-northwest-1"},"us-gov-*/route53":"globalGovCloud","us-iso-*/route53":{"endpoint":"{service}.c2s.ic.gov","globalEndpoint":true,"signingRegion":"us-iso-east-1"},"us-isob-*/route53":{"endpoint":"{service}.sc2s.sgov.gov","globalEndpoint":true,"signingRegion":"us-isob-east-1"},"*/waf":"globalSSL","*/iam":"globalSSL","cn-*/iam":{"endpoint":"{service}.cn-north-1.amazonaws.com.cn","globalEndpoint":true,"signingRegion":"cn-north-1"},"us-iso-*/iam":{"endpoint":"{service}.us-iso-east-1.c2s.ic.gov","globalEndpoint":true,"signingRegion":"us-iso-east-1"},"us-gov-*/iam":"globalGovCloud","*/ce":{"endpoint":"{service}.us-east-1.amazonaws.com","globalEndpoint":true,"signingRegion":"us-east-1"},"cn-*/ce":{"endpoint":"{service}.cn-northwest-1.amazonaws.com.cn","globalEndpoint":true,"signingRegion":"cn-northwest-1"},"us-gov-*/sts":{"endpoint":"{service}.{region}.amazonaws.com"},"us-gov-west-1/s3":"s3signature","us-west-1/s3":"s3signature","us-west-2/s3":"s3signature","eu-west-1/s3":"s3signature","ap-southeast-1/s3":"s3signature","ap-southeast-2/s3":"s3signature","ap-northeast-1/s3":"s3signature","sa-east-1/s3":"s3signature","us-east-1/s3":{"endpoint":"{service}.amazonaws.com","signatureVersion":"s3"},"us-east-1/sdb":{"endpoint":"{service}.amazonaws.com","signatureVersion":"v2"},"*/sdb":{"endpoint":"{service}.{region}.amazonaws.com","signatureVersion":"v2"},"*/resource-explorer-2":"dualstackByDefault","*/kendra-ranking":"dualstackByDefault","*/internetmonitor":"dualstackByDefault","*/codecatalyst":"globalDualstackByDefault"},"fipsRules":{"*/*":"fipsStandard","us-gov-*/*":"fipsStandard","us-iso-*/*":{"endpoint":"{service}-fips.{region}.c2s.ic.gov"},"us-iso-*/dms":"usIso","us-isob-*/*":{"endpoint":"{service}-fips.{region}.sc2s.sgov.gov"},"us-isob-*/dms":"usIsob","cn-*/*":{"endpoint":"{service}-fips.{region}.amazonaws.com.cn"},"*/api.ecr":"fips.api.ecr","*/api.sagemaker":"fips.api.sagemaker","*/batch":"fipsDotPrefix","*/eks":"fipsDotPrefix","*/models.lex":"fips.models.lex","*/runtime.lex":"fips.runtime.lex","*/runtime.sagemaker":{"endpoint":"runtime-fips.sagemaker.{region}.amazonaws.com"},"*/iam":"fipsWithoutRegion","*/route53":"fipsWithoutRegion","*/transcribe":"fipsDotPrefix","*/waf":"fipsWithoutRegion","us-gov-*/transcribe":"fipsDotPrefix","us-gov-*/api.ecr":"fips.api.ecr","us-gov-*/models.lex":"fips.models.lex","us-gov-*/runtime.lex":"fips.runtime.lex","us-gov-*/access-analyzer":"fipsWithServiceOnly","us-gov-*/acm":"fipsWithServiceOnly","us-gov-*/acm-pca":"fipsWithServiceOnly","us-gov-*/api.sagemaker":"fipsWithServiceOnly","us-gov-*/appconfig":"fipsWithServiceOnly","us-gov-*/application-autoscaling":"fipsWithServiceOnly","us-gov-*/autoscaling":"fipsWithServiceOnly","us-gov-*/autoscaling-plans":"fipsWithServiceOnly","us-gov-*/batch":"fipsWithServiceOnly","us-gov-*/cassandra":"fipsWithServiceOnly","us-gov-*/clouddirectory":"fipsWithServiceOnly","us-gov-*/cloudformation":"fipsWithServiceOnly","us-gov-*/cloudshell":"fipsWithServiceOnly","us-gov-*/cloudtrail":"fipsWithServiceOnly","us-gov-*/config":"fipsWithServiceOnly","us-gov-*/connect":"fipsWithServiceOnly","us-gov-*/databrew":"fipsWithServiceOnly","us-gov-*/dlm":"fipsWithServiceOnly","us-gov-*/dms":"fipsWithServiceOnly","us-gov-*/dynamodb":"fipsWithServiceOnly","us-gov-*/ec2":"fipsWithServiceOnly","us-gov-*/eks":"fipsWithServiceOnly","us-gov-*/elasticache":"fipsWithServiceOnly","us-gov-*/elasticbeanstalk":"fipsWithServiceOnly","us-gov-*/elasticloadbalancing":"fipsWithServiceOnly","us-gov-*/elasticmapreduce":"fipsWithServiceOnly","us-gov-*/events":"fipsWithServiceOnly","us-gov-*/fis":"fipsWithServiceOnly","us-gov-*/glacier":"fipsWithServiceOnly","us-gov-*/greengrass":"fipsWithServiceOnly","us-gov-*/guardduty":"fipsWithServiceOnly","us-gov-*/identitystore":"fipsWithServiceOnly","us-gov-*/imagebuilder":"fipsWithServiceOnly","us-gov-*/kafka":"fipsWithServiceOnly","us-gov-*/kinesis":"fipsWithServiceOnly","us-gov-*/logs":"fipsWithServiceOnly","us-gov-*/mediaconvert":"fipsWithServiceOnly","us-gov-*/monitoring":"fipsWithServiceOnly","us-gov-*/networkmanager":"fipsWithServiceOnly","us-gov-*/organizations":"fipsWithServiceOnly","us-gov-*/outposts":"fipsWithServiceOnly","us-gov-*/participant.connect":"fipsWithServiceOnly","us-gov-*/ram":"fipsWithServiceOnly","us-gov-*/rds":"fipsWithServiceOnly","us-gov-*/redshift":"fipsWithServiceOnly","us-gov-*/resource-groups":"fipsWithServiceOnly","us-gov-*/runtime.sagemaker":"fipsWithServiceOnly","us-gov-*/serverlessrepo":"fipsWithServiceOnly","us-gov-*/servicecatalog-appregistry":"fipsWithServiceOnly","us-gov-*/servicequotas":"fipsWithServiceOnly","us-gov-*/sns":"fipsWithServiceOnly","us-gov-*/sqs":"fipsWithServiceOnly","us-gov-*/ssm":"fipsWithServiceOnly","us-gov-*/streams.dynamodb":"fipsWithServiceOnly","us-gov-*/sts":"fipsWithServiceOnly","us-gov-*/support":"fipsWithServiceOnly","us-gov-*/swf":"fipsWithServiceOnly","us-gov-west-1/states":"fipsWithServiceOnly","us-iso-east-1/elasticfilesystem":{"endpoint":"elasticfilesystem-fips.{region}.c2s.ic.gov"},"us-gov-west-1/organizations":"fipsWithServiceOnly","us-gov-west-1/route53":{"endpoint":"route53.us-gov.amazonaws.com"},"*/resource-explorer-2":"fipsDualstackByDefault","*/kendra-ranking":"dualstackByDefault","*/internetmonitor":"dualstackByDefault","*/codecatalyst":"fipsGlobalDualstackByDefault"},"dualstackRules":{"*/*":{"endpoint":"{service}.{region}.api.aws"},"cn-*/*":{"endpoint":"{service}.{region}.api.amazonwebservices.com.cn"},"*/s3":"dualstackLegacy","cn-*/s3":"dualstackLegacyCn","*/s3-control":"dualstackLegacy","cn-*/s3-control":"dualstackLegacyCn","ap-south-1/ec2":"dualstackLegacyEc2","eu-west-1/ec2":"dualstackLegacyEc2","sa-east-1/ec2":"dualstackLegacyEc2","us-east-1/ec2":"dualstackLegacyEc2","us-east-2/ec2":"dualstackLegacyEc2","us-west-2/ec2":"dualstackLegacyEc2"},"dualstackFipsRules":{"*/*":{"endpoint":"{service}-fips.{region}.api.aws"},"cn-*/*":{"endpoint":"{service}-fips.{region}.api.amazonwebservices.com.cn"},"*/s3":"dualstackFipsLegacy","cn-*/s3":"dualstackFipsLegacyCn","*/s3-control":"dualstackFipsLegacy","cn-*/s3-control":"dualstackFipsLegacyCn"},"patterns":{"globalSSL":{"endpoint":"https://{service}.amazonaws.com","globalEndpoint":true,"signingRegion":"us-east-1"},"globalGovCloud":{"endpoint":"{service}.us-gov.amazonaws.com","globalEndpoint":true,"signingRegion":"us-gov-west-1"},"s3signature":{"endpoint":"{service}.{region}.amazonaws.com","signatureVersion":"s3"},"euIsoe":{"endpoint":"{service}.{region}.cloud.adc-e.uk"},"usIso":{"endpoint":"{service}.{region}.c2s.ic.gov"},"usIsob":{"endpoint":"{service}.{region}.sc2s.sgov.gov"},"usIsof":{"endpoint":"{service}.{region}.csp.hci.ic.gov"},"fipsStandard":{"endpoint":"{service}-fips.{region}.amazonaws.com"},"fipsDotPrefix":{"endpoint":"fips.{service}.{region}.amazonaws.com"},"fipsWithoutRegion":{"endpoint":"{service}-fips.amazonaws.com"},"fips.api.ecr":{"endpoint":"ecr-fips.{region}.amazonaws.com"},"fips.api.sagemaker":{"endpoint":"api-fips.sagemaker.{region}.amazonaws.com"},"fips.models.lex":{"endpoint":"models-fips.lex.{region}.amazonaws.com"},"fips.runtime.lex":{"endpoint":"runtime-fips.lex.{region}.amazonaws.com"},"fipsWithServiceOnly":{"endpoint":"{service}.{region}.amazonaws.com"},"dualstackLegacy":{"endpoint":"{service}.dualstack.{region}.amazonaws.com"},"dualstackLegacyCn":{"endpoint":"{service}.dualstack.{region}.amazonaws.com.cn"},"dualstackFipsLegacy":{"endpoint":"{service}-fips.dualstack.{region}.amazonaws.com"},"dualstackFipsLegacyCn":{"endpoint":"{service}-fips.dualstack.{region}.amazonaws.com.cn"},"dualstackLegacyEc2":{"endpoint":"api.ec2.{region}.aws"},"dualstackByDefault":{"endpoint":"{service}.{region}.api.aws"},"fipsDualstackByDefault":{"endpoint":"{service}-fips.{region}.api.aws"},"globalDualstackByDefault":{"endpoint":"{service}.global.api.aws"},"fipsGlobalDualstackByDefault":{"endpoint":"{service}-fips.global.api.aws"}}}');

/***/ })

};
;